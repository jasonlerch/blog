[
  {
    "objectID": "posts/copy-select-files-pydpiper/index.html",
    "href": "posts/copy-select-files-pydpiper/index.html",
    "title": "Copying important pydpiper outputs",
    "section": "",
    "text": "A common scenario is to run a pydpiper pipeline, such as MBM.py, on a cluster, but to want to run the statistical analyses on a different computer. These pipelines can have a pretty hefty disk usage footprint, so it’s not always wise to copy the entire output, but to only get the needed bits. These needed bits are typically:\n\nthe final nonlinear average produced from the data - this will be used to visualize stats maps on\nthe atlas labels for the final nonlinear average, also for visualization purposes\nthe blurred Jacobian determinants (usually both absolute and relative)\nthe atlas labels for each image in the pipeline\n\nrsync to the rescue. Below are the two rsync commands I use to get just those files described above. In this example, I ran the pipeline on ComputeCanada’s graham cluster, in a folder called myproject on /scratch/jlerch, with the pipeline name as mypipe-2023-10-10.\n\n# first the final non-linear average and it's corresponding atlas labels\nrsync -uvrm --include=\"*/\" --include=\"*nlin-3.mnc\" --include=\"*voted*\" --exclude=\"*\" jlerch@graham.computecanada.ca:/scratch\n/jlerch/myproject/mypipe-2023-10-19_nlin/ .\n\n# next all the processed files, keeping the 0.2mm blurred jacobians\n# and the atlas labels per file\nrsync -uvr --include=\"*/\" --include=\"*voted*\" --include=\"*fwhm0.2.mnc\" --exclude=\"*\" jlerch@graham.computecanada.ca:/scratch\n/jlerch/myproject/mypipe-2023-10-19_processed/ .\n\nThe resulting output will keep the directory structure of the pipeline, but only copy the desired few files. Obviously it is easy to modify those commands to also keep, for example, the different resampled files. Lots more help out there on how to tune rsync to your purposes"
  },
  {
    "objectID": "posts/better-MRIcrotome-outlines/index.html",
    "href": "posts/better-MRIcrotome-outlines/index.html",
    "title": "Better MRIcrotome brain outlines",
    "section": "",
    "text": "Brain outlines are used routinely in MRIcrotome sliceSeries for showing slice locations, plus they can have value in their own right for replacing the full grey-scale background with an outline. By default the outlines take a bit of trial and error to find the right isointensity lines; in some cases no truly good outlines can be generated. Here I will show an alternate way of generating an outline based on having a hierarchical segmentation present."
  },
  {
    "objectID": "posts/better-MRIcrotome-outlines/index.html#setting-up",
    "href": "posts/better-MRIcrotome-outlines/index.html#setting-up",
    "title": "Better MRIcrotome brain outlines",
    "section": "1 Setting up",
    "text": "1 Setting up\nFirst we’ll load an existing dataset and generate the hierarchical segmentation representations. For those at Oxford using the BMRC cluster you can follow along, for anyone else you’ll have to substitute your own dataset.\nFirst step, read the information about the scans.\n\nlibrary(tidyverse)\ngfw2 &lt;- read_csv(\"exercise-gfw2.csv\")\n\nSo at this point we have the gf variable containing info about all our files, and gfw2 subsetting them just to the two week timepoint (this is from mice being given access to an exercise wheel).\nNext we’ll load the final non-linear average, the segmented final nonlinear average, and build all the volumes.\n\nlibrary(RMINC)\n\n# read the anatomy and labels \nnlin &lt;- mincArray(mincGetVolume(\"/well/lerch/users/yrf023/plasticity/plasticity-2023-03-10_nlin/plasticity-2023-03-10-nlin-3.mnc\"))\nlabels &lt;- mincArray(mincGetVolume(\"/well/lerch/users/yrf023/plasticity/plasticity-2023-03-10_nlin/plasticity-2023-03-10-nlin-3/plasticity-2023-03-10-nlin-3_voted.mnc\"))\n\n# get all the volumes\nallvolsw2 &lt;- anatGetAll(gfw2$labels, defs=\"/well/lerch/shared/tools/atlases/Dorr_2008_Steadman_2013_Ullmann_2013/mappings/Dorr_2008_Steadman_2013_Ullmann_2013_mapping_of_labels.csv\", method=\"labels\")\n\nAnd now we put the labelled atlas into it’s hierarchy.\n\n# there's a warning that spews everywhere that needs to be fixed in RMINC, but causes no harm.\n# so for now I'll suppress these warnings\nsuppressWarnings({\nhdefs &lt;- makeMICeDefsHierachical(\"/well/lerch/shared/tools/atlases/Dorr_2008_Steadman_2013_Ullmann_2013/mappings/Dorr_2008_Steadman_2013_Ullmann_2013_mapping_of_labels.csv\", \"/well/lerch/shared/tools/atlases/Allen_Brain/Allen_hierarchy_definitions.json\")\nhvolsw2 &lt;- addVolumesToHierarchy(hdefs, allvolsw2)\n})"
  },
  {
    "objectID": "posts/better-MRIcrotome-outlines/index.html#a-basic-example",
    "href": "posts/better-MRIcrotome-outlines/index.html#a-basic-example",
    "title": "Better MRIcrotome brain outlines",
    "section": "2 A basic example",
    "text": "2 A basic example\nLet’s do a basic example of running a simple linear model, showing it on a brain alongside a slice indicator and legend.\n\nlibrary(MRIcrotome)\n\n\nAttaching package: 'MRIcrotome'\n\n\nThe following object is masked from 'package:graphics':\n\n    legend\n\nlibrary(grid)\n\n# a simple linear model against group\nvs &lt;- mincLm(reljacs ~ group, gfw2, mask = \"/well/lerch/users/yrf023/plasticity/plasticity-2023-03-10_nlin/plasticity-2023-03-10-nlin-3_mask.mnc\")\n\nMethod: lm\nNumber of volumes: 18\nVolume sizes: 161 319 210\nN: 18 P: 2\nIn slice \n 0  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97  98  99  100  101  102  103  104  105  106  107  108  109  110  111  112  113  114  115  116  117  118  119  120  121  122  123  124  125  126  127  128  129  130  131  132  133  134  135  136  137  138  139  140  141  142  143  144  145  146  147  148  149  150  151  152  153  154  155  156  157  158  159  160 \nDone\n\n# show it as a 3 by 3 slice series\nsliceSeries(nrow=3, ncol=3, begin=60, end=250) %&gt;%\n  anatomy(nlin, low=700, high=1400) %&gt;%\n  overlay(mincArray(vs, \"tvalue-grouprunning\"), low=2, high=6, symmetric=T) %&gt;%\n  legend(\"t-statistics\") %&gt;%\n  contourSliceIndicator(nlin, levels=c(700, 1400)) %&gt;%\n  draw()\n\n\n\n\nSo that looks roughly right - the slice indicator, at the top right, gives a pretty good idea of where the brain is located. But it’s not great; let’s try a few different contours to see what might look better.\n\nsliceSeries(nrow=3, ncol=3, begin=60, end=250) %&gt;%\n  anatomy(nlin, low=700, high=1400) %&gt;%\n  contours(nlin, levels=c(700, 900, 1100, 1400), col = c(\"red\", \"green\", \"blue\", \"purple\")) %&gt;%\n  draw()\n\n\n\n\nLots of fiddling could be done getting the exact right intensity contours, but it’ll be a challenge to get it just right."
  },
  {
    "objectID": "posts/better-MRIcrotome-outlines/index.html#contours-based-on-segmentations",
    "href": "posts/better-MRIcrotome-outlines/index.html#contours-based-on-segmentations",
    "title": "Better MRIcrotome brain outlines",
    "section": "3 Contours based on segmentations",
    "text": "3 Contours based on segmentations\nSo here’s the trick - the perfect outline is inherently in our segmentation. First, let’s view the segmentation\n\nsliceSeries(nrow=5, ncol=1, begin=60, end=250) %&gt;%\n  anatomy(nlin, low=700, high=1400) %&gt;%\n  addtitle(\"anatomy\") %&gt;%\n  sliceSeries() %&gt;%\n  anatomy() %&gt;%\n  overlay(hanatToVolume(hvolsw2, labels, \"color_hex_triplet\"), low=0, high=1) %&gt;%\n  addtitle(\"segmentation\") %&gt;%\n  draw()\n\n\n\n\nNow the key part here is that the labels are in a hierarchy. A clean outline could thus be taken if we use just the first parts of that hierarchy:\n\nlibrary(data.tree)\n# create a copy of the hierarchical tree\nhdefs2 &lt;- Clone(hvolsw2)\n# and prune it to just the first four levels \nhdefs2$Prune(function(x) x$level&lt;4)\n\nWarning: 'hdefs2$Prune' is deprecated.\nUse 'Prune(node, ...)' instead.\nSee help(\"Deprecated\")\n\n\n[1] 495\n\n# print it to see what it looks like\nprint(hdefs2, limit=Inf)\n\n                                               levelName\n1  root2                                                \n2   &lt;U+00A6&gt;--Basic cell groups and regions             \n3   &lt;U+00A6&gt;   &lt;U+00A6&gt;--Cerebrum                       \n4   &lt;U+00A6&gt;   &lt;U+00A6&gt;--Brain stem                     \n5   &lt;U+00A6&gt;   &lt;U+00B0&gt;--Cerebellum                     \n6   &lt;U+00A6&gt;--fiber tracts                              \n7   &lt;U+00A6&gt;   &lt;U+00A6&gt;--cranial nerves                 \n8   &lt;U+00A6&gt;   &lt;U+00A6&gt;--medial forebrain bundle system \n9   &lt;U+00A6&gt;   &lt;U+00A6&gt;--cerebellum related fiber tracts\n10  &lt;U+00A6&gt;   &lt;U+00A6&gt;--lateral forebrain bundle system\n11  &lt;U+00A6&gt;   &lt;U+00B0&gt;--extrapyramidal fiber systems   \n12  &lt;U+00B0&gt;--ventricular systems                       \n13      &lt;U+00A6&gt;--cerebral aqueduct                     \n14      &lt;U+00A6&gt;--fourth ventricle                      \n15      &lt;U+00A6&gt;--lateral ventricle                     \n16      &lt;U+00B0&gt;--third ventricle                       \n\n\nNow create an outline based on this pruned hierarchy\n\nsliceSeries(nrow=5, ncol=1, begin=60, end=250) %&gt;%\n  anatomy(nlin, low=700, high=1400) %&gt;%\n  sliceSeries() %&gt;%\n  anatomy() %&gt;%\n  overlay(hanatToVolume(hvolsw2, labels, \"color_hex_triplet\"), low=0, high=1) %&gt;%\n  sliceSeries() %&gt;% anatomy() %&gt;%\n  contours(hanatToVolume(hdefs2, labels, \"position\"), levels=c(0.5, 1.5, 2.5, 3.5), col=\"red\") %&gt;%\n  draw()\n\n\n\n\nAnd there you have an almost perfect outline of the brain. So let’s recreate that earlier figure with the cleaner outline:\n\nsliceSeries(nrow=3, ncol=3, begin=60, end=250) %&gt;%\n  anatomy(nlin, low=700, high=1400) %&gt;%\n  overlay(mincArray(vs, \"tvalue-grouprunning\"), low=2, high=6, symmetric=T) %&gt;%\n  legend(\"t-statistics\") %&gt;%\n  contourSliceIndicator(hanatToVolume(hdefs2, labels, \"position\"), levels=c(0.5, 1.5, 2.5, 3.5)) %&gt;%\n  draw()\n\n\n\n\nVoila."
  },
  {
    "objectID": "posts/pydpiper-init-model/index.html",
    "href": "posts/pydpiper-init-model/index.html",
    "title": "Creating a pydpiper init model",
    "section": "",
    "text": "Any pydpiper pipeline, such as MBM.py, requires an initial model. The initial model is used in the 6 parameter registration step (often referred to simply as lsq6) to reorient the data from native space into common space via a rigid body transformation. In most cases the use of the initial model ends there, but if no MAGeT segmentation is used then the mask that is present in the initial model will continue to be employed.\nFor most pipeline runs an existing initial model can be used. A new initial model has to be created if you have a new type of acquisition where the contrast, resolution, or orientation in native space is different from any of the existing initial models. Here are the instructions for how to do that."
  },
  {
    "objectID": "posts/pydpiper-init-model/index.html#the-two-coordinate-spaces-of-an-initial-model",
    "href": "posts/pydpiper-init-model/index.html#the-two-coordinate-spaces-of-an-initial-model",
    "title": "Creating a pydpiper init model",
    "section": "The two coordinate spaces of an initial model",
    "text": "The two coordinate spaces of an initial model\nInitial models have two coordinate spaces: a standard space and a native space. Native space is as the image comes off the scanner. There are different positions that a rodent can be loaded into the scanner (supine or not), and ex-vivo samples can be in different orientations still. Standard space is the standard orientation in which our atlases are in."
  },
  {
    "objectID": "posts/pydpiper-init-model/index.html#the-internals-of-an-initial-model",
    "href": "posts/pydpiper-init-model/index.html#the-internals-of-an-initial-model",
    "title": "Creating a pydpiper init model",
    "section": "The internals of an initial model",
    "text": "The internals of an initial model\nHere are the files in an initial model directory, using the oxford-model-2023 as an example:\n\n\n\n\n\n\n\nFilename\nDescription\n\n\n\n\noxford_t2w_mouse_60micron.mnc\nThe image in common space.\n\n\noxford_t2w_mouse_60micron_mask.mnc\nA (brain) mask of the image in common space. Voxels inside the mask have a value of 1, outside the mask a value of 0.\n\n\noxford_t2w_mouse_60micron_native.mnc\nThe image in native space.\n\n\noxford_t2w_mouse_60micron_native_mask.mnc\nA (brain) mask of the image in native space.\n\n\noxford_t2w_mouse_60micron_native_to_standard.xfm\nThe transform that moves from native space to standard/common space.\n\n\n\nHere’s a look at the four image files"
  },
  {
    "objectID": "posts/pydpiper-init-model/index.html#steps-to-create-a-new-initial-model",
    "href": "posts/pydpiper-init-model/index.html#steps-to-create-a-new-initial-model",
    "title": "Creating a pydpiper init model",
    "section": "Steps to create a new initial model",
    "text": "Steps to create a new initial model\nTo create a new initial model you require an image, a mask for that image, and a transform that moves between native and standard space. Since creating a new mask from scratch is tedious, my usual process for creating a new initial model is to:\n\nFind a good native image to use for my native space.\nCreate the transform that goes from native to standard space.\nResample the native image to standard space using that newly created transform\nResample the mask from an existing initial model into both standard and native space.\nOptionally replace the native and standard space image with a groupwise average image after running a pydpiper pipeline."
  },
  {
    "objectID": "posts/pydpiper-init-model/index.html#a-worked-example",
    "href": "posts/pydpiper-init-model/index.html#a-worked-example",
    "title": "Creating a pydpiper init model",
    "section": "A worked example",
    "text": "A worked example\nI am going to create a new init model for some volumetric data acquired by Antoine Cherix. Due to time constraints he acquired a quick structural MRI at 150μm isotropic resolution. For an effective pipeline we thus need to create a new initial model for this dataset.\n\nStep 1: Create directory and copy native file\nFirst I will take a fairly randomly selected native file, and copy it to a fresh directory while renaming it to follow the standard naming structure and converting it to MINC. (And I’m running this on the BMRC cluster, where the MINC tools are living inside a container, so I shell into the container first).\n\n# on BMRC only - enter a shell inside our container\nsingularity shell --bind /well,/gpfs3 /well/lerch/shared/tools/mice.sif_latest.sif\n\nmkdir oxford-in-vivo-150um\nitk_convert INNA84g_10_T2_STRUCT_ISO_150x150x150_TEeff22ms/pdata/1/nifti/NIRIcKO_INNA8_4g_20230803_NIRIcKO_Females2_POPECS2_10_1_1.nii oxford-in-vivo-150um/oxford-in-vivo-150um_native.mnc\n\n\n\nStep 2: Create the native to standard transform\nThere are two easy ways to create the native to standard transform. The first is to do a manual registration in register, and the second to create the transform using param2xfm. I will do the latter. First, let’s look at the native file compared to the existing native files\n\nThe three images on the left are three different native files, showing just how crazy Bruker’s coordinate space is. And it also shows that 150μm kinda sucks, but should be good enough for our pipelines.\nMost importantly, it gives us a hint at the rotation - in this case 90 degrees around the X axis. So now we have to create a transform that encompasses that rotation. But in addition to the rotation, we also have to set the centre of the rotation (i.e. around which point the rotation is applied), and any possible translations. These latter two are obtained by estimating the centre of gravity of the two images. First, the centre of gravity of our new 150μm image:\n\nvolume_cog oxford-in-vivo-150um_native.mnc \n\nThis outputs -0.213479 -5.255886 0.921224.\nThen the same for our standard orientation reference\n\nvolume_cog ../oxford_memri_60um_init_model/oxford_memri_60um.mnc \n\nThis outputs -0.123746 0.995725 0.272954.\nLastly we’ll need to compute the difference between those two centres of gravity, which comes out to 0.089733  6.251611 -0.648270.\nNow we can create our transform\n\nparam2xfm -center -0.213479 -5.255886 0.921224 -translation 0.089733  6.251611 -0.648270  -rotation -90 0 0 test1.xfm\n\nNow, to look at the file, we need to resample it. But first we make our life easier by creating a resampling target - an image that looks exactly like our standard space reference but is sampled at 150μm since that is the resolution we’ll be working in.\n\n# the resampling target\nautocrop -isostep 0.15 ../oxford_memri_60um_init_model/oxford_memri_60um.mnc rsltarget.mnc\n\n# and the resample command itself\nmincresample -clobber -like rsltarget.mnc -transform test1.xfm oxford-in-vivo-150um_native.mnc test1.mnc\n\nLet’s take a look\n\nIt looks like we’re mostly right, but that 90 degrees is a bit under-rotated. Let’s hazard a guess at 100 degrees instead\n\nparam2xfm -clobber -center -0.213479 -5.255886 0.921224 -translation 0.089733  6.251611 -0.648270  -rotation -100 0 0 test1.xfm\nmincresample -clobber -like rsltarget.mnc -transform test1.xfm oxford-in-vivo-150um_native.mnc test1.mnc\n\nAnd another look\n\nThat looks better - good enough to move on.\nNow a quick aside - sometimes the necessary rotations are elusive as the mind bends trying to get that right from looking at 2D slices. Or because coffee hasn’t kicked in yet. To automatically determine the right transform you could use rotational_minctracc.py like so:\n\nrotational_minctracc.py oxford-in-vivo-150um_native.mnc ../oxford-model-2023/oxford_t2w_mouse_60micron.mnc test2.xfm test2.mnc -r 180 -i 90\n\nThis outputs a transform (test2.xfm) and a resampled file (test2.mnc). It tells it to search for 180 degrees (-r 180) in each dimension with 90 degree intervals (-i 90). What it does under the hood is to create a series of transforms with param2xfm and then tries to improve them with a quick call to minctracc.\nIn this case the output looks the same as as the 90 degree rotation, so slightly under-rotated. The final bit spit out on the command line looks like this:\n{'xcorr': 0.8489107815, 'transform': '//tmp/slurm-53038763/rot_305398/rot_2.xfm', 'resampled': '//tmp/slurm-53038763/rot_305398/rot_6.mnc', 'xrot': -90, 'yrot': 0, 'zrot': 0, 'coor_src': array([-0.1961  , -5.278746,  0.905191], dtype=float32), 'coor_trgt': array([0.03, 0.51, 0.6 ], dtype=float32)}\nWhich gives the hint that it’s a -90 on X that is needed, which you can then play with if the final transform doesn’t look right. You could alternately decrease the rotation range to, say, 10 degrees (-i 10), which would like give a very good transform, but it would take a long time to run.\n\n\nStep 3: resampling files\nOK, we now have our native image and a transform to take it to standard space. Time to create all the necessary files.\nFirst, we rename our test transform and the test resample to have the appropriate names\n\nmv test1.mnc oxford-in-vivo-150um.mnc    \nmv test1.xfm oxford-in-vivo-150um_native_to_standard.xfm\n\nThen we port over the masks\n\n# first in standard space\nmincresample ../oxford-model-2023/oxford_t2w_mouse_60micron_mask.mnc -like oxford-in-vivo-150um.mnc oxford-in-vivo-150um_mask.mnc -keep_real_range -nearest_neighbour\n\n# next in native space\nmincresample ../oxford-model-2023/oxford_t2w_mouse_60micron_mask.mnc -like oxford-in-vivo-150um_native.mnc -transform oxford-in-vivo-150um_native_to_standard.xfm -invert oxford-in-vivo-150um_native_mask.mnc -keep_real_range -nearest_neighbour\n\nAnd here’s what it all looks like\n\nThere are potentially some unnecessary files to be deleted (like the resampling target or different transform tests), but otherwise the init model is now finished and ready to be used in a pipeline."
  },
  {
    "objectID": "posts/minc-on-bmrc/index.html",
    "href": "posts/minc-on-bmrc/index.html",
    "title": "MINC tools on BMRC cluster",
    "section": "",
    "text": "Updated Oct 21, 2024, to reflect OS updates on BMRC\nSome bits and pieces on how to run the different MINC tools related to mouse imaging pipelines, prominently pydpiper, the viz tools, and RMINC, on Oxford’s BMRC cluster."
  },
  {
    "objectID": "posts/minc-on-bmrc/index.html#some-bmrc-basics",
    "href": "posts/minc-on-bmrc/index.html#some-bmrc-basics",
    "title": "MINC tools on BMRC cluster",
    "section": "Some BMRC basics",
    "text": "Some BMRC basics\nThe BMRC cluster login is described here. You obviously need an account first; how to request one is described here. Once you have an account an additional way to access BMRC is via the Open OnDemand interface, which is what I use for most tasks and will be important for visualization and RStudio.\nThree notes about what data is allowed on the BMRC cluster 1. Rodent MRI data is fine 2. Rodent video tracking data has to get approval first - so contact them before trying deeplabcut, for example. 3. Human MRI data, even if from an open dataset, has a somewhat onerous approval process in place as well before it is allowed."
  },
  {
    "objectID": "posts/minc-on-bmrc/index.html#using-minc-tools-via-the-singularity-container",
    "href": "posts/minc-on-bmrc/index.html#using-minc-tools-via-the-singularity-container",
    "title": "MINC tools on BMRC cluster",
    "section": "Using MINC tools via the singularity container",
    "text": "Using MINC tools via the singularity container\nOnce you have a shell open, there are two ways to access the MINC tools. For the majority of uses you’ll want to access them via our singularity container, located here: /well/lerch/shared/tools/mice.sif_latest.sif\nAll the main MINC tools are there, to be accessed like so:\n\nexport APPTAINER_BIND=/well/\napptainer exec /well/lerch/shared/tools/mice.sif_latest.sif mincinfo file.mnc\n\nI often set an alias to make life a bit easier:\n\nalias SE='apptainer exec /well/lerch/shared/tools/mice.sif_latest.sif'\n\nAnd then the commands can be accessed more simply\n\nSE mincinfo file.mnc"
  },
  {
    "objectID": "posts/minc-on-bmrc/index.html#using-rminc-on-bmrc",
    "href": "posts/minc-on-bmrc/index.html#using-rminc-on-bmrc",
    "title": "MINC tools on BMRC cluster",
    "section": "Using RMINC on BMRC",
    "text": "Using RMINC on BMRC\nYou can use RMINC via the container, though with the disadvantage of currently (this will be fixed once I find a bit of time) using the older R 3.6. More importantly, it’s more challenging to access the cluster queues from within the container. So R and RMINC can also be accessed via bare metal.\nTo launch RStudio, start an Open OnDemand session. Then, when prompted with this screen\n\nChoose RStudio. This will give some choices, like so:\n\n\nSelect “WIN” from the partition; not strictly necessary, but there are usually available cores with lots of RAM here\nSelect the RStudio module ending with version 4.3.2\nChange the “RAM in Gb”, the default is 4Gb, which won’t be enough. Go for 32 or even higher if you know you need lots of RAM.\n\nAt this point you’ll have an RStudio session in your web browser, running on a node on the BMRC cluster. Which is sweet.\nTo get RMINC working, you’ll need to do this once (i.e. only the first time you start an RStudio session).\n\nusethis::edit_r_profile()\n\nThis will open your R profile in the editor window. Enter these lines:\n\n.libPaths(c(\"/well/lerch/shared/tools/packages/RMINC/build/\", .libPaths()))\n\nThis will make sure that RMINC and MRIcrotome, as well as a few other packages that I’ve installed, are loadable.\nYou will occasionally, when starting a new sessions, get an error (Error in .External2(C_X11, paste0(“png::”, filename), g$width, g$height,: unable to start device PNG) when creating any kind of plot. To fix this error, run the following command\n\noptions(bitmapType='cairo')\n\n(this can also be added to your ~/.Rprofile file to avoid repeating it too often)."
  },
  {
    "objectID": "posts/minc-on-bmrc/index.html#running-pydpiper-on-bmrc",
    "href": "posts/minc-on-bmrc/index.html#running-pydpiper-on-bmrc",
    "title": "MINC tools on BMRC cluster",
    "section": "Running pydpiper on BMRC",
    "text": "Running pydpiper on BMRC\nThere are three steps to running a pydpiper pipeline on the BMRC cluster\n\nGenerate a makeflow file using one of the pydpiper pipelines, such as MBM.py\nFix a time allocation bug\nUse makeflow to run the pipeline\n\nHere’s an example of generating the makeflow file. See here for an annotation of what all the options are doing. Key here is setting the backend to be ‘makeflow’\n\nSE MBM.py --backend=makeflow --makeflow-opts='-h' --pipeline-name Yingshi-T2w-2023-08-11 --maget-registration-method minctracc --subject-matter mousebrain --init-model /well/lerch/shared/tools/initial-models/oxford-model-2023/oxford_t2w_mouse_60micron.mnc --run-maget --maget-atlas-library /well/lerch/shared/tools/atlases/Dorr_2008_Steadman_2013_Ullmann_2013_Richards_2011_Qiu_2016_Egan_2015_40micron/ex-vivo/ --maget-nlin-protocol /well/lerch/shared/tools/protocols/nonlinear/default_nlin_MAGeT_minctracc_prot.csv --maget-masking-nlin-protocol /well/lerch/shared/tools/protocols/nonlinear/default_nlin_MAGeT_minctracc_prot.csv --lsq12-protocol /well/lerch/shared/tools/protocols/linear/Pydpiper_testing_default_lsq12.csv --no-common-space-registration --lsq6-simple --num-executors 1 --files /well/lerch/users/yrf023/Yingshi-tests/native/*removed.mnc\n\nNext we fix the time variable. In short, pydpiper sets the default time for some registrations to be 48 hours. Unfortunately, this cannot be overwritten with command arguments at this point. (When I have some time I’ll fix that). But since the makeflow file is just a text file, we can just do a string substitution to change it to 24 hours\n\ncat Yingshi-T2w-2023-08-11_makeflow.jx | perl -npe 's/\"wall-time\"\\: 172800/\"wall-time\": 86400/' &gt; Yingshi-T2w-2023-08-11_makeflow_fixed.jx\n\nNow that we have a fixed up makeflow file, we can run it with makeflow itself. Right now makeflow is installed as a conda environment. Before the first run, edit your ~/.condarc file to contain the following bits:\n\nchannels:\n  - conda-forge\n  - bioconda\n  - defaults\n \npkgs_dirs:\n  - /well/lerch/shared/conda/${MODULE_CPU_TYPE}/pkgs\nenvs_dirs:\n  - /well/lerch/shared/conda/${MODULE_CPU_TYPE}/envs\n\nSee here for more details.\nAssuming that the ~/.condarc file is correct, you can now set your environment for running conda.\n\n# and run via makeflow\nmodule load Anaconda3\neval \"$(conda shell.bash hook)\"\nconda activate cctools-env\n\nNow you can run makeflow itself:\n\n1makeflow -T slurm \\\n2-B '-p short,win' \\\n3--max-remote=500 \\\n4-o stderr.log \\\n5--shared-fs=/well,/gpfs3 \\\n6--singularity=/well/lerch/shared/tools/mice.sif_latest.sif \\\n7--singularity-opt='--bind=/well,/gpfs3' \\\n8--jx Yingshi-T2w-2023-08-11_makeflow_fixed.jx\n\n\n1\n\nWe tell makeflow to use the slurm backend, which is what BMRC uses.\n\n2\n\nWe tell it to use both the short and win queues\n\n3\n\nWe allow up to 500 jobs to be submitted at once.\n\n4\n\nWe capture some errors to stderr.log\n\n5\n\nWe need to tell it which filesystems are shared.\n\n6\n\nWe need to tell it run the commands itself inside the container.\n\n7\n\nWe need to tell the container which filesystems to bind.\n\n8\n\nAnd finally we pass it the fixed makeflow file.\n\n\n\n\nThat’s it - it will now run for a good while. I would thus recommend you run it inside a tmux session, so that you can log out and come back later to check on progress (or won’t lose progress if you get disconnected).\nA good way to check on the status of the pipeline is to look at the makeflowlog file that will be produced as the pipeline runs, or use ‘squeue –me’ to see which jobs are submitted to the cluster.\n(Also note, there should be a better way to run these pipelines via makeflow’s workqueue, but last I tried I couldn’t get it to run. Will return to that at some point.)"
  },
  {
    "objectID": "posts/atlas-colours-in-plots/index.html",
    "href": "posts/atlas-colours-in-plots/index.html",
    "title": "Atlas colours as plot legends",
    "section": "",
    "text": "Sometimes we want to draw data from lots of brain structures on a graph. Once you have more than ten or so drawing a legend in the usual style becomes too unwieldy as the legend becomes too big. A good shortcut is to draw each brain structure using the colours from the atlas, which in the mouse case come from the Allen institute (even though our atlas is not the Allen atlas itself).\nThe motivation for the plot I will use to illustrate how to match atlas colours comes from the series on modelling longitudinal data (see part 1 and part 2 here). I am going to show the different types of developmental trajectories we see. First, we load the data, using the same data as in those two posts.\n\n# load all the libs we will need\nlibrary(data.tree)\nlibrary(tidyverse)\nlibrary(RMINC)\nlibrary(MRIcrotome)\nlibrary(grid)\n\nload(\"brain_analysis_data_2023nov2.RData\")\n\n# the suppress warnings bit deals with a comparison in the data.tree\n# library that throws far too many warnings.\nhvols &lt;- suppressWarnings(addVolumesToHierarchy(hdefs, structvols))\n\nTo draw the trajectories of every structure we first need to put them on the same scale (otherwise the small brain structures would be invisible on a y axis designed to also accommodate brain volume). We also need to get the atlas colours into the same data frame. The basic process is as follows\n\nGet the volumes from the anatomical tree using the Get method. This will produce a matrix of n scans (224 in this case) by n brain areas in the tree (590 here).\nWe then have to z-score it using the scale function from base R.\nNext we add bits from the data that we care about back in, in particular age in this case.\nWe then turn the data into a long data frame, where rather than having one column per brain structure we have one column giving the names of the brain structure, and one column with the corresponding volumes.\nWe then have to add the colours:\n\nFirst, we get the colours using the Get method and the color_hex_triplet variable that is part of the tree, which has the Allen atlas colours corresponding to that area.\nWe then left_join it to the volumes, matching on structure name, so that every time a row with a particular structure name is found its corresponding colour is added to the data frame.\n\n\n\n# get all volumes from the tree\nscaledallvols &lt;- hvols$Get(\"volumes\") %&gt;%\n  # scale them (i.e. z-score all volumes within each struct)\n  scale() %&gt;%\n  # convert to a tibble\n  as_tibble() %&gt;%\n  # add age and subject_id back\n  mutate(age = gf$age, subject_id = gf$subject_id) %&gt;% \n  # turn it into a long data frame\n  pivot_longer(\n    c(-age, -subject_id),\n    values_to = \"volume\",\n    names_to = \"structure\"\n  ) %&gt;%\n  # add the colour variable from the tree \n  left_join(hvols$Get(\"color_hex_triplet\") %&gt;% \n              data.frame(allencolour=.) %&gt;% \n              rownames_to_column(var=\"structure\"))\n\nJoining with `by = join_by(structure)`\n\n\nBefore plotting, we want to create a legend so that there is some hope of having an idea which line from the trajectories belongs to which structure. The Allen colours will not be discernible enough to tell apart every individual structure, but one can quickly tell that greens are from the cortex, yellows from the cerebellum, etc. To do this we will create a single slice from the atlas labels, which can then be inserted into the plot later. One small bit to note - MRIcrotome draws all slices on a black background, which makes sense 99% of the time, but doesn’t here. Being able to specifty the background in MRIcrotome is a missing feature I should add, but in the meantime we use some grid graphics tricks to simply remove all rectangles from the plot, which also removes the background.\n\n# now we need to make the slice to show the Allen colours\nabiColourSlice &lt;- sliceSeries(nrow=1, ncol=1, dimension=1, begin=90, end=91) %&gt;%\n  overlay(hanatToVolume(hvols, mrilabels, \"color_hex_triplet\"), low=1, high=2, ) %&gt;%\n  grobify() %&gt;%\n  # get rid of the black background\n  removeGrob(\"rect\", grep=T, global=T)\n\nFinally we create the plot. For the plot itself we will simply connect lines between the mean values for every brain structure at every age. We then assign it the colours we created earlier - note the use of I() here, which tells ggplot to take the colours as colour strings rather than as a factor. Then we use the annotation_custom function from ggplot to add the slice in which gives a guide to the colours.\n\nggplot(scaledallvols) +\n  aes(x=age, y=volume, colour=structure) + \n  stat_summary(fun = mean, geom=\"line\", aes(colour=I(allencolour))) + \n  ylab(\"Z-scored volume\") + \n  xlab(\"Age in days\") + \n  labs(title=\"Growth curves of all structures\",\n       caption=\"Colours from the Allen atlas as indicated by the inset slice\") + \n  annotation_custom(abiColourSlice, xmin=40, xmax=65, ymin=-2, ymax=0) + \n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "posts/MBM-command-illustrated/index.html",
    "href": "posts/MBM-command-illustrated/index.html",
    "title": "Annotated MBM command",
    "section": "",
    "text": "There is little good documentation of the different pydpiper pipelines, unfortunately. Here I will take a baby-step to remedying that in providing an annotated command for a pipeline I recently ran. This will hopefully provide at least some level of insight into all them thar options.\nHere’s the command, run on a set of test-data from Yingshi:\n1SE MBM.py \\\n2--backend=makeflow \\\n3--makeflow-opts='-h' \\\n4--pipeline-name Yingshi-T2w-2023-08-11 \\\n5--subject-matter mousebrain \\\n6--init-model /well/lerch/shared/tools/initial-models/oxford-model-2023/oxford_t2w_mouse_60micron.mnc \\\n7--lsq6-simple \\\n8--lsq12-protocol /well/lerch/shared/tools/protocols/linear/Pydpiper_testing_default_lsq12.csv \\\n9--run-maget \\\n10--maget-registration-method minctracc \\\n11--maget-atlas-library /well/lerch/shared/tools/atlases/Dorr_2008_Steadman_2013_Ullmann_2013_Richards_2011_Qiu_2016_Egan_2015_40micron/ex-vivo/ \\\n12--maget-nlin-protocol /well/lerch/shared/tools/protocols/nonlinear/default_nlin_MAGeT_minctracc_prot.csv \\\n--maget-masking-nlin-protocol /well/lerch/shared/tools/protocols/nonlinear/default_nlin_MAGeT_minctracc_prot.csv \\\n13--no-common-space-registration \\\n14--num-executors 1 \\\n15--files /well/lerch/users/yrf023/Yingshi-tests/native/*removed.mnc\n\n\n1\n\nThe command itself. The SE prefix here is an alias to running the command in a singularity container (see here)\n\n2\n\nThe backend. There are two options; the default (i.e. if you do not specify a backend), which is our own server-executor mode based on pyro (python remote objects). Here I am using makeflow, in which case pydpiper will output a makeflow file which can then be processed separately using the different makeflow tools.\n\n3\n\nThis is only relevant when using the makeflow backend, and is a workaround to stop pydpiper from trying to run makeflow itself. Should be fixed (i.e. no longer necessary) in a future version of pydpiper.\n\n4\n\nThe pipeline name - one of the required arguments. All output files and directories will have this name as its prefix, so it has to be unique within the directory from which the MBM command is being run.\n\n5\n\nThe subject matter - when set to mousebrain it will use a few defaults sensible for rodents (i.e. works for rats too) for some of the registration steps.\n\n6\n\nThe initial model - one of the key parameters for a successful registration, described in more detail below, see Section 1.\n\n7\n\nHow to run the initial 6 parameter (rigid body) alignment; also key for a successful registration, described in more detail in Section 2.\n\n8\n\nHere I’m over-riding the default parameters for the 12 parameter registration, with those parameters specified in the text file following the argument. A full description of how to craft those files will be the subject of a future post.\n\n9\n\nWe tell pydpiper to use MAGeT, our multi-atlas registration pipeline, to also segment the brains.\n\n10\n\nWe specify to use minctracc (rather than ANTS) for the MAGeT registrations. In a prior study we found that ANTS had better formed jacobians, and was thus preferable for the voxel based analyses and is thus the registration engine we use for most pydpiper registrations, but that minctracc created slightly more accurate segmentations and was a decent bit faster, hence we usually use it for the segmentation pipelines.\n\n11\n\nWe tell MAGeT to use a particular segmented atlas library, here the DSURQE atlas. Full description of the different atlases will be the subject of a future post.\n\n12\n\nNext are two more options for specifying the parameters, described in the text files following the arguments, to control how to run the MAGeT registrations.\n\n13\n\nThere is an optional step to align the final study-specific template to a common space shared across different registrations. Here we turn that off.\n\n14\n\nWe tell pydpiper to only use a single executor - this option only becomes relevant if we want pydpiper to execute commands itself, but since we opted to output a makeflow file instead and will execute the pipeline via makeflow, we switch this to a single executor.\n\n15\n\nAnd lastly we specify the MINC files that go into the pipeline run itself. Obviously a crucial argument.\nThere are many more options than this - to see them all, run MBM –help.\nThe next step in this pipeline would then be to use makeflow to run the commands; see an example for running a pipeline on the BMRC cluster."
  },
  {
    "objectID": "posts/MBM-command-illustrated/index.html#sec-init",
    "href": "posts/MBM-command-illustrated/index.html#sec-init",
    "title": "Annotated MBM command",
    "section": "1 Initial models",
    "text": "1 Initial models\nMost parameters to pydpiper pipelines can remain unchanged no matter whether the input is mouse or rat, in-vivo or ex-vivo. But initial models are different - they have to be matched to your data for the registration to work. I’ll cover how to create an initial model from scratch in a future post. In the meantime, here are the most used models at MICe and Oxford:\n\n\n\n\n\n\n\n\nName\nModality\nDescription\n\n\n\n\noxford-model-2023/oxford_t2w_mouse_60micron.mnc\nin-vivo mouse\nUse for Oxford MEMRI scans."
  },
  {
    "objectID": "posts/MBM-command-illustrated/index.html#sec-lsq6",
    "href": "posts/MBM-command-illustrated/index.html#sec-lsq6",
    "title": "Annotated MBM command",
    "section": "2 LSQ6 choices",
    "text": "2 LSQ6 choices\nIn my experience, the initial rigid body alignment stage is the one most likely to fail. I rarely ever change the lsq12 or nlin parameters, but when faced with new data I routinely modify the initial model and switch between lsq6 modes. There are three lsq6 modes built into pydpiper pipelines.\n\n\n\n\n\n\n\nOption\nDescription\n\n\n\n\n--lsq6-simple\nAssumes that the initial model and the native files are in the same space. I use this for in-vivo data from the Oxford scanner, where there is a single coil and the positioning of the mice in the scanner is fairly consistent.\n\n\n--lsq6-centre-estimation\nAssumes that the initial model and the native files are oriented the same way, but estimates a centre-of-gravity based translation. This can work for the MICe in-vivo setup, where the orientation is well controlled but due to the multiple coils the start coordinates differ dependent on coils.\n\n\n--lsq6-large-rotations\nNeither the orientation nor the start coordinates are assumed to be the same. This option is essential for ex-vivo samples scanned in Toronto, especially for embryos where it is challenging to control the rotation of the sample precisely. There are two further options that control the search space: --lsq6-rotational-range and --lsq6-rotational-interval."
  },
  {
    "objectID": "posts/developmental-data-part2/index.html",
    "href": "posts/developmental-data-part2/index.html",
    "title": "Developmental analyses, part 2",
    "section": "",
    "text": "Here we pick up from part 1, and get into some RMINC and friends code to apply these different longitudinal models to every part of the hierarchical anatomical tree.\nFirst, let’s reconstruct the data by loading Tiffany’s data files as before.\n\n# load all the libs we will need\nlibrary(data.tree)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.2     ✔ purrr   1.0.1\n✔ tibble  3.2.1     ✔ dplyr   1.1.2\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 0.5.2\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(RMINC)\nlibrary(lme4)\n\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\nlibrary(splines)\nlibrary(emmeans)\nlibrary(broom)\nlibrary(MRIcrotome)\n\n\nAttaching package: 'MRIcrotome'\n\nThe following object is masked from 'package:graphics':\n\n    legend\n\nlibrary(gt)\nlibrary(gtExtras)\n\nload(\"brain_analysis_data_2023nov2.RData\")\n\n# the suppress warnings bit deals with a comparison in the data.tree\n# library that throws far too many warnings.\nhvols &lt;- suppressWarnings(addVolumesToHierarchy(hdefs, structvols))\n\nWe’ll skip the simple straight line models, and dive right into fitting the splines and deriving information from them.\n\nFunctional programming with hierarchical trees\nThe anatomical hierarchies in RMINC use the data.tree package, which uses environments under the hood. There are a series of hanat prefixed functions that make it easier to work with these trees, but those functions can only take you so far. Here I will therefore focus on using standard R tools for the most part.\nEnvironments are great for navigating trees, but for purposes of fitting multiple models it is easier to work with lists, however, as they play nicely with tidyverse functional programming. In simpler language, once we have a list of ROIs we can repetitive apply the same function to them.\nThe process we’ll walk through is the following:\n\nGenerate a list of brain ROIs\nrun a linear mixed effects model on every ROI\ncompute the estimated marginal means for every ROI\ncompute the pairwise t statistics over the estimated marginal means\nput the results back into the hierarchical tree\nvisualize\n\nSo let’s start:\n\nbrainstructs &lt;- Traverse(hvols)\n\nThe Traverse function creates a list of all entries in the tree. These lists now feed nicely into tidyverse’s map function. So let’s now compute the same linear mixed effects model that we used in the previous post across all structs.\n\n# estimate the interaction model for every node\nsexModels &lt;- map(brainstructs, ~ lmer(roi ~ ns(age,3) * Sex + (1|subject_id), \n                                      gf %&gt;% mutate(roi = .x$volumes)))\n\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\n\n\nThe only trick here is that lmer expects the dependent variable to be inside the dataframe with the independent variables; hence that last line where we use mutate to assign the volumes entry from each ROI to the roi variable.\nA bunch of the singular boundary fits errors popped up again. For the moment we can ignore them.\nNow we have a list of 590 (the number of ROIs in our anatomical tree) statistical models. Let’s take a look at a random one\n\nsexModels[[40]]\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: roi ~ ns(age, 3) * Sex + (1 | subject_id)\n   Data: gf %&gt;% mutate(roi = .x$volumes)\nREML criterion at convergence: -901.9437\nRandom effects:\n Groups     Name        Std.Dev.\n subject_id (Intercept) 0.01309 \n Residual               0.02671 \nNumber of obs: 224, groups:  subject_id, 37\nFixed Effects:\n     (Intercept)       ns(age, 3)1       ns(age, 3)2       ns(age, 3)3  \n        0.166201          0.068117          0.278469          0.148887  \n            SexM  ns(age, 3)1:SexM  ns(age, 3)2:SexM  ns(age, 3)3:SexM  \n        0.003463         -0.017298         -0.004661          0.011820  \n\n\nWhich ROI were we looking at?\n\nbrainstructs[[40]]$name\n\n[1] \"left Cortex-amygdala transition zones\"\n\n\nNow remember from the more detailed discussion in the previous post that, when fitting a spline, the parameters themselves are fairly hard to interpret. So we turn back to the emmeans package to compute marginal means at different ages.\n\nemmeansSexModels &lt;- map(sexModels, ~ emmeans(.x, ~ Sex | age, at = list(age=c(7, 21, 65))))\nemmeansSexModels[[40]]\n\nage =  7:\n Sex emmean      SE    df lower.CL upper.CL\n F    0.227 0.00498  60.3    0.217    0.237\n M    0.229 0.00466  59.2    0.220    0.238\n\nage = 21:\n Sex emmean      SE    df lower.CL upper.CL\n F    0.292 0.00527  70.3    0.282    0.303\n M    0.287 0.00504  76.8    0.277    0.297\n\nage = 65:\n Sex emmean      SE    df lower.CL upper.CL\n F    0.378 0.00788 184.3    0.362    0.393\n M    0.391 0.00784 193.8    0.376    0.407\n\nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\n\nSo now we have a list of 590 emmeans objects. Let’s compute the pairwise t statistics again.\n\nemmeansSexModelsPairs &lt;- map(emmeansSexModels, ~ pairs(.x, reverse=TRUE))\nemmeansSexModelsPairs[[40]]\n\nage =  7:\n contrast estimate      SE    df t.ratio p.value\n M - F     0.00168 0.00682  59.8   0.246  0.8065\n\nage = 21:\n contrast estimate      SE    df t.ratio p.value\n M - F    -0.00567 0.00729  73.4  -0.778  0.4389\n\nage = 65:\n contrast estimate      SE    df t.ratio p.value\n M - F     0.01365 0.01111 189.1   1.229  0.2208\n\nDegrees-of-freedom method: kenward-roger \n\n\nThis will prove to be somewhat hard to parse. The wonderful broom package can help\n\ntidy(emmeansSexModelsPairs[[40]])\n\n# A tibble: 3 × 9\n    age term  contrast null.value estimate std.error    df statistic p.value\n  &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1     7 Sex   M - F             0  0.00168   0.00682  59.8     0.246   0.807\n2    21 Sex   M - F             0 -0.00567   0.00729  73.4    -0.778   0.439\n3    65 Sex   M - F             0  0.0137    0.0111  189.      1.23    0.221\n\n\nWe will want one more modification to turn it into a single entry list, so that our map operation can return a dataframe.\n\ntidy(emmeansSexModelsPairs[[40]]) %&gt;% \n  select(age, estimate, statistic, p.value) %&gt;%\n  pivot_wider(names_from = age, values_from = c(estimate, statistic, p.value))\n\n# A tibble: 1 × 9\n  estimate_7 estimate_21 estimate_65 statistic_7 statistic_21 statistic_65\n       &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;       &lt;dbl&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n1    0.00168    -0.00567      0.0137       0.246       -0.778         1.23\n# ℹ 3 more variables: p.value_7 &lt;dbl&gt;, p.value_21 &lt;dbl&gt;, p.value_65 &lt;dbl&gt;\n\n\nPutting that all together to return a dataframe rather than a list:\n\nemmeansSexModelsPairs &lt;- map_dfr(emmeansSexModels, ~ pairs(.x, reverse=T) %&gt;%\n                                   tidy() %&gt;%\n                                   select(age, \n                                          estimate, \n                                          statistic, \n                                          p.value) %&gt;%\n                                   pivot_wider(names_from = age, \n                                               values_from = c(estimate,\n                                                               statistic, \n                                                               p.value)))\n\nNow what remains to be done is to put the variables we care about back into the tree.\n\n# call the Set function with every column of our variable\ndo.call(hvols$Set, emmeansSexModelsPairs)\n\nSo far we did each step one at a time, creating separate variables for every output. This is great if you want to inspect intermediate outputs, but can also be skipped for conciseness if you are comfortable with your pipeline. Putting it all together it would look like this:\n\nTraverse(hvols) %&gt;% # start by traversing ROIs\n  # then run lmer at every ROI\n  map(~ lmer(roi ~ ns(age,3) * Sex + (1|subject_id), \n             gf %&gt;% mutate(roi = .x$volumes))) %&gt;%\n  # compute the estimated marginal means\n  map(~ emmeans(.x, ~ Sex | age, at = list(age=c(7, 21, 65)))) %&gt;%\n  # compute pairwise stats from the emmeans\n  map(~ pairs(.x, reverse=TRUE)) %&gt;%\n  # now tidy the results\n  map(tidy) %&gt;%\n  # keep just the interesting bits\n  map(~ select(.x, age, estimate, statistic, p.value)) %&gt;%\n  # and create a dataframe after pivoting\n  map_dfr(~ pivot_wider(.x, names_from = age, \n                    values_from = c(estimate, statistic, p.value))) %&gt;%\n  # and put it back into the tree\n  do.call(hvols$Set, .)\n\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\n\n\n\n\nVisualizing the outputs from the hierarchical tree\nAt this point we have our stats back in our hierarchical tree. Let’s first simply look at it (note the output should be horizontally scrollable in case you can’t see the values):\n\noptions(width = 5000) # to keep it on one line\nprint(hvols, \"statistic_7\", \"statistic_21\", \"statistic_65\", limit=Inf)\n\n                                                                                          levelName  statistic_7  statistic_21 statistic_65\n1   root2                                                                                            1.554178788  1.4623880721  0.582970075\n2    ¦--Basic cell groups and regions                                                                1.449040816  1.4251563619  0.394304116\n3    ¦   ¦--Cerebrum                                                                                 1.418345444  1.8626836271  0.237294406\n4    ¦   ¦   ¦--Cerebral cortex                                                                      1.336647652  1.7472158382  0.341015721\n5    ¦   ¦   ¦   ¦--Cortical subplate                                                                1.109311863  1.7729834001  0.606775564\n6    ¦   ¦   ¦   ¦   ¦--Cortical subplate-other                                                      0.972877057  1.7183563971  0.521564590\n7    ¦   ¦   ¦   ¦   ¦   ¦--left Cortical subplate-other                                             0.591334841  1.3375002921  0.847828622\n8    ¦   ¦   ¦   ¦   ¦   °--right Cortical subplate-other                                            1.208057965  1.8525215228  0.144700317\n9    ¦   ¦   ¦   ¦   ¦--Claustrum                                                                    1.113914275  1.0384739647  0.892730929\n10   ¦   ¦   ¦   ¦   ¦   ¦--Claustrum-other                                                          0.663558218 -0.7753881638  2.063137042\n11   ¦   ¦   ¦   ¦   ¦   ¦   ¦--left Claustrum-other                                                 0.333190825 -0.9878038718  0.767952479\n12   ¦   ¦   ¦   ¦   ¦   ¦   °--right Claustrum-other                                                1.086014532 -0.0947630639  3.718327788\n13   ¦   ¦   ¦   ¦   ¦   ¦--Claustrum: dorsal part                                                   0.710558796  0.8499593672  0.240630678\n14   ¦   ¦   ¦   ¦   ¦   ¦   ¦--left Claustrum: dorsal part                                          0.703275039  1.3204478342 -0.146579861\n15   ¦   ¦   ¦   ¦   ¦   ¦   °--right Claustrum: dorsal part                                         0.432976987 -0.3652189535  0.855687740\n16   ¦   ¦   ¦   ¦   ¦   °--Claustrum: ventral part                                                  1.104379977  1.6259693766  0.245779703\n17   ¦   ¦   ¦   ¦   ¦       ¦--left Claustrum: ventral part                                         0.662411545  2.2003257095  0.024642346\n18   ¦   ¦   ¦   ¦   ¦       °--right Claustrum: ventral part                                        1.017813074  0.2403218473  0.307859571\n19   ¦   ¦   ¦   ¦   °--Endopiriform nucleus                                                         1.211663436  1.7867521888  0.384925773\n20   ¦   ¦   ¦   ¦       ¦--Endopiriform nucleus, dorsal part                                        1.211022204  1.7204799871  0.184579808\n21   ¦   ¦   ¦   ¦       ¦   ¦--Dorsal nucleus of the endopiriform                                   0.684064701  1.5509642471  0.090865506\n22   ¦   ¦   ¦   ¦       ¦   ¦   ¦--left Dorsal nucleus of the endopiriform                          0.250037221  1.6624797773  0.848863175\n23   ¦   ¦   ¦   ¦       ¦   ¦   °--right Dorsal nucleus of the endopiriform                         0.857911074  1.1602216455 -0.524447936\n24   ¦   ¦   ¦   ¦       ¦   °--Intermediate nucleus of the endopiriform claustrum                   2.353450525  1.7690747719  0.405583870\n25   ¦   ¦   ¦   ¦       ¦       ¦--left Intermediate nucleus of the endopiriform claustrum          2.313014842  1.6526800267  1.114713001\n26   ¦   ¦   ¦   ¦       ¦       °--right Intermediate nucleus of the endopiriform claustrum         1.756831625  1.3951306635 -0.519143996\n27   ¦   ¦   ¦   ¦       °--Endopiriform nucleus, ventral part                                       0.873573870  1.5070349810  0.968249054\n28   ¦   ¦   ¦   ¦           ¦--left Endopiriform nucleus, ventral part                              1.142391078  1.1500975240  0.867743712\n29   ¦   ¦   ¦   ¦           °--right Endopiriform nucleus, ventral part                             0.254063877  1.2969709526  0.727652476\n30   ¦   ¦   ¦   °--Cortical plate                                                                   1.341041592  1.7278471368  0.313991354\n31   ¦   ¦   ¦       ¦--Olfactory areas                                                              1.057050008  1.4456274906  3.066738012\n32   ¦   ¦   ¦       ¦   ¦--Olfactory areas-other                                                    1.160247774  1.5398093875 -0.616486194\n33   ¦   ¦   ¦       ¦   ¦   ¦--left Olfactory areas-other                                           0.451393326  0.8901338859 -1.669627717\n34   ¦   ¦   ¦       ¦   ¦   °--right Olfactory areas-other                                          1.517564328  1.8138834621  0.406009180\n35   ¦   ¦   ¦       ¦   ¦--Postpiriform transition area                                             0.407635267  0.7973577892  0.334844129\n36   ¦   ¦   ¦       ¦   ¦   ¦--left Postpiriform transition area                                    0.804938011  1.4120351044 -0.795815417\n37   ¦   ¦   ¦       ¦   ¦   °--right Postpiriform transition area                                  -0.043730681  0.0028581022  1.430723653\n38   ¦   ¦   ¦       ¦   ¦--Piriform area                                                            0.469670951  0.5566548325  1.214127664\n39   ¦   ¦   ¦       ¦   ¦   ¦--Cortex-amygdala transition zones                                     1.124160992 -1.2881114280  1.489944386\n40   ¦   ¦   ¦       ¦   ¦   ¦   ¦--left Cortex-amygdala transition zones                            0.245991689 -0.7782547562  1.228576544\n41   ¦   ¦   ¦       ¦   ¦   ¦   °--right Cortex-amygdala transition zones                           1.276899709 -1.0335125369  0.947996078\n42   ¦   ¦   ¦       ¦   ¦   °--Piriform cortex                                                      0.389518045  0.7197527108  1.099113619\n43   ¦   ¦   ¦       ¦   ¦       ¦--left Piriform cortex                                             0.146543507  0.9270184916  0.659795589\n44   ¦   ¦   ¦       ¦   ¦       °--right Piriform cortex                                            0.611657605  0.3866705536  1.174643738\n45   ¦   ¦   ¦       ¦   ¦--Taenia tecta                                                             0.139293344  0.2799544991 -3.570937775\n46   ¦   ¦   ¦       ¦   ¦   ¦--Taenia tecta, dorsal part                                            0.059729276  0.1370835727 -3.727153054\n47   ¦   ¦   ¦       ¦   ¦   ¦   ¦--left Taenia tecta, dorsal part                                  -0.103012943 -0.2262635081 -3.982354315\n48   ¦   ¦   ¦       ¦   ¦   ¦   °--right Taenia tecta, dorsal part                                  0.211577975  0.4834703587 -3.112188416\n49   ¦   ¦   ¦       ¦   ¦   °--Taenia tecta, ventral part                                           0.304553239  0.6840882537  1.232678934\n50   ¦   ¦   ¦       ¦   ¦       ¦--left Taenia tecta, ventral part                                 -0.088843617  0.8149311095  0.565163555\n51   ¦   ¦   ¦       ¦   ¦       °--right Taenia tecta, ventral part                                 0.570742900  0.4103735912  1.603310615\n52   ¦   ¦   ¦       ¦   ¦--Cortical amygdalar area                                                  0.425909615  1.2122507262  2.349771471\n53   ¦   ¦   ¦       ¦   ¦   °--Cortical amygdalar area, posterior part                              0.425909615  1.2122507262  2.349771471\n54   ¦   ¦   ¦       ¦   ¦       ¦--Cortical amygdalar area, posterior part, lateral zone            0.535338822  0.3662754837  1.849055467\n55   ¦   ¦   ¦       ¦   ¦       ¦   ¦--left Cortical amygdalar area, posterior part, lateral zone   0.422799432 -0.1564458496  1.181614810\n56   ¦   ¦   ¦       ¦   ¦       ¦   °--right Cortical amygdalar area, posterior part, lateral zone  0.629491486  1.1897858224  2.713181860\n57   ¦   ¦   ¦       ¦   ¦       °--Cortical amygdalar area, posterior part, medial zone             0.022381621  1.7721134234  1.567846679\n58   ¦   ¦   ¦       ¦   ¦           ¦--left Cortical amygdalar area, posterior part, medial zone    0.056122514  1.9283300728  0.958750712\n59   ¦   ¦   ¦       ¦   ¦           °--right Cortical amygdalar area, posterior part, medial zone  -0.038877174  1.0645481687  1.722327980\n60   ¦   ¦   ¦       ¦   ¦--Piriform-amygdalar area                                                  0.474554093  0.8796195990  2.820685973\n61   ¦   ¦   ¦       ¦   ¦   ¦--left Piriform-amygdalar area                                        -0.040236869 -0.0207593489  2.366453036\n62   ¦   ¦   ¦       ¦   ¦   °--right Piriform-amygdalar area                                        0.616854260  1.2245157591  2.122667779\n63   ¦   ¦   ¦       ¦   ¦--Main olfactory bulb                                                      1.083053179  1.4980732925  3.995371926\n64   ¦   ¦   ¦       ¦   ¦   ¦--Main olfactory bulb, glomerular layer                                0.754457467  0.8498906997  4.000706834\n65   ¦   ¦   ¦       ¦   ¦   ¦   ¦--left Main olfactory bulb, glomerular layer                       0.839328207  0.7059229655  4.145061245\n66   ¦   ¦   ¦       ¦   ¦   ¦   °--right Main olfactory bulb, glomerular layer                      0.644712160  0.9523545961  3.719652908\n67   ¦   ¦   ¦       ¦   ¦   ¦--Main olfactory bulb, outer plexiform layer                           0.270529662  1.0063018334  3.363204791\n68   ¦   ¦   ¦       ¦   ¦   ¦   ¦--left Main olfactory bulb, outer plexiform layer                  0.347534226  1.3534406514  3.261733045\n69   ¦   ¦   ¦       ¦   ¦   ¦   °--right Main olfactory bulb, outer plexiform layer                 0.187527716  0.6839523944  3.321958685\n70   ¦   ¦   ¦       ¦   ¦   ¦--Main olfactory bulb, mitral layer                                    0.867706837  0.8973786411  3.841059064\n71   ¦   ¦   ¦       ¦   ¦   ¦   ¦--left Main olfactory bulb, mitral layer                           0.930049108  0.8132004181  3.879886238\n72   ¦   ¦   ¦       ¦   ¦   ¦   °--right Main olfactory bulb, mitral layer                          0.746941511  0.9838141644  3.674016496\n73   ¦   ¦   ¦       ¦   ¦   ¦--Main olfactory bulb, inner plexiform layer                           0.894976773  1.0551838331  3.941575362\n74   ¦   ¦   ¦       ¦   ¦   ¦   ¦--left Main olfactory bulb, inner plexiform layer                  0.785147580  1.2723355091  3.753259414\n75   ¦   ¦   ¦       ¦   ¦   ¦   °--right Main olfactory bulb, inner plexiform layer                 0.926043801  0.8347703458  3.947188325\n76   ¦   ¦   ¦       ¦   ¦   °--Main olfactory bulb, granule layer                                   1.760915739  2.3114959072  2.137291144\n77   ¦   ¦   ¦       ¦   ¦       ¦--left Main olfactory bulb, granule layer                          1.839934856  2.0460435487  2.008888631\n78   ¦   ¦   ¦       ¦   ¦       °--right Main olfactory bulb, granule layer                         1.569332729  2.4382644941  2.095090367\n79   ¦   ¦   ¦       ¦   ¦--Accessory olfactory bulb                                                 0.624975298  0.9830240198  3.027844995\n80   ¦   ¦   ¦       ¦   ¦   ¦--Accessory olfactory bulb, glomerular layer                           0.661541316  1.2418802035  3.136957139\n81   ¦   ¦   ¦       ¦   ¦   ¦   ¦--left Accessory olfactory bulb, glomerular layer                  0.867276477  1.5998499161  3.077546089\n82   ¦   ¦   ¦       ¦   ¦   ¦   °--right Accessory olfactory bulb, glomerular layer                 0.407269129  0.8114321746  2.874803489\n83   ¦   ¦   ¦       ¦   ¦   °--Accessory olfactory bulb, granular layer                             0.442604802  0.4822540712  2.277446150\n84   ¦   ¦   ¦       ¦   ¦       ¦--left Accessory olfactory bulb, granular layer                    0.827637155  0.4572730387  2.283772120\n85   ¦   ¦   ¦       ¦   ¦       °--right Accessory olfactory bulb, granular layer                  -0.031305844  0.4547174674  1.768373502\n86   ¦   ¦   ¦       ¦   °--Anterior olfactory nucleus                                               1.099978876  1.2025685726 -1.035080831\n87   ¦   ¦   ¦       ¦       ¦--left Anterior olfactory nucleus                                      0.511733806  0.2207980258 -1.068937858\n88   ¦   ¦   ¦       ¦       °--right Anterior olfactory nucleus                                     1.322820095  1.7008404446 -0.760055435\n89   ¦   ¦   ¦       ¦--Hippocampal formation                                                        0.878343304  1.1240156209  1.084744302\n90   ¦   ¦   ¦       ¦   ¦--Retrohippocampal region                                                  0.202024704  1.0015117620  0.759910916\n91   ¦   ¦   ¦       ¦   ¦   ¦--Subiculum                                                           -0.273718971  0.4807324321  0.516468367\n92   ¦   ¦   ¦       ¦   ¦   ¦   ¦--pre-para subiculum                                              -0.675158373  0.3160954526  0.089243885\n93   ¦   ¦   ¦       ¦   ¦   ¦   ¦   ¦--left pre-para subiculum                                      0.020949740  0.8928175758  0.886026709\n94   ¦   ¦   ¦       ¦   ¦   ¦   ¦   °--right pre-para subiculum                                    -0.968030073 -0.2434818644 -0.536530432\n95   ¦   ¦   ¦       ¦   ¦   ¦   °--subiculum                                                        0.001387844  0.5277904213  0.735856634\n96   ¦   ¦   ¦       ¦   ¦   ¦       ¦--left subiculum                                              -0.009628009  0.7270726692  1.074819939\n97   ¦   ¦   ¦       ¦   ¦   ¦       °--right subiculum                                              0.001089564  0.2922541497  0.322035794\n98   ¦   ¦   ¦       ¦   ¦   °--Entorhinal area                                                      0.329059586  1.1889371570  0.739705794\n99   ¦   ¦   ¦       ¦   ¦       ¦--Entorhinal area, medial part, dorsal zone                        0.256047795  0.8936193450  0.022362715\n100  ¦   ¦   ¦       ¦   ¦       ¦   ¦--left Entorhinal area, medial part, dorsal zone               0.595712381  1.1684921121  0.956080579\n101  ¦   ¦   ¦       ¦   ¦       ¦   °--right Entorhinal area, medial part, dorsal zone             -0.262237783  0.4311167884 -1.114761190\n102  ¦   ¦   ¦       ¦   ¦       ¦--Entorhinal area, lateral part                                    0.284639462  1.1673217527  1.097292269\n103  ¦   ¦   ¦       ¦   ¦       ¦   ¦--Dorsal intermediate entorhinal cortex                        0.033618413  1.6109884953  1.627726132\n104  ¦   ¦   ¦       ¦   ¦       ¦   ¦   ¦--left Dorsal intermediate entorhinal cortex               0.137961559  2.9046209211  1.805863904\n105  ¦   ¦   ¦       ¦   ¦       ¦   ¦   °--right Dorsal intermediate entorhinal cortex             -0.039783071  0.3782782045  1.151061307\n106  ¦   ¦   ¦       ¦   ¦       ¦   ¦--Dorsolateral entorhinal cortex                               0.417380854  0.6819608517  0.009376044\n107  ¦   ¦   ¦       ¦   ¦       ¦   ¦   ¦--left Dorsolateral entorhinal cortex                     -0.046709407 -0.1099171898  0.231696125\n108  ¦   ¦   ¦       ¦   ¦       ¦   ¦   °--right Dorsolateral entorhinal cortex                     0.734641050  1.1207049870 -0.125633488\n109  ¦   ¦   ¦       ¦   ¦       ¦   °--Ventral intermediate entorhinal cortex                       0.142601863  1.1238648153  2.580144677\n110  ¦   ¦   ¦       ¦   ¦       ¦       ¦--left Ventral intermediate entorhinal cortex              0.555126605  2.4183699544  2.252376489\n111  ¦   ¦   ¦       ¦   ¦       ¦       °--right Ventral intermediate entorhinal cortex            -0.264556879 -0.2262704474  2.225118794\n112  ¦   ¦   ¦       ¦   ¦       °--Entorhinal area, medial part, ventral zone                       0.533478445  1.4065439564  1.493862346\n113  ¦   ¦   ¦       ¦   ¦           ¦--left Entorhinal area, medial part, ventral zone              0.712491268  2.0032201477  2.022884019\n114  ¦   ¦   ¦       ¦   ¦           °--right Entorhinal area, medial part, ventral zone             0.227085538  0.5346458288  0.663095620\n115  ¦   ¦   ¦       ¦   °--Hippocampal region                                                       1.392180657  1.1577358610  1.235471166\n116  ¦   ¦   ¦       ¦       ¦--Ammon's horn                                                         1.117722887  0.6606689992  1.305386598\n117  ¦   ¦   ¦       ¦       ¦   ¦--Field CA1                                                        1.211155192  0.3934869180  1.219899888\n118  ¦   ¦   ¦       ¦       ¦   ¦   ¦--Field CA1, stratum oriens                                    0.547404366 -0.1365590728  0.719414290\n119  ¦   ¦   ¦       ¦       ¦   ¦   ¦   ¦--left Field CA1, stratum oriens                           0.983718655  0.2312357287  0.342001625\n120  ¦   ¦   ¦       ¦       ¦   ¦   ¦   °--right Field CA1, stratum oriens                         -0.021623869 -0.5587484434  1.072563209\n121  ¦   ¦   ¦       ¦       ¦   ¦   ¦--Field CA1, stratum lacunosum-moleculare                      1.550936342  1.6209940161  0.821617670\n122  ¦   ¦   ¦       ¦       ¦   ¦   ¦   ¦--left Field CA1, stratum lacunosum-moleculare             1.345633994  1.2747469823  0.922974522\n123  ¦   ¦   ¦       ¦       ¦   ¦   ¦   °--right Field CA1, stratum lacunosum-moleculare            1.691134101  1.9230181470  0.647010627\n124  ¦   ¦   ¦       ¦       ¦   ¦   ¦--Field CA1, stratum radiatum                                  0.731025084 -0.2901539168  1.075915585\n125  ¦   ¦   ¦       ¦       ¦   ¦   ¦   ¦--left Field CA1, stratum radiatum                         0.677601903 -0.0648093531  0.814537704\n126  ¦   ¦   ¦       ¦       ¦   ¦   ¦   °--right Field CA1, stratum radiatum                        0.710655211 -0.4422905492  1.218190689\n127  ¦   ¦   ¦       ¦       ¦   ¦   °--Field CA1, pyramidal layer                                   1.043816836 -0.0117843922  2.081256723\n128  ¦   ¦   ¦       ¦       ¦   ¦       ¦--left Field CA1, pyramidal layer                          1.027417612 -0.1068622529  1.819455161\n129  ¦   ¦   ¦       ¦       ¦   ¦       °--right Field CA1, pyramidal layer                         0.859550730  0.0747584726  1.917622495\n130  ¦   ¦   ¦       ¦       ¦   ¦--Field CA2                                                       -0.075470241 -0.1729647069  1.265933260\n131  ¦   ¦   ¦       ¦       ¦   ¦   ¦--Field CA2, pyramidal layer                                  -0.112612488  0.1790860947  1.173633940\n132  ¦   ¦   ¦       ¦       ¦   ¦   ¦   ¦--left Field CA2, pyramidal layer                         -0.278140860  0.0923482755  0.358478333\n133  ¦   ¦   ¦       ¦       ¦   ¦   ¦   °--right Field CA2, pyramidal layer                         0.106814386  0.2541952142  1.916770188\n134  ¦   ¦   ¦       ¦       ¦   ¦   ¦--Field CA2, stratum oriens                                    0.344990451  0.2180972226  1.167956544\n135  ¦   ¦   ¦       ¦       ¦   ¦   ¦   ¦--left Field CA2, stratum oriens                           0.197121320  0.5105639057  0.781210492\n136  ¦   ¦   ¦       ¦       ¦   ¦   ¦   °--right Field CA2, stratum oriens                          0.429441625 -0.0879504201  1.386227490\n137  ¦   ¦   ¦       ¦       ¦   ¦   °--Field CA2, stratum radiatum                                 -0.480534440 -0.6335486238  1.168871165\n138  ¦   ¦   ¦       ¦       ¦   ¦       ¦--left Field CA2, stratum radiatum                        -0.488931033 -0.3890821041  0.073539187\n139  ¦   ¦   ¦       ¦       ¦   ¦       °--right Field CA2, stratum radiatum                       -0.297269051 -0.6985426151  1.878539821\n140  ¦   ¦   ¦       ¦       ¦   °--Field CA3                                                        0.854098154  1.0937102306  0.894497976\n141  ¦   ¦   ¦       ¦       ¦       ¦--Field CA3, pyramidal layer                                   1.059175375  0.7156266582  0.540310024\n142  ¦   ¦   ¦       ¦       ¦       ¦   ¦--CA3Py Inner                                              1.299812593  1.1155756984  0.324444651\n143  ¦   ¦   ¦       ¦       ¦       ¦   ¦   ¦--left CA3Py Inner                                     2.133105666  1.0733493281  0.382301816\n144  ¦   ¦   ¦       ¦       ¦       ¦   ¦   °--right CA3Py Inner                                    0.353195181  0.8772957682  0.187480774\n145  ¦   ¦   ¦       ¦       ¦       ¦   °--CA3Py Outer                                              0.949517821  0.6158981428  0.511907175\n146  ¦   ¦   ¦       ¦       ¦       ¦       ¦--left CA3Py Outer                                     1.445520839  1.2430188857  1.113758089\n147  ¦   ¦   ¦       ¦       ¦       ¦       °--right CA3Py Outer                                    0.166822178 -0.2335855360 -0.250150835\n148  ¦   ¦   ¦       ¦       ¦       ¦--Field CA3, stratum oriens                                    0.472451173  0.8475182938  0.260938447\n149  ¦   ¦   ¦       ¦       ¦       ¦   ¦--left Field CA3, stratum oriens                           0.731119250  0.8650259167  1.099752984\n150  ¦   ¦   ¦       ¦       ¦       ¦   °--right Field CA3, stratum oriens                          0.141731066  0.6708809087 -0.552870242\n151  ¦   ¦   ¦       ¦       ¦       ¦--Field CA3, stratum radiatum                                  1.198712559  1.3619407427  1.522117486\n152  ¦   ¦   ¦       ¦       ¦       ¦   ¦--left Field CA3, stratum radiatum                         1.048506793  0.7236989617  1.937150249\n153  ¦   ¦   ¦       ¦       ¦       ¦   °--right Field CA3, stratum radiatum                        1.201143562  1.7725563562  0.946612336\n154  ¦   ¦   ¦       ¦       ¦       °--Field CA3, stratum lucidum                                   0.037868658  0.9627972039  1.900296398\n155  ¦   ¦   ¦       ¦       ¦           ¦--left Field CA3, stratum lucidum                          0.565621299  0.8913482937  2.491107528\n156  ¦   ¦   ¦       ¦       ¦           °--right Field CA3, stratum lucidum                        -0.574354301  0.8016504875  0.865550329\n157  ¦   ¦   ¦       ¦       °--Dentate gyrus                                                        1.793971945  2.2323992940  0.717449838\n158  ¦   ¦   ¦       ¦           ¦--Dentate gyrus, molecular layer                                   1.691151483  2.0347318454  0.574504404\n159  ¦   ¦   ¦       ¦           ¦   ¦--left Dentate gyrus, molecular layer                          1.664789573  1.8907383184  1.225943545\n160  ¦   ¦   ¦       ¦           ¦   °--right Dentate gyrus, molecular layer                         1.598438526  2.0455512577 -0.145528216\n161  ¦   ¦   ¦       ¦           °--Dentate gyrus, granule cell layer                                1.860317102  2.4895784663  0.893218815\n162  ¦   ¦   ¦       ¦               ¦--GrDG                                                         1.847614523  2.4225154090  0.997684166\n163  ¦   ¦   ¦       ¦               ¦   ¦--left GrDG                                                2.051180910  2.1532149678  0.717370791\n164  ¦   ¦   ¦       ¦               ¦   °--right GrDG                                               1.229995242  2.3720462688  1.193153205\n165  ¦   ¦   ¦       ¦               °--PoDG                                                         1.733972908  2.4476645715  0.568100465\n166  ¦   ¦   ¦       ¦                   ¦--left PoDG                                                2.156627696  2.0404266943  0.478106514\n167  ¦   ¦   ¦       ¦                   °--right PoDG                                               1.061935141  2.4361448374  0.528854900\n168  ¦   ¦   ¦       °--Isocortex                                                                    1.474192157  1.8809772456 -0.931198035\n169  ¦   ¦   ¦           ¦--Anterior cingulate area                                                  2.890415082  3.7664991852 -0.092956490\n170  ¦   ¦   ¦           ¦   ¦--Anterior cingulate area, ventral part                                2.810951971  4.0150532874  0.287881923\n171  ¦   ¦   ¦           ¦   ¦   ¦--Cingulate cortex: area 24a                                       1.949903179  3.2260104361  0.495689971\n172  ¦   ¦   ¦           ¦   ¦   ¦   ¦--left Cingulate cortex: area 24a                              1.721721847  2.6021901603 -0.146880923\n173  ¦   ¦   ¦           ¦   ¦   ¦   °--right Cingulate cortex: area 24a                             1.960717425  3.4037699180  0.903126033\n174  ¦   ¦   ¦           ¦   ¦   °--Cingulate cortex: area 24a'                                      3.621458790  4.0823868275 -0.482377653\n175  ¦   ¦   ¦           ¦   ¦       ¦--left Cingulate cortex: area 24a'                             3.390652083  3.7478369870 -0.609395812\n176  ¦   ¦   ¦           ¦   ¦       °--right Cingulate cortex: area 24a'                            3.187788019  3.6981857337 -0.236146429\n177  ¦   ¦   ¦           ¦   °--Anterior cingulate area, dorsal part                                 2.547919108  2.8973677806 -0.529072115\n178  ¦   ¦   ¦           ¦       ¦--Cingulate cortex: area 24b                                       2.531205643  3.1487736384 -0.523440619\n179  ¦   ¦   ¦           ¦       ¦   ¦--left Cingulate cortex: area 24b                              2.055255000  2.3545223620 -0.891604826\n180  ¦   ¦   ¦           ¦       ¦   °--right Cingulate cortex: area 24b                             2.477638954  3.2597401864 -0.156533931\n181  ¦   ¦   ¦           ¦       °--Cingulate cortex: area 24b'                                      1.071752564  0.2360420770 -0.216693450\n182  ¦   ¦   ¦           ¦           ¦--left Cingulate cortex: area 24b'                             0.816540854 -0.4596428309 -0.401684388\n183  ¦   ¦   ¦           ¦           °--right Cingulate cortex: area 24b'                            1.065845718  0.9866059455  0.050585964\n184  ¦   ¦   ¦           ¦--Infralimbic area                                                        -0.098618166  0.6882661095  0.165281589\n185  ¦   ¦   ¦           ¦   ¦--left Infralimbic area                                               -0.585003068 -0.0523203645  0.069426123\n186  ¦   ¦   ¦           ¦   °--right Infralimbic area                                               0.810328197  1.5690019794  0.221580157\n187  ¦   ¦   ¦           ¦--Retrosplenial area                                                       2.046862848  2.0737768863  0.311427224\n188  ¦   ¦   ¦           ¦   ¦--Retrosplenial area, ventral part                                     2.454870201  2.9819644605  0.050104265\n189  ¦   ¦   ¦           ¦   ¦   ¦--Cingulate cortex: area 29a                                       0.608691818  2.0439367364 -0.181179015\n190  ¦   ¦   ¦           ¦   ¦   ¦   ¦--left Cingulate cortex: area 29a                             -0.189573117  0.8692720461 -0.200878451\n191  ¦   ¦   ¦           ¦   ¦   ¦   °--right Cingulate cortex: area 29a                             1.238786387  2.5264772569  0.004481050\n192  ¦   ¦   ¦           ¦   ¦   ¦--Cingulate cortex: area 29b                                       0.872842529 -0.1196575122  0.155111593\n193  ¦   ¦   ¦           ¦   ¦   ¦   ¦--left Cingulate cortex: area 29b                              1.171701286 -0.1582802920  0.326541719\n194  ¦   ¦   ¦           ¦   ¦   ¦   °--right Cingulate cortex: area 29b                             0.218412439 -0.0124884629 -0.078486782\n195  ¦   ¦   ¦           ¦   ¦   °--Cingulate cortex: area 29c                                       2.604429638  3.0030942289  0.005246101\n196  ¦   ¦   ¦           ¦   ¦       ¦--left Cingulate cortex: area 29c                              2.266272552  2.2353457969 -0.760420352\n197  ¦   ¦   ¦           ¦   ¦       °--right Cingulate cortex: area 29c                             2.577585569  3.3180790541  0.663005258\n198  ¦   ¦   ¦           ¦   °--Retrosplenial area, dorsal part                                      1.328605004  0.8068815956  0.526738417\n199  ¦   ¦   ¦           ¦       ¦--left Retrosplenial area, dorsal part                             1.832591883  0.9227943516 -0.199321672\n200  ¦   ¦   ¦           ¦       °--right Retrosplenial area, dorsal part                            0.368867511  0.4416998129  0.883314077\n201  ¦   ¦   ¦           ¦--Prelimbic area                                                           0.855572689  0.6311325659 -0.495767296\n202  ¦   ¦   ¦           ¦   ¦--left Prelimbic area                                                  0.900007855  0.6916878111 -0.602885490\n203  ¦   ¦   ¦           ¦   °--right Prelimbic area                                                 0.716541865  0.4804167650 -0.290500712\n204  ¦   ¦   ¦           ¦--Auditory areas                                                           0.609161786  0.5483005283 -0.331452998\n205  ¦   ¦   ¦           ¦   ¦--Primary auditory area                                                0.900100812  0.5042905221 -0.494303851\n206  ¦   ¦   ¦           ¦   ¦   ¦--left Primary auditory area                                       0.349211738  0.0563075165  0.108071195\n207  ¦   ¦   ¦           ¦   ¦   °--right Primary auditory area                                      1.254283438  0.9005995607 -1.152019355\n208  ¦   ¦   ¦           ¦   ¦--Dorsal auditory area                                                 0.576056871  0.8373467267 -0.005799054\n209  ¦   ¦   ¦           ¦   ¦   ¦--left Dorsal auditory area                                        0.752550064  1.3210695797 -0.125061943\n210  ¦   ¦   ¦           ¦   ¦   °--right Dorsal auditory area                                       0.141732555  0.0382212699  0.131094805\n211  ¦   ¦   ¦           ¦   °--Ventral auditory area                                                0.306718206  0.2591959583 -0.314613879\n212  ¦   ¦   ¦           ¦       ¦--left Ventral auditory area                                       0.327649460  1.1089941011  1.027443275\n213  ¦   ¦   ¦           ¦       °--right Ventral auditory area                                      0.176829778 -0.4467741394 -1.202911362\n214  ¦   ¦   ¦           ¦--Agranular insular area                                                   0.075853585  0.7282501730  1.336971677\n215  ¦   ¦   ¦           ¦   °--Agranular insular area, dorsal part                                  0.075853585  0.7282501730  1.336971677\n216  ¦   ¦   ¦           ¦       ¦--left Agranular insular area, dorsal part                         0.056948850  0.1985161459  0.638848885\n217  ¦   ¦   ¦           ¦       °--right Agranular insular area, dorsal part                        0.081571868  1.0409608099  1.665189515\n218  ¦   ¦   ¦           ¦--Ectorhinal area                                                         -0.076210786 -0.2821656546 -2.620086064\n219  ¦   ¦   ¦           ¦   ¦--Ectorhinal cortex                                                    0.108984984  0.0120922335 -1.610914078\n220  ¦   ¦   ¦           ¦   ¦   ¦--left Ectorhinal cortex                                           0.378334587  1.4804157383 -0.002647473\n221  ¦   ¦   ¦           ¦   ¦   °--right Ectorhinal cortex                                         -0.124393138 -1.1222090393 -2.161095501\n222  ¦   ¦   ¦           ¦   °--Insular region: not subdivided                                      -0.192584836 -0.3857659735 -2.393819072\n223  ¦   ¦   ¦           ¦       ¦--left Insular region: not subdivided                             -0.167421358 -0.0744677391 -1.089013718\n224  ¦   ¦   ¦           ¦       °--right Insular region: not subdivided                            -0.130330555 -0.4827503156 -2.546811622\n225  ¦   ¦   ¦           ¦--Somatomotor areas                                                        2.282466025  2.2433353025 -0.186638610\n226  ¦   ¦   ¦           ¦   ¦--Primary motor area                                                   2.143786798  2.1862491030 -0.416752777\n227  ¦   ¦   ¦           ¦   ¦   ¦--Frontal cortex: area 3                                           1.371404864  0.8380844006  1.870032325\n228  ¦   ¦   ¦           ¦   ¦   ¦   ¦--left Frontal cortex: area 3                                  0.572905684  0.5367037331  2.729838053\n229  ¦   ¦   ¦           ¦   ¦   ¦   °--right Frontal cortex: area 3                                 1.414434541  0.7888445177  1.000978735\n230  ¦   ¦   ¦           ¦   ¦   °--Primary motor cortex                                             2.099399889  2.1933401806 -0.591792198\n231  ¦   ¦   ¦           ¦   ¦       ¦--left Primary motor cortex                                    1.908665104  1.8342484895 -0.988263152\n232  ¦   ¦   ¦           ¦   ¦       °--right Primary motor cortex                                   1.859907234  2.0695280534 -0.073733785\n233  ¦   ¦   ¦           ¦   °--Secondary motor area                                                 2.096902305  1.8328346544  0.384400838\n234  ¦   ¦   ¦           ¦       ¦--left Secondary motor area                                        1.543582562  1.1052164161 -0.449746725\n235  ¦   ¦   ¦           ¦       °--right Secondary motor area                                       1.636239572  1.6420847045  0.956143048\n236  ¦   ¦   ¦           ¦--Frontal pole, cerebral cortex                                            0.223667401  0.2987130997 -0.749108808\n237  ¦   ¦   ¦           ¦   ¦--left Frontal pole, cerebral cortex                                   0.078952518 -0.2175291417 -0.835159489\n238  ¦   ¦   ¦           ¦   °--right Frontal pole, cerebral cortex                                  0.284458759  0.7342992392 -0.536083948\n239  ¦   ¦   ¦           ¦--Orbital area                                                             0.791975811  2.2478007008 -0.392504840\n240  ¦   ¦   ¦           ¦   ¦--Orbital area, lateral part                                           0.829905976  2.1056359225 -0.649403540\n241  ¦   ¦   ¦           ¦   ¦   ¦--left Orbital area, lateral part                                  0.529645272  1.6934590535 -1.373698539\n242  ¦   ¦   ¦           ¦   ¦   °--right Orbital area, lateral part                                 1.014904735  2.2107263628  0.124041205\n243  ¦   ¦   ¦           ¦   ¦--Orbital area, medial part                                            0.208982279  1.4819319700  0.058420861\n244  ¦   ¦   ¦           ¦   ¦   ¦--left Orbital area, medial part                                  -0.182425621  1.1331448375 -0.641817051\n245  ¦   ¦   ¦           ¦   ¦   °--right Orbital area, medial part                                  0.623678768  1.6135088165  0.893618979\n246  ¦   ¦   ¦           ¦   °--Orbital area, ventrolateral part                                     1.218442748  2.4121804825 -0.130135607\n247  ¦   ¦   ¦           ¦       ¦--left Orbital area, ventrolateral part                            0.657797253  1.6230694740 -0.810236184\n248  ¦   ¦   ¦           ¦       °--right Orbital area, ventrolateral part                           1.584691332  2.7475152630  0.598515679\n249  ¦   ¦   ¦           ¦--Posterior parietal association areas                                     2.293739827  1.1509115323  0.093526181\n250  ¦   ¦   ¦           ¦   ¦--Lateral parietal association cortex                                  1.682385678  0.1869812830 -1.219089250\n251  ¦   ¦   ¦           ¦   ¦   ¦--left Lateral parietal association cortex                         1.549643323  0.2955894011 -1.089783484\n252  ¦   ¦   ¦           ¦   ¦   °--right Lateral parietal association cortex                        0.662591066 -0.2817543585 -0.561962661\n253  ¦   ¦   ¦           ¦   ¦--Medial parietal association cortex                                   1.994680325 -0.0376276715  0.161742843\n254  ¦   ¦   ¦           ¦   ¦   ¦--left Medial parietal association cortex                          2.000872363  0.4373136824  0.534527413\n255  ¦   ¦   ¦           ¦   ¦   °--right Medial parietal association cortex                         1.003222139 -0.6616801573 -0.416326959\n256  ¦   ¦   ¦           ¦   ¦--Parietal cortex: posterior area: rostral part                        1.998769115  0.2218662364 -0.688751475\n257  ¦   ¦   ¦           ¦   ¦   ¦--left Parietal cortex: posterior area: rostral part               1.882671697  0.2336970244 -0.608388485\n258  ¦   ¦   ¦           ¦   ¦   °--right Parietal cortex: posterior area: rostral part              0.688723242  0.0009733674 -0.360556770\n259  ¦   ¦   ¦           ¦   °--Secondary visual cortex: mediomedial area                            2.040759026  1.5727697368  0.313046815\n260  ¦   ¦   ¦           ¦       ¦--left Secondary visual cortex: mediomedial area                   2.259491985  1.2604542590 -0.061516255\n261  ¦   ¦   ¦           ¦       °--right Secondary visual cortex: mediomedial area                  0.688189479  1.2113519164  0.679398406\n262  ¦   ¦   ¦           ¦--Perirhinal area                                                         -0.018407200  0.5713141525 -0.907412691\n263  ¦   ¦   ¦           ¦   ¦--left Perirhinal area                                                -0.031432213  0.9768904270 -0.188307882\n264  ¦   ¦   ¦           ¦   °--right Perirhinal area                                                0.106853635  0.0681486837 -1.165584537\n265  ¦   ¦   ¦           ¦--Somatosensory areas                                                      1.140519932  1.4480435734 -1.159939358\n266  ¦   ¦   ¦           ¦   ¦--Primary somatosensory area                                           1.347404697  1.7939773430 -0.757365666\n267  ¦   ¦   ¦           ¦   ¦   ¦--Primary somatosensory area-other                                 0.644316325  2.1174833919 -0.562347667\n268  ¦   ¦   ¦           ¦   ¦   ¦   ¦--left Primary somatosensory area-other                        1.081189930  2.4841750857  0.022708242\n269  ¦   ¦   ¦           ¦   ¦   ¦   °--right Primary somatosensory area-other                       0.166388374  1.3551403893 -0.995899663\n270  ¦   ¦   ¦           ¦   ¦   ¦--Primary somatosensory area, barrel field                         1.573580125  1.6446997825 -0.902168835\n271  ¦   ¦   ¦           ¦   ¦   ¦   ¦--left Primary somatosensory area, barrel field                1.527886853  1.5006529591 -0.757635456\n272  ¦   ¦   ¦           ¦   ¦   ¦   °--right Primary somatosensory area, barrel field               1.423465205  1.5692167406 -0.916418627\n273  ¦   ¦   ¦           ¦   ¦   ¦--Primary somatosensory area, trunk                                1.099904928 -0.3536063980 -1.052650553\n274  ¦   ¦   ¦           ¦   ¦   ¦   ¦--Primary somatosensory cortex: dysgranular zone               0.394601642  0.2110789024  0.079381249\n275  ¦   ¦   ¦           ¦   ¦   ¦   ¦   ¦--left Primary somatosensory cortex: dysgranular zone      0.581546258  0.1050837997  0.803603309\n276  ¦   ¦   ¦           ¦   ¦   ¦   ¦   °--right Primary somatosensory cortex: dysgranular zone     0.075218505  0.3043095319 -1.376757639\n277  ¦   ¦   ¦           ¦   ¦   ¦   ¦--Primary somatosensory cortex: shoulder region                0.619759674 -0.5391275011 -0.383584749\n278  ¦   ¦   ¦           ¦   ¦   ¦   ¦   ¦--left Primary somatosensory cortex: shoulder region       0.734528301 -1.2920873683 -0.937267669\n279  ¦   ¦   ¦           ¦   ¦   ¦   ¦   °--right Primary somatosensory cortex: shoulder region      0.365674673  0.1384181433  0.138447093\n280  ¦   ¦   ¦           ¦   ¦   ¦   °--Primary somatosensory cortex: trunk region                   0.918394557 -0.4947214231 -1.612345910\n281  ¦   ¦   ¦           ¦   ¦   ¦       ¦--left Primary somatosensory cortex: trunk region          0.866032743 -0.5178837706 -1.628333697\n282  ¦   ¦   ¦           ¦   ¦   ¦       °--right Primary somatosensory cortex: trunk region         0.446481409 -0.2421295579 -0.621370465\n283  ¦   ¦   ¦           ¦   ¦   ¦--Primary somatosensory area, upper limb                           1.799911038  2.1665312058 -0.458151461\n284  ¦   ¦   ¦           ¦   ¦   ¦   ¦--left Primary somatosensory area, upper limb                  1.716755309  1.3495684617 -0.545007493\n285  ¦   ¦   ¦           ¦   ¦   ¦   °--right Primary somatosensory area, upper limb                 1.453250684  2.3733281254 -0.255831412\n286  ¦   ¦   ¦           ¦   ¦   ¦--Primary somatosensory area, lower limb                           1.358195251  0.9941153140 -0.198782349\n287  ¦   ¦   ¦           ¦   ¦   ¦   ¦--left Primary somatosensory area, lower limb                  1.617358844  1.1074456838 -0.294413918\n288  ¦   ¦   ¦           ¦   ¦   ¦   °--right Primary somatosensory area, lower limb                 0.673119897  0.5307238679 -0.018462606\n289  ¦   ¦   ¦           ¦   ¦   ¦--Primary somatosensory area, mouth                               -0.130289118  0.9795777877  1.557412161\n290  ¦   ¦   ¦           ¦   ¦   ¦   ¦--left Primary somatosensory area, mouth                       0.114570074  0.9404591668  0.731210293\n291  ¦   ¦   ¦           ¦   ¦   ¦   °--right Primary somatosensory area, mouth                     -0.353684310  0.8191556148  2.082549849\n292  ¦   ¦   ¦           ¦   ¦   °--Primary somatosensory area, nose                                -0.043935559  1.0264508089 -0.876241045\n293  ¦   ¦   ¦           ¦   ¦       ¦--left Primary somatosensory area, nose                        0.216416375  1.0061465131 -1.047440564\n294  ¦   ¦   ¦           ¦   ¦       °--right Primary somatosensory area, nose                      -0.240574039  0.7955416327 -0.500213242\n295  ¦   ¦   ¦           ¦   °--Supplemental somatosensory area                                      0.273937294  0.0537405088 -2.193598726\n296  ¦   ¦   ¦           ¦       ¦--left Supplemental somatosensory area                            -0.271799062  0.1509869070 -1.235020615\n297  ¦   ¦   ¦           ¦       °--right Supplemental somatosensory area                            0.813088725 -0.0825049774 -2.481148664\n298  ¦   ¦   ¦           ¦--Temporal association areas                                               0.775326085  1.3513789829 -1.922225199\n299  ¦   ¦   ¦           ¦   ¦--left Temporal association areas                                      0.354191548  1.7422602550 -0.555287370\n300  ¦   ¦   ¦           ¦   °--right Temporal association areas                                     0.841965501  0.2947462097 -2.141010829\n301  ¦   ¦   ¦           °--Visual areas                                                             1.627552733  2.6796387418 -0.232924936\n302  ¦   ¦   ¦               ¦--Primary visual area                                                  0.544443497  2.8271672471 -0.366128430\n303  ¦   ¦   ¦               ¦   ¦--left Primary visual area                                         1.038335838  2.4996183376  0.168716196\n304  ¦   ¦   ¦               ¦   °--right Primary visual area                                       -0.204745406  2.1800664153 -0.804949551\n305  ¦   ¦   ¦               ¦--Lateral visual area                                                  1.379326704  2.0475110563  0.588044319\n306  ¦   ¦   ¦               ¦   ¦--left Lateral visual area                                         1.176169638  1.4657136482 -0.204674776\n307  ¦   ¦   ¦               ¦   °--right Lateral visual area                                        1.193525059  1.9365079190  0.959168099\n308  ¦   ¦   ¦               ¦--posteromedial visual area                                            1.452513955  1.9677738244  0.105730804\n309  ¦   ¦   ¦               ¦   ¦--left posteromedial visual area                                   1.534404888  2.2532879330 -0.093135073\n310  ¦   ¦   ¦               ¦   °--right posteromedial visual area                                  0.884184252  0.9429250813  0.258230427\n311  ¦   ¦   ¦               ¦--Anterolateral visual area                                            1.494090732  2.4425759185 -0.875735807\n312  ¦   ¦   ¦               ¦   ¦--left Anterolateral visual area                                   1.854976381  2.0064088839 -1.920221055\n313  ¦   ¦   ¦               ¦   °--right Anterolateral visual area                                  0.902151954  2.5443023191  0.409875161\n314  ¦   ¦   ¦               °--Anteromedial visual area                                             2.339250126  1.6479433186 -0.229944973\n315  ¦   ¦   ¦                   ¦--left Anteromedial visual area                                    2.360607567  1.7961278969 -0.192907200\n316  ¦   ¦   ¦                   °--right Anteromedial visual area                                   1.290620969  0.7302901415 -0.163175803\n317  ¦   ¦   °--Cerebral nuclei                                                                      1.631478523  2.1511768969 -0.190005636\n318  ¦   ¦       ¦--Pallidum                                                                         1.363232398  1.3116254807  0.171417210\n319  ¦   ¦       ¦   ¦--Pallidum, ventral region                                                     1.284243686  0.7771977786  0.019869927\n320  ¦   ¦       ¦   ¦   ¦--left Pallidum, ventral region                                            1.328221760  0.6884114687 -0.687131392\n321  ¦   ¦       ¦   ¦   °--right Pallidum, ventral region                                           1.059156096  0.7275694520  0.597221084\n322  ¦   ¦       ¦   ¦--Pallidum, caudal region                                                      1.523448429  2.6491120307  1.479175636\n323  ¦   ¦       ¦   ¦   °--Bed nuclei of the stria terminalis                                       1.523448429  2.6491120307  1.479175636\n324  ¦   ¦       ¦   ¦       ¦--left Bed nuclei of the stria terminalis                              1.687109215  2.9730261673  1.602933125\n325  ¦   ¦       ¦   ¦       °--right Bed nuclei of the stria terminalis                             1.061164126  1.8169351021  1.031114688\n326  ¦   ¦       ¦   ¦--Pallidum, dorsal region                                                      1.255210751  1.1419431453 -0.121620950\n327  ¦   ¦       ¦   ¦   ¦--left Pallidum, dorsal region                                             2.051319777  1.5274562136  0.322436206\n328  ¦   ¦       ¦   ¦   °--right Pallidum, dorsal region                                            0.292772539  0.6001838327 -0.532744909\n329  ¦   ¦       ¦   °--Pallidum, medial region                                                      0.115419422  0.5376634888 -0.578061712\n330  ¦   ¦       ¦       °--Medial septal complex                                                    0.115419422  0.5376634888 -0.578061712\n331  ¦   ¦       ¦           ¦--left Medial septal complex                                           0.432026010  0.4309149169 -1.264453550\n332  ¦   ¦       ¦           °--right Medial septal complex                                         -0.180618679  0.4622388827  0.088268352\n333  ¦   ¦       °--Striatum                                                                         1.658324800  2.3476741475 -0.310959991\n334  ¦   ¦           ¦--Striatum ventral region                                                      1.550801178  2.5284638109 -1.199768683\n335  ¦   ¦           ¦   ¦--Fundus of striatum                                                       1.999496426  0.5509667863  0.373314141\n336  ¦   ¦           ¦   ¦   ¦--left Fundus of striatum                                              2.133218451  1.1596409853 -0.013727666\n337  ¦   ¦           ¦   ¦   °--right Fundus of striatum                                             1.247320254 -0.2841634658  0.709236200\n338  ¦   ¦           ¦   ¦--Nucleus accumbens                                                        1.469336962  1.5145326125 -2.151443289\n339  ¦   ¦           ¦   ¦   ¦--left Nucleus accumbens                                               0.801725834  0.2394113252 -2.607528113\n340  ¦   ¦           ¦   ¦   °--right Nucleus accumbens                                              2.111625081  2.6812467121 -1.451190941\n341  ¦   ¦           ¦   °--Olfactory tubercle                                                       1.057643079  3.2735226328  1.065170532\n342  ¦   ¦           ¦       ¦--left Olfactory tubercle                                              0.555636823  2.9916767168  0.704118992\n343  ¦   ¦           ¦       °--right Olfactory tubercle                                             1.267182981  2.6988547116  1.077402071\n344  ¦   ¦           ¦--Lateral septal complex                                                       1.446454993  1.4781951604  1.473681274\n345  ¦   ¦           ¦   ¦--left Lateral septal complex                                              1.074719238  1.0223619814  0.962971948\n346  ¦   ¦           ¦   °--right Lateral septal complex                                             1.699527025  1.7861313406  1.714832149\n347  ¦   ¦           ¦--Striatum dorsal region                                                       1.596214410  2.0963519874 -0.519293268\n348  ¦   ¦           ¦   °--Caudoputamen                                                             1.596214410  2.0963519874 -0.519293268\n349  ¦   ¦           ¦       ¦--left Caudoputamen                                                    1.859464728  1.8487116380 -0.997631349\n350  ¦   ¦           ¦       °--right Caudoputamen                                                   1.218261587  2.1706703309  0.012502435\n351  ¦   ¦           °--Striatum-like amygdalar nuclei                                               1.832375976  4.2888005058  5.115183773\n352  ¦   ¦               °--Medial amygdalar nucleus                                                 1.832375976  4.2888005058  5.115183773\n353  ¦   ¦                   ¦--left Medial amygdalar nucleus                                        1.649454649  3.5027350393  6.015841462\n354  ¦   ¦                   °--right Medial amygdalar nucleus                                       1.554653462  3.8495315817  3.322121641\n355  ¦   ¦--Brain stem                                                                               1.583745611  0.8978202235  0.576741749\n356  ¦   ¦   ¦--Midbrain                                                                             1.482751375  0.9233334208  0.727623017\n357  ¦   ¦   ¦   ¦--Midbrain, sensory related                                                        1.733646988  1.1961440601  0.347272679\n358  ¦   ¦   ¦   ¦   ¦--Inferior colliculus                                                          1.250658425  1.3021845449 -0.148862380\n359  ¦   ¦   ¦   ¦   ¦   ¦--left Inferior colliculus                                                 1.506755316  1.2707578657  0.457813517\n360  ¦   ¦   ¦   ¦   ¦   °--right Inferior colliculus                                                0.821472903  1.1574903177 -0.758326787\n361  ¦   ¦   ¦   ¦   °--Superior colliculus, sensory related                                         1.851520639  1.0296901114  0.588342503\n362  ¦   ¦   ¦   ¦       ¦--left Superior colliculus, sensory related                                1.568261327  0.6019098874  0.028568932\n363  ¦   ¦   ¦   ¦       °--right Superior colliculus, sensory related                               1.989721569  1.3889997221  1.122791601\n364  ¦   ¦   ¦   ¦--Midbrain, behavioral state related                                               1.278044402  0.7432672631  1.451893855\n365  ¦   ¦   ¦   ¦   °--Midbrain raphe nuclei                                                        1.278044402  0.7432672631  1.451893855\n366  ¦   ¦   ¦   ¦       °--Interpeduncular nucleus                                                  1.278044402  0.7432672631  1.451893855\n367  ¦   ¦   ¦   ¦--Midbrain-other                                                                   0.713449487  0.2704957670  1.182176940\n368  ¦   ¦   ¦   °--Midbrain, motor related                                                          1.801368507  1.2065084148  0.211349087\n369  ¦   ¦   ¦       °--Periaqueductal gray                                                          1.801368507  1.2065084148  0.211349087\n370  ¦   ¦   ¦--Hindbrain                                                                            1.502526079  0.3902447922  0.678674793\n371  ¦   ¦   ¦   ¦--Medulla                                                                          1.520506068  0.7138915757  0.300797562\n372  ¦   ¦   ¦   ¦   ¦--Medulla, sensory related                                                     1.203877836 -0.1769130118  1.027243978\n373  ¦   ¦   ¦   ¦   ¦   °--Dorsal column nuclei                                                     1.203877836 -0.1769130118  1.027243978\n374  ¦   ¦   ¦   ¦   ¦       °--Cuneate nucleus                                                      1.203877836 -0.1769130118  1.027243978\n375  ¦   ¦   ¦   ¦   ¦           ¦--left Cuneate nucleus                                             1.211001095  0.3179974616  0.949499726\n376  ¦   ¦   ¦   ¦   ¦           °--right Cuneate nucleus                                            1.006793033 -0.7204058499  0.988621354\n377  ¦   ¦   ¦   ¦   ¦--Medulla, motor related                                                       1.279329514  0.9707679775  1.637193692\n378  ¦   ¦   ¦   ¦   ¦   °--Inferior olivary complex                                                 1.279329514  0.9707679775  1.637193692\n379  ¦   ¦   ¦   ¦   ¦       ¦--left Inferior olivary complex                                        0.931041802  0.4623712411  1.727648012\n380  ¦   ¦   ¦   ¦   ¦       °--right Inferior olivary complex                                       1.328041302  1.2169292721  1.258835212\n381  ¦   ¦   ¦   ¦   °--Medulla-other                                                                1.484132700  0.7003718159  0.207497745\n382  ¦   ¦   ¦   °--Pons                                                                             1.271767625 -0.1426195782  1.099266121\n383  ¦   ¦   ¦       ¦--Pons-other                                                                   1.402357708 -0.0404359668  1.023249227\n384  ¦   ¦   ¦       ¦--Pons, behavioral state related                                              -0.094085620 -0.8919233340  0.665545743\n385  ¦   ¦   ¦       ¦   °--Pontine reticular nucleus                                               -0.094085620 -0.8919233340  0.665545743\n386  ¦   ¦   ¦       ¦       ¦--left Pontine reticular nucleus                                      -0.331832615 -1.3175088826  0.125943921\n387  ¦   ¦   ¦       ¦       °--right Pontine reticular nucleus                                      0.109344029 -0.3031140761  1.174943388\n388  ¦   ¦   ¦       °--Pons, sensory related                                                        0.250991887 -0.3573696516  1.528633935\n389  ¦   ¦   ¦           °--Superior olivary complex                                                 0.250991887 -0.3573696516  1.528633935\n390  ¦   ¦   ¦               ¦--left Superior olivary complex                                        0.431360482 -0.5298923233  0.783028129\n391  ¦   ¦   ¦               °--right Superior olivary complex                                       0.055312375 -0.1543088009  1.989820764\n392  ¦   ¦   °--Interbrain                                                                           1.345339267  1.2994805619  0.019566080\n393  ¦   ¦       ¦--Hypothalamus                                                                     1.418759060  2.0242632847  0.848691833\n394  ¦   ¦       ¦   ¦--Hypothalamus-other                                                           1.357096394  2.0966765525  0.920693158\n395  ¦   ¦       ¦   ¦   ¦--left Hypothalamus-other                                                  1.265870260  1.7940052242  0.822054183\n396  ¦   ¦       ¦   ¦   °--right Hypothalamus-other                                                 1.372199328  2.2958977861  0.952024045\n397  ¦   ¦       ¦   °--Hypothalamic medial zone                                                     1.449062322  0.2632578814 -0.271838080\n398  ¦   ¦       ¦       ¦--Mammillary body                                                          0.443426530 -1.3947075634 -0.682353284\n399  ¦   ¦       ¦       ¦   ¦--left Mammillary body                                                 0.682257775 -0.8752146465 -0.961445428\n400  ¦   ¦       ¦       ¦   °--right Mammillary body                                                0.140787394 -1.6124337031 -0.187841285\n401  ¦   ¦       ¦       °--Medial preoptic nucleus                                                  2.637240476  3.7478657724  0.838867361\n402  ¦   ¦       ¦           ¦--left Medial preoptic nucleus                                         2.059649279  3.2038641503  0.548685232\n403  ¦   ¦       ¦           °--right Medial preoptic nucleus                                        2.805616094  3.4255477121  1.047550133\n404  ¦   ¦       °--Thalamus                                                                         1.202231368  0.7961218736 -0.480196354\n405  ¦   ¦           ¦--left Thalamus                                                                1.307001845  0.7493200649 -0.521925866\n406  ¦   ¦           °--right Thalamus                                                               1.015141090  0.8055468306 -0.399629234\n407  ¦   °--Cerebellum                                                                               0.789121694  0.0780332366  0.480722971\n408  ¦       ¦--Cerebellar cortex                                                                    0.774967117  0.0878456635  0.450146071\n409  ¦       ¦   ¦--Vermal regions                                                                   0.801116563  0.3918820972  0.286450835\n410  ¦       ¦   ¦   ¦--Lingula (I)                                                                  0.835571369  0.7164572699  0.163602922\n411  ¦       ¦   ¦   ¦--Central lobule                                                               0.632440227  0.1854723654  0.797477359\n412  ¦       ¦   ¦   ¦--Culmen                                                                       0.700756176  0.5677158333  0.332873446\n413  ¦       ¦   ¦   ¦   ¦--Culmen-other                                                             0.558685423  0.3052354569 -0.238726464\n414  ¦       ¦   ¦   ¦   °--Lobules IV-V                                                             0.969705069  1.3881158298  2.212732445\n415  ¦       ¦   ¦   ¦       ¦--left Lobules IV-V                                                    1.012207933  2.1533675403  2.198941501\n416  ¦       ¦   ¦   ¦       °--right Lobules IV-V                                                   0.709134990  0.2063080784  1.712499931\n417  ¦       ¦   ¦   ¦--Declive (VI)                                                                 0.538867752  0.3363799464 -0.396026491\n418  ¦       ¦   ¦   ¦--Folium-tuber vermis (VII)                                                    0.310555219 -0.6572257309  0.553620973\n419  ¦       ¦   ¦   ¦--Pyramus (VIII)                                                               0.114361408 -1.1716348134 -0.122503664\n420  ¦       ¦   ¦   ¦--Uvula (IX)                                                                   1.019650002  0.9698165209  0.641931425\n421  ¦       ¦   ¦   °--Nodulus (X)                                                                  0.852089619  0.5041327130  0.060295162\n422  ¦       ¦   °--Hemispheric regions                                                              0.740404315 -0.1100928419  0.542077894\n423  ¦       ¦       ¦--Simple lobule                                                                0.900318043  0.4845938688  0.442729274\n424  ¦       ¦       ¦   ¦--left Simple lobule                                                       0.740724793  0.0557133492  0.070811795\n425  ¦       ¦       ¦   °--right Simple lobule                                                      0.971511765  0.8711357579  0.760311345\n426  ¦       ¦       ¦--Ansiform lobule                                                              0.695379345 -0.2945121278  0.393489469\n427  ¦       ¦       ¦   ¦--Crus 1                                                                   0.775500852  0.3335302291  0.504764362\n428  ¦       ¦       ¦   ¦   ¦--left Crus 1                                                          0.626610038  0.4164899736  0.674526227\n429  ¦       ¦       ¦   ¦   °--right Crus 1                                                         0.863471558  0.2297919683  0.308812003\n430  ¦       ¦       ¦   °--Crus 2                                                                   0.563105459 -0.9098253097  0.258296292\n431  ¦       ¦       ¦       ¦--left Crus 2                                                          0.681574599 -0.5778621749 -0.036099323\n432  ¦       ¦       ¦       °--right Crus 2                                                         0.376586435 -1.0943085453  0.501502624\n433  ¦       ¦       ¦--Paramedian lobule                                                            0.221167753 -1.3170558868 -0.053565310\n434  ¦       ¦       ¦   ¦--left Paramedian lobule                                                   0.190444580 -1.7082841875 -0.344471521\n435  ¦       ¦       ¦   °--right Paramedian lobule                                                  0.222154418 -0.8188742857  0.199316719\n436  ¦       ¦       ¦--Copula pyramidis                                                             0.416609360 -1.0115321434 -0.304311750\n437  ¦       ¦       ¦   ¦--left Copula pyramidis                                                    0.166374682 -1.4857198575 -0.674838933\n438  ¦       ¦       ¦   °--right Copula pyramidis                                                   0.530527957 -0.4204030855  0.077564560\n439  ¦       ¦       ¦--Flocculus                                                                    0.488078962 -1.1438444537  0.257545757\n440  ¦       ¦       ¦   ¦--left Flocculus                                                           1.049352906 -0.5861831277  0.260688356\n441  ¦       ¦       ¦   °--right Flocculus                                                         -0.107017991 -1.3451407656  0.168840643\n442  ¦       ¦       °--Paraflocculus                                                                0.909416937  1.5056060358  1.563757517\n443  ¦       ¦           ¦--left Paraflocculus                                                       0.782402133  1.2518022140  1.442429259\n444  ¦       ¦           °--right Paraflocculus                                                      0.686995593  1.1372114672  1.116192357\n445  ¦       °--Cerebellar nuclei                                                                    0.829252808 -0.2546533292  1.226981208\n446  ¦           ¦--Dentate nucleus                                                                  0.963358523  0.3058957215  1.212591790\n447  ¦           ¦   ¦--left Dentate nucleus                                                         0.621170196  0.4307961881  1.118666891\n448  ¦           ¦   °--right Dentate nucleus                                                        1.118211787  0.1519825399  1.120227551\n449  ¦           ¦--Interposed nucleus                                                               0.845796001 -0.3631800998  1.542033080\n450  ¦           ¦   ¦--left Interposed nucleus                                                      0.752363498 -0.6311195267  1.027591631\n451  ¦           ¦   °--right Interposed nucleus                                                     0.797680118 -0.0773013413  1.826239737\n452  ¦           °--Fastigial nucleus                                                                0.414000235 -0.4622907284  0.549607657\n453  ¦               ¦--left Fastigial nucleus                                                       0.874949110 -0.1867597282  1.242790928\n454  ¦               °--right Fastigial nucleus                                                     -0.130652157 -0.6892240159 -0.257294658\n455  ¦--fiber tracts                                                                                 2.150477239  1.3231353253  1.608474260\n456  ¦   ¦--cranial nerves                                                                           2.148484410  1.0541548229  2.514324494\n457  ¦   ¦   ¦--olfactory nerve                                                                      1.591407390  1.2030042728  3.026495691\n458  ¦   ¦   ¦   ¦--anterior commissure, olfactory limb                                              2.310598198  1.9274689705  1.732266470\n459  ¦   ¦   ¦   ¦   ¦--left anterior commissure, olfactory limb                                     2.319491611  1.8137283093  1.643635625\n460  ¦   ¦   ¦   ¦   °--right anterior commissure, olfactory limb                                    2.066020981  1.8378206625  1.621930698\n461  ¦   ¦   ¦   °--lateral olfactory tract, general                                                 0.560458007  0.3760334461  3.282104518\n462  ¦   ¦   ¦       ¦--left lateral olfactory tract, general                                        0.318417989  0.4751561287  2.949569318\n463  ¦   ¦   ¦       °--right lateral olfactory tract, general                                       0.753672180  0.2624337931  3.393751832\n464  ¦   ¦   ¦--facial nerve                                                                         0.503628736  0.2010688712  1.324505547\n465  ¦   ¦   ¦   ¦--left facial nerve                                                                0.071789234  0.0899680474  2.601573574\n466  ¦   ¦   ¦   °--right facial nerve                                                               0.728209962  0.2495366002  0.293914638\n467  ¦   ¦   ¦--dorsal roots                                                                         1.729110189  0.0210856043  1.325992275\n468  ¦   ¦   ¦   °--cervicothalamic tract                                                            1.729110189  0.0210856043  1.325992275\n469  ¦   ¦   ¦       °--medial lemniscus                                                             1.729110189  0.0210856043  1.325992275\n470  ¦   ¦   ¦           ¦--left medial lemniscus                                                    1.796439057 -0.3198919903  1.148365047\n471  ¦   ¦   ¦           °--right medial lemniscus                                                   1.554010561  0.3248174502  1.397105277\n472  ¦   ¦   ¦--optic nerve                                                                          2.319380924  2.2051152882  2.171375255\n473  ¦   ¦   ¦   °--optic tract                                                                      2.319380924  2.2051152882  2.171375255\n474  ¦   ¦   ¦       ¦--left optic tract                                                             2.433546979  2.3582389248  1.939141665\n475  ¦   ¦   ¦       °--right optic tract                                                            1.799122864  1.6720875557  1.982864258\n476  ¦   ¦   °--oculomotor nerve                                                                     1.694038184  1.1240515001 -1.543441559\n477  ¦   ¦       °--posterior commissure                                                             1.694038184  1.1240515001 -1.543441559\n478  ¦   ¦--medial forebrain bundle system                                                           1.540475526  2.0017675507  0.820057396\n479  ¦   ¦   ¦--cerebrum related                                                                     1.423348074  1.9732838642  1.145093345\n480  ¦   ¦   ¦   ¦--anterior commissure, temporal limb                                               2.470733784  0.2908251710 -0.340182774\n481  ¦   ¦   ¦   ¦   ¦--left anterior commissure, temporal limb                                      2.987143019 -0.0310075142 -0.635956949\n482  ¦   ¦   ¦   ¦   °--right anterior commissure, temporal limb                                     1.211486500  0.5191781773  0.079016248\n483  ¦   ¦   ¦   ¦--fornix system                                                                    1.276863711  2.0244522916  1.008159964\n484  ¦   ¦   ¦   ¦   ¦--fimbria                                                                      1.197368804  1.9241690259  1.122456161\n485  ¦   ¦   ¦   ¦   ¦   ¦--left fimbria                                                             1.149926424  1.3194997807  0.659880189\n486  ¦   ¦   ¦   ¦   ¦   °--right fimbria                                                            1.134706437  2.5033318604  1.567066898\n487  ¦   ¦   ¦   ¦   °--dorsal fornix                                                                1.305478532  1.9034242474  0.139303618\n488  ¦   ¦   ¦   ¦       ¦--left dorsal fornix                                                       1.200454919  1.9478101720  0.829696211\n489  ¦   ¦   ¦   ¦       °--right dorsal fornix                                                      1.145516293  1.4308040610 -0.685742635\n490  ¦   ¦   ¦   ¦--stria terminalis                                                                 0.875916484  0.8485722236  1.207521008\n491  ¦   ¦   ¦   ¦   ¦--left stria terminalis                                                        1.176326201  0.8926954223  2.195529588\n492  ¦   ¦   ¦   ¦   °--right stria terminalis                                                       0.404096537  0.6556549639 -0.095721630\n493  ¦   ¦   ¦   °--cingulum bundle                                                                  0.934204359  1.9919773639  1.197684218\n494  ¦   ¦   ¦       ¦--left cingulum bundle                                                         0.866906432  1.5950795248  0.745933895\n495  ¦   ¦   ¦       °--right cingulum bundle                                                        0.827003715  2.1282876111  1.555308756\n496  ¦   ¦   °--hypothalamus related                                                                 2.105240176  1.8750241211 -1.005769668\n497  ¦   ¦       ¦--epithalamus related                                                              1.678513311  2.2881400844 -0.947293349\n498  ¦   ¦       ¦   ¦--fasciculus retroflexus                                                       0.477564308  1.2195420930  0.079626463\n499  ¦   ¦       ¦   ¦   ¦--left fasciculus retroflexus                                              0.103645074  1.5692283258 -0.264877770\n500  ¦   ¦       ¦   ¦   °--right fasciculus retroflexus                                             0.793723964  0.8444637880  0.388089940\n501  ¦   ¦       ¦   ¦--habenular commissure                                                        -0.480412326  0.1016967594 -3.155430400\n502  ¦   ¦       ¦   ¦   ¦--left habenular commissure                                                0.369251851  0.7809603568 -3.899862835\n503  ¦   ¦       ¦   ¦   °--right habenular commissure                                              -0.762855815 -0.2286317318 -2.102189266\n504  ¦   ¦       ¦   °--stria medullaris                                                             1.770971503  2.1143345661 -1.146700471\n505  ¦   ¦       ¦       ¦--left stria medullaris                                                    2.023598396  2.1705796325 -1.332094318\n506  ¦   ¦       ¦       °--right stria medullaris                                                   1.360911085  1.7452659007 -0.688963151\n507  ¦   ¦       °--mammillary related                                                               2.423727063 -0.7550889250 -0.442895689\n508  ¦   ¦           °--mammilothalmic tract                                                         2.423727063 -0.7550889250 -0.442895689\n509  ¦   ¦               ¦--left mammilothalmic tract                                                1.659889378 -0.1171444058 -1.167462245\n510  ¦   ¦               °--right mammilothalmic tract                                               2.292247664 -1.0425552677  0.280110962\n511  ¦   ¦--cerebellum related fiber tracts                                                          1.207103685 -0.6731593860  1.109353572\n512  ¦   ¦   ¦--cerebellar peduncles                                                                 1.333049122 -0.3940821783  0.937750668\n513  ¦   ¦   ¦   ¦--inferior cerebellar peduncle                                                     1.846750581 -0.1742773605  1.683232687\n514  ¦   ¦   ¦   ¦   ¦--left inferior cerebellar peduncle                                            1.650803111 -0.5274839821  0.966048330\n515  ¦   ¦   ¦   ¦   °--right inferior cerebellar peduncle                                           1.833562764  0.2135018197  2.228914994\n516  ¦   ¦   ¦   ¦--middle cerebellar peduncle                                                       0.078003411 -1.6841446020  0.821612995\n517  ¦   ¦   ¦   ¦   ¦--left middle cerebellar peduncle                                              0.637041792 -1.0932816953  0.893183470\n518  ¦   ¦   ¦   ¦   °--right middle cerebellar peduncle                                            -0.494995673 -2.0424804761  0.637186174\n519  ¦   ¦   ¦   °--superior cerebelar peduncles                                                     1.866219901  1.4357060341 -0.207709260\n520  ¦   ¦   ¦       ¦--left superior cerebelar peduncles                                            2.100065683  1.6014450846 -0.612786189\n521  ¦   ¦   ¦       °--right superior cerebelar peduncles                                           1.197845389  0.8524755970  0.294398358\n522  ¦   ¦   °--arbor vitae                                                                          1.094967161 -0.7264646370  1.095255893\n523  ¦   ¦       ¦--trunk of arbor vita                                                              0.249376885 -1.3656898153 -0.215967253\n524  ¦   ¦       ¦--lobule 1-2 white matter                                                          0.407272183 -0.6639925354  0.847822802\n525  ¦   ¦       ¦--lobule 3 white matter                                                            0.575466592 -0.5843281885  0.181280028\n526  ¦   ¦       ¦--trunk of lobules 1-3 white matter                                                0.357930485 -0.0643722805  3.165628427\n527  ¦   ¦       ¦--lobules 4-5 white matter                                                         1.037605030  0.1173819511  1.964007469\n528  ¦   ¦       ¦--lobules 6-7 white matter                                                         1.174431393  0.1190539616  1.095324172\n529  ¦   ¦       ¦--lobule 8 white matter                                                            1.289973777 -0.8376652790  0.701796257\n530  ¦   ¦       ¦--trunk of lobules 6-8 white matter                                                0.671687432 -0.2532454079  0.962830534\n531  ¦   ¦       ¦--lobule 9 white matter                                                            1.700294505  0.2500978666  0.491521513\n532  ¦   ¦       ¦--lobule 10 white matter                                                           1.040719048 -0.5444897316  0.076229029\n533  ¦   ¦       ¦--anterior lobule white matter                                                     1.399211667 -0.2469755574  2.586161014\n534  ¦   ¦       ¦   ¦--left anterior lobule white matter                                            1.039226709  0.6522929115  2.808271803\n535  ¦   ¦       ¦   °--right anterior lobule white matter                                           1.385056985 -0.8948126256  1.902870981\n536  ¦   ¦       ¦--simple lobule white matter                                                       0.786699517  0.0141732247  1.977775850\n537  ¦   ¦       ¦   ¦--left simple lobule white matter                                              0.737959476 -0.0580944882  1.026267752\n538  ¦   ¦       ¦   °--right simple lobule white matter                                             0.757017679  0.0998234391  3.154142792\n539  ¦   ¦       ¦--crus 1 white matter                                                              0.907176864  0.1020015098  1.794245837\n540  ¦   ¦       ¦   ¦--left crus 1 white matter                                                     1.327802377 -0.1954340956  0.969461132\n541  ¦   ¦       ¦   °--right crus 1 white matter                                                    0.292667047  0.4425422351  2.619793847\n542  ¦   ¦       ¦--trunk of simple and crus 1 white matter                                          0.683830254 -0.1543774100  0.492658497\n543  ¦   ¦       ¦   ¦--left trunk of simple and crus 1 white matter                                 0.893765234 -0.4267375651  0.428809631\n544  ¦   ¦       ¦   °--right trunk of simple and crus 1 white matter                                0.510425559  0.1635844086  0.501152327\n545  ¦   ¦       ¦--crus 2 white matter                                                              0.827435967 -0.8433632144  1.218662999\n546  ¦   ¦       ¦   ¦--left crus 2 white matter                                                     0.784499018 -0.4526559313  1.248883026\n547  ¦   ¦       ¦   °--right crus 2 white matter                                                    0.824192047 -1.1504274752  1.089026499\n548  ¦   ¦       ¦--paramedian lobule                                                                0.706120466 -0.7996922771 -1.107350935\n549  ¦   ¦       ¦   ¦--left paramedian lobule                                                       0.498512486 -0.8856012367 -2.103030884\n550  ¦   ¦       ¦   °--right paramedian lobule                                                      0.854524124 -0.6348662929  0.542589479\n551  ¦   ¦       ¦--trunk of crus 2 and paramedian white matter                                      0.946628973 -0.3417484417  1.607024991\n552  ¦   ¦       ¦   ¦--left trunk of crus 2 and paramedian white matter                             1.444188828  0.2303834938  1.378653266\n553  ¦   ¦       ¦   °--right trunk of crus 2 and paramedian white matter                            0.313610219 -0.8638885906  1.599889860\n554  ¦   ¦       ¦--copula white matter                                                              1.089207222 -0.7834367950  1.401930877\n555  ¦   ¦       ¦   ¦--left copula white matter                                                     1.041275434 -0.4522357105  1.204110854\n556  ¦   ¦       ¦   °--right copula white matter                                                    0.889458395 -1.2663285125  1.435711149\n557  ¦   ¦       ¦--paraflocculus white matter                                                       1.131422271  0.6846374153  2.043332403\n558  ¦   ¦       ¦   ¦--left paraflocculus white matter                                              0.859996453  0.3712204704  1.650531496\n559  ¦   ¦       ¦   °--right paraflocculus white matter                                             1.169497933  0.8368621451  2.025063171\n560  ¦   ¦       °--flocculus white matter                                                           0.791174388 -0.8967756918  0.606117586\n561  ¦   ¦           ¦--left flocculus white matter                                                  0.092666179 -1.3235134590  0.215584691\n562  ¦   ¦           °--right flocculus white matter                                                 1.017188613 -0.3354294177  0.715950199\n563  ¦   ¦--lateral forebrain bundle system                                                          2.104832266  1.8986318303  1.178137677\n564  ¦   ¦   ¦--corticospinal tract                                                                  1.868519930  1.3047556736  1.358881441\n565  ¦   ¦   ¦   ¦--cerebal peduncle                                                                 0.518848970  1.5829092106  1.449517671\n566  ¦   ¦   ¦   ¦   ¦--left cerebal peduncle                                                       -0.022906544  0.9255311505  1.313347214\n567  ¦   ¦   ¦   ¦   °--right cerebal peduncle                                                       0.979645957  1.8029160375  1.153727811\n568  ¦   ¦   ¦   ¦--corticospinal tract-other                                                        1.812661412  0.6419987117  2.273358956\n569  ¦   ¦   ¦   ¦   ¦--left corticospinal tract-other                                               1.820304312  0.5898378727  1.955871467\n570  ¦   ¦   ¦   ¦   °--right corticospinal tract-other                                              1.682481344  0.6505705925  2.430010308\n571  ¦   ¦   ¦   °--internal capsule                                                                 1.384089563  0.8462189032 -0.521317360\n572  ¦   ¦   ¦       ¦--left internal capsule                                                        1.772963036  0.7497751723 -0.498879786\n573  ¦   ¦   ¦       °--right internal capsule                                                       0.865147263  0.8587314904 -0.476402980\n574  ¦   ¦   °--corpus callosum                                                                      1.926965106  1.9028358220  0.852139296\n575  ¦   ¦       ¦--left corpus callosum                                                             1.883981582  1.5349752033  0.340235630\n576  ¦   ¦       °--right corpus callosum                                                            1.757950767  2.0729145388  1.203112858\n577  ¦   °--extrapyramidal fiber systems                                                             1.610760837  0.2365229332 -1.362304225\n578  ¦       °--rubrospinal tract                                                                    1.610760837  0.2365229332 -1.362304225\n579  ¦           °--ventral tegmental decussation                                                    1.610760837  0.2365229332 -1.362304225\n580  °--ventricular systems                                                                          0.404262804  1.1657903703  1.193909016\n581      ¦--cerebral aqueduct                                                                       -0.344516501  0.5323949580  1.183060938\n582      ¦--fourth ventricle                                                                         0.055648481 -0.2553900868  1.806931965\n583      ¦--lateral ventricle                                                                        0.449174310  1.4187258536  1.679362553\n584      ¦   ¦--lateral ventricle-other                                                              0.409779976  1.3975520934  1.619273577\n585      ¦   ¦   ¦--left lateral ventricle-other                                                     0.333981058  0.9484254456  1.753957334\n586      ¦   ¦   °--right lateral ventricle-other                                                    0.432140277  1.7406445621  1.274047799\n587      ¦   °--subependymal zone                                                                    1.480314360  1.0229571330  2.351625594\n588      ¦       ¦--left subependymal zone                                                           1.021510534  0.9138485774  2.279145619\n589      ¦       °--right subependymal zone                                                          1.653206826  0.9836130165  2.088557892\n590      °--third ventricle                                                                          0.293618011  0.6766126391 -1.680965321\n\n\nWe can also make the tree visible graphically, using RMINC functions. This can only be done with one variable at a time, so we’ll use the stats at p65. Use the mouse to zoom and scroll.\n\nhanatView(hvols, \"statistic_65\", low=2, high=6, symmetric=T)\n\n\n\n\n\nAnd lastly, of course, we want to see it on the brain:\n\nsliceSeries(nrow=6, ncol=1, begin=65, end=210) %&gt;%\n  anatomy(mritemplate, low=700, high=1400) %&gt;%\n  sliceSeries() %&gt;% anatomy() %&gt;%\n  overlay(hanatToVolume(hvols, mrilabels, \"statistic_21\"), low=2, high=6, symmetric = T) %&gt;%\n  addtitle(\"P21\") %&gt;%\n  sliceSeries() %&gt;% anatomy() %&gt;%\n  overlay(hanatToVolume(hvols, mrilabels, \"statistic_65\"), low=2, high=6, symmetric = T) %&gt;%\n  addtitle(\"P65\") %&gt;%\n  legend(\"t-statistics\") %&gt;%\n  draw()\n\n\n\n\nThis is intriguing, but also somewhat ugly. Let’s lop off the bottom end of the tree so that we only visualize the symmetric ROIs. In other words, prune the tree to get rid of, for example, the left and right medial amygdala and keep just the bilateral medial amygdala.\n\n# create a copy of the tree (since it modifies in place)\nhvolsSym &lt;- Clone(hvols)\n# prune off ROIs whose names start with left or right\nPrune(hvolsSym, function(x) !str_starts(x$name, \"right\") & !str_starts(x$name, \"left\"))\n\n[1] 308\n\nsliceSeries(nrow=6, ncol=1, begin=65, end=210) %&gt;%\n  anatomy(mritemplate, low=700, high=1400) %&gt;%\n  sliceSeries() %&gt;% anatomy() %&gt;%\n  overlay(hanatToVolume(hvolsSym, mrilabels, \"statistic_21\"), low=2, high=6, symmetric = T) %&gt;%\n  addtitle(\"P21\") %&gt;%\n  sliceSeries() %&gt;% anatomy() %&gt;%\n  overlay(hanatToVolume(hvolsSym, mrilabels, \"statistic_65\"), low=2, high=6, symmetric = T) %&gt;%\n  addtitle(\"P65\") %&gt;%\n  legend(\"t-statistics\") %&gt;%\n  draw()\n\n\n\n\nPrettier. But of course whether you want to keep things unilateral or bilateral is up to you. Equally you could restrict it to just bits of anatomy higher up the anatomical tree - that’s a big part of the benefit of working with trees.\nLastly, let’s create a table of the most significant structures:\n\nToDataFrameTree(hvols, \"name\", \n                \"statistic_7\", \"p.value_7\",\n                \"statistic_21\", \"p.value_21\",\n                \"statistic_65\", \"p.value_65\") %&gt;%\n  # keep any structure where the p value at any of the three ages is &lt; 0.05\n  filter(p.value_7 &lt; 0.05 | p.value_21 &lt; 0.05 | p.value_65 &lt; 0.05) %&gt;%\n  # get rid of the \n  select(-levelName)\n\n                                                           name statistic_7    p.value_7 statistic_21   p.value_21 statistic_65   p.value_65\n1                                               Claustrum-other  0.66355822 0.5086026242  -0.77538816 4.395259e-01  2.063137042 4.029563e-02\n2                                         right Claustrum-other  1.08601453 0.2802465932  -0.09476306 9.246490e-01  3.718327788 2.556034e-04\n3                                  left Claustrum: ventral part  0.66241155 0.5093717834   2.20032571 2.960843e-02  0.024642346 9.803630e-01\n4            Intermediate nucleus of the endopiriform claustrum  2.35345052 0.0221337449   1.76907477 8.140516e-02  0.405583870 6.855362e-01\n5       left Intermediate nucleus of the endopiriform claustrum  2.31301484 0.0244654275   1.65268003 1.031249e-01  1.114713001 2.665006e-01\n6                                               Olfactory areas  1.05705001 0.2957630429   1.44562749 1.539279e-01  3.066738012 2.599887e-03\n7                                                  Taenia tecta  0.13929334 0.8896651326   0.27995450 7.802533e-01 -3.570937775 4.476223e-04\n8                                     Taenia tecta, dorsal part  0.05972928 0.9525575256   0.13708357 8.913086e-01 -3.727153054 2.525799e-04\n9                                left Taenia tecta, dorsal part -0.10301294 0.9182575692  -0.22626351 8.215321e-01 -3.982354315 9.490486e-05\n10                              right Taenia tecta, dorsal part  0.21157798 0.8331292080   0.48347036 6.301319e-01 -3.112188416 2.136721e-03\n11                                      Cortical amygdalar area  0.42590961 0.6713255321   1.21225073 2.281128e-01  2.349771471 1.969870e-02\n12                      Cortical amygdalar area, posterior part  0.42590961 0.6713255321   1.21225073 2.281128e-01  2.349771471 1.969870e-02\n13  right Cortical amygdalar area, posterior part, lateral zone  0.62949149 0.5306604735   1.18978582 2.364804e-01  2.713181860 7.202958e-03\n14                                      Piriform-amygdalar area  0.47455409 0.6364441146   0.87961960 3.811282e-01  2.820685973 5.246670e-03\n15                                 left Piriform-amygdalar area -0.04023687 0.9680299193  -0.02075935 9.834894e-01  2.366453036 1.892470e-02\n16                                right Piriform-amygdalar area  0.61685426 0.5388203695   1.22451576 2.229724e-01  2.122667779 3.492040e-02\n17                                          Main olfactory bulb  1.08305318 0.2835784873   1.49807329 1.389888e-01  3.995371926 9.587945e-05\n18                        Main olfactory bulb, glomerular layer  0.75445747 0.4533405421   0.84989070 3.979138e-01  4.000706834 8.912190e-05\n19                   left Main olfactory bulb, glomerular layer  0.83932821 0.4043691191   0.70592297 4.822466e-01  4.145061245 5.017207e-05\n20                  right Main olfactory bulb, glomerular layer  0.64471216 0.5214154427   0.95235460 3.437737e-01  3.719652908 2.596169e-04\n21                   Main olfactory bulb, outer plexiform layer  0.27052966 0.7876657958   1.00630183 3.174905e-01  3.363204791 9.298018e-04\n22              left Main olfactory bulb, outer plexiform layer  0.34753423 0.7294012793   1.35344065 1.800283e-01  3.261733045 1.312292e-03\n23             right Main olfactory bulb, outer plexiform layer  0.18752772 0.8518500286   0.68395239 4.960192e-01  3.321958685 1.066005e-03\n24                            Main olfactory bulb, mitral layer  0.86770684 0.3889166177   0.89737864 3.723329e-01  3.841059064 1.658985e-04\n25                       left Main olfactory bulb, mitral layer  0.93004911 0.3559430760   0.81320042 4.186030e-01  3.879886238 1.429311e-04\n26                      right Main olfactory bulb, mitral layer  0.74694151 0.4578757622   0.98381416 3.282236e-01  3.674016496 3.078499e-04\n27                   Main olfactory bulb, inner plexiform layer  0.89497677 0.3741477061   1.05518383 2.945021e-01  3.941575362 1.121291e-04\n28              left Main olfactory bulb, inner plexiform layer  0.78514758 0.4351056872   1.27233551 2.066698e-01  3.753259414 2.275460e-04\n29             right Main olfactory bulb, inner plexiform layer  0.92604380 0.3578567019   0.83477035 4.062839e-01  3.947188325 1.095009e-04\n30                           Main olfactory bulb, granule layer  1.76091574 0.0842571101   2.31149591 2.428824e-02  2.137291144 3.413842e-02\n31                      left Main olfactory bulb, granule layer  1.83993486 0.0715233995   2.04604355 4.509538e-02  2.008888631 4.623745e-02\n32                     right Main olfactory bulb, granule layer  1.56933273 0.1226471496   2.43826449 1.768667e-02  2.095090367 3.773361e-02\n33                                     Accessory olfactory bulb  0.62497530 0.5346731678   0.98302402 3.293836e-01  3.027844995 2.858518e-03\n34                   Accessory olfactory bulb, glomerular layer  0.66154132 0.5111876985   1.24188020 2.190283e-01  3.136957139 2.030710e-03\n35              left Accessory olfactory bulb, glomerular layer  0.86727648 0.3896620427   1.59984992 1.145973e-01  3.077546089 2.438047e-03\n36             right Accessory olfactory bulb, glomerular layer  0.40726913 0.6854575238   0.81143217 4.202058e-01  2.874803489 4.577300e-03\n37                     Accessory olfactory bulb, granular layer  0.44260480 0.6595377469   0.48225407 6.309316e-01  2.277446150 2.382375e-02\n38                left Accessory olfactory bulb, granular layer  0.82763716 0.4107053828   0.45727304 6.485833e-01  2.283772120 2.340339e-02\n39                   left Dorsal intermediate entorhinal cortex  0.13796156 0.8906534529   2.90462092 4.580746e-03  1.805863904 7.237843e-02\n40                       Ventral intermediate entorhinal cortex  0.14260186 0.8870408723   1.12386482 2.643080e-01  2.580144677 1.058807e-02\n41                  left Ventral intermediate entorhinal cortex  0.55512661 0.5801408221   2.41836995 1.699507e-02  2.252376489 2.530432e-02\n42                 right Ventral intermediate entorhinal cortex -0.26455688 0.7922954941  -0.22627045 8.216519e-01  2.225118794 2.729567e-02\n43              left Entorhinal area, medial part, ventral zone  0.71249127 0.4786685244   2.00322015 4.839094e-02  2.022884019 4.440474e-02\n44                                   Field CA1, pyramidal layer  1.04381684 0.2998619555  -0.01178439 9.906209e-01  2.081256723 3.861291e-02\n45                                             left CA3Py Inner  2.13310567 0.0359664233   1.07334933 2.855173e-01  0.382301816 7.026177e-01\n46                              left Field CA3, stratum lucidum  0.56562130 0.5732959058   0.89134829 3.748430e-01  2.491107528 1.350154e-02\n47                                                Dentate gyrus  1.79397194 0.0786150983   2.23239929 2.924816e-02  0.717449838 4.741320e-01\n48                               Dentate gyrus, molecular layer  1.69115148 0.0970295801   2.03473185 4.644921e-02  0.574504404 5.664836e-01\n49                         right Dentate gyrus, molecular layer  1.59843853 0.1160794941   2.04555126 4.518122e-02 -0.145528216 8.844796e-01\n50                            Dentate gyrus, granule cell layer  1.86031710 0.0669229798   2.48957847 1.455549e-02  0.893218815 3.727692e-01\n51                                                         GrDG  1.84761452 0.0687634064   2.42251541 1.733923e-02  0.997684166 3.195882e-01\n52                                                    left GrDG  2.05118091 0.0439434450   2.15321497 3.392520e-02  0.717370791 4.739516e-01\n53                                                   right GrDG  1.22999524 0.2225206766   2.37204627 1.961839e-02  1.193153205 2.341483e-01\n54                                                         PoDG  1.73397291 0.0867443002   2.44766457 1.599046e-02  0.568100465 5.705632e-01\n55                                                    left PoDG  2.15662770 0.0335831228   2.04042669 4.333300e-02  0.478106514 6.330580e-01\n56                                                   right PoDG  1.06193514 0.2918160254   2.43614484 1.674056e-02  0.528854900 5.974685e-01\n57                                      Anterior cingulate area  2.89041508 0.0054666145   3.76649919 3.505578e-04 -0.092956490 9.260430e-01\n58                        Anterior cingulate area, ventral part  2.81095197 0.0067881573   4.01505329 1.514331e-04  0.287881923 7.737716e-01\n59                                   Cingulate cortex: area 24a  1.94990318 0.0557093705   3.22601044 1.843398e-03  0.495689971 6.206728e-01\n60                              left Cingulate cortex: area 24a  1.72172185 0.0899576572   2.60219016 1.103268e-02 -0.146880923 8.833753e-01\n61                             right Cingulate cortex: area 24a  1.96071742 0.0541003505   3.40376992 1.018842e-03  0.903126033 3.675325e-01\n62                                  Cingulate cortex: area 24a'  3.62145879 0.0006053643   4.08238683 1.123576e-04 -0.482377653 6.300957e-01\n63                             left Cingulate cortex: area 24a'  3.39065208 0.0011788097   3.74783699 3.264195e-04 -0.609395812 5.429467e-01\n64                            right Cingulate cortex: area 24a'  3.18778802 0.0022346928   3.69818573 4.011053e-04 -0.236146429 8.135654e-01\n65                         Anterior cingulate area, dorsal part  2.54791911 0.0134780545   2.89736778 4.990384e-03 -0.529072115 5.973861e-01\n66                                   Cingulate cortex: area 24b  2.53120564 0.0138882710   3.14877364 2.322969e-03 -0.523440619 6.012595e-01\n67                              left Cingulate cortex: area 24b  2.05525500 0.0443178927   2.35452236 2.129534e-02 -0.891604826 3.737567e-01\n68                             right Cingulate cortex: area 24b  2.47763895 0.0157856008   3.25974019 1.612520e-03 -0.156533931 8.757686e-01\n69                                           Retrosplenial area  2.04686285 0.0464736981   2.07377689 4.313839e-02  0.311427224 7.560106e-01\n70                             Retrosplenial area, ventral part  2.45487020 0.0173984481   2.98196446 4.069894e-03  0.050104265 9.600994e-01\n71                                   Cingulate cortex: area 29a  0.60869182 0.5441952216   2.04393674 4.297968e-02 -0.181179015 8.563970e-01\n72                             right Cingulate cortex: area 29a  1.23878639 0.2190473756   2.52647726 1.298648e-02  0.004481050 9.964288e-01\n73                                   Cingulate cortex: area 29c  2.60442964 0.0121297779   3.00309423 3.963946e-03  0.005246101 9.958214e-01\n74                              left Cingulate cortex: area 29c  2.26627255 0.0277483037   2.23534580 2.920106e-02 -0.760420352 4.481708e-01\n75                             right Cingulate cortex: area 29c  2.57758557 0.0126737048   3.31807905 1.484088e-03  0.663005258 5.082104e-01\n76                                              Ectorhinal area -0.07621079 0.9395883641  -0.28216565 7.789645e-01 -2.620086064 9.941764e-03\n77                                      right Ectorhinal cortex -0.12439314 0.9013876627  -1.12220904 2.650516e-01 -2.161095501 3.187571e-02\n78                               Insular region: not subdivided -0.19258484 0.8480682738  -0.38576597 7.010893e-01 -2.393819072 1.791804e-02\n79                         right Insular region: not subdivided -0.13033055 0.8967825861  -0.48275032 6.308853e-01 -2.546811622 1.174310e-02\n80                                            Somatomotor areas  2.28246603 0.0266237956   2.24333530 2.855839e-02 -0.186638610 8.521829e-01\n81                                           Primary motor area  2.14378680 0.0365063104   2.18624910 3.238118e-02 -0.416752777 6.773759e-01\n82                                  left Frontal cortex: area 3  0.57290568 0.5683747565   0.53670373 5.926398e-01  2.729838053 6.868969e-03\n83                                         Primary motor cortex  2.09939989 0.0404148379   2.19334018 3.185373e-02 -0.591792198 5.547645e-01\n84                                   right Primary motor cortex  1.85990723 0.0677122064   2.06952805 4.191651e-02 -0.073733785 9.412988e-01\n85                                         Secondary motor area  2.09690230 0.0409982950   1.83283465 7.184748e-02  0.384400838 7.012085e-01\n86                                                 Orbital area  0.79197581 0.4314012828   2.24780070 2.746073e-02 -0.392504840 6.951159e-01\n87                                   Orbital area, lateral part  0.82990598 0.4094046780   2.10563592 3.800542e-02 -0.649403540 5.167978e-01\n88                             right Orbital area, lateral part  1.01490474 0.3135257102   2.21072636 2.947148e-02  0.124041205 9.014018e-01\n89                             Orbital area, ventrolateral part  1.21844275 0.2277970946   2.41218048 1.832645e-02 -0.130135607 8.965964e-01\n90                       right Orbital area, ventrolateral part  1.58469133 0.1186036375   2.74751526 7.670836e-03  0.598515679 5.502489e-01\n91                         Posterior parietal association areas  2.29373983 0.0261473757   1.15091153 2.546325e-01  0.093526181 9.256158e-01\n92                      left Medial parietal association cortex  2.00087236 0.0498773751   0.43731368 6.631407e-01  0.534527413 5.935963e-01\n93                Parietal cortex: posterior area: rostral part  1.99876912 0.0485182444   0.22186624 8.247662e-01 -0.688751475 4.917189e-01\n94                    Secondary visual cortex: mediomedial area  2.04075903 0.0463293986   1.57276974 1.208862e-01  0.313046815 7.546460e-01\n95               left Secondary visual cortex: mediomedial area  2.25949199 0.0277367290   1.26045426 2.118176e-01 -0.061516255 9.510167e-01\n96                             Primary somatosensory area-other  0.64431633 0.5219551585   2.11748339 3.782922e-02 -0.562347667 5.745749e-01\n97                        left Primary somatosensory area-other  1.08118993 0.2839240117   2.48417509 1.524557e-02  0.022708242 9.819068e-01\n98                       Primary somatosensory area, upper limb  1.79991104 0.0766385424   2.16653121 3.328038e-02 -0.458151461 6.473484e-01\n99                 right Primary somatosensory area, upper limb  1.45325068 0.1512126574   2.37332813 2.013441e-02 -0.255831412 7.983521e-01\n100                     right Primary somatosensory area, mouth -0.35368431 0.7243666184   0.81915561 4.141970e-01  2.082549849 3.846989e-02\n101                             Supplemental somatosensory area  0.27393729 0.7850863297   0.05374051 9.572898e-01 -2.193598726 2.949333e-02\n102                       right Supplemental somatosensory area  0.81308873 0.4191758410  -0.08250498 9.344502e-01 -2.481148664 1.392694e-02\n103                            right Temporal association areas  0.84196550 0.4028433417   0.29474621 7.689178e-01 -2.141010829 3.347273e-02\n104                                                Visual areas  1.62755273 0.1105684675   2.67963874 9.904321e-03 -0.232924936 8.162191e-01\n105                                         Primary visual area  0.54444350 0.5882803837   2.82716725 6.161009e-03 -0.366128430 7.147011e-01\n106                                    left Primary visual area  1.03833584 0.3031244166   2.49961834 1.454598e-02  0.168716196 8.661947e-01\n107                                   right Primary visual area -0.20474541 0.8384342803   2.18006642 3.226467e-02 -0.804949551 4.218250e-01\n108                                         Lateral visual area  1.37932670 0.1737291223   2.04751106 4.494255e-02  0.588044319 5.573340e-01\n109                              left posteromedial visual area  1.53440489 0.1300323665   2.25328793 2.709939e-02 -0.093135073 9.258924e-01\n110                                   Anterolateral visual area  1.49409073 0.1410430674   2.44257592 1.738979e-02 -0.875735807 3.824305e-01\n111                              left Anterolateral visual area  1.85497638 0.0686827970   2.00640888 4.864694e-02 -1.920221055 5.637458e-02\n112                             right Anterolateral visual area  0.90215195 0.3708664070   2.54430232 1.326990e-02  0.409875161 6.823953e-01\n113                                    Anteromedial visual area  2.33925013 0.0230309425   1.64794332 1.042142e-01 -0.229944973 8.184092e-01\n114                               left Anteromedial visual area  2.36060757 0.0217228601   1.79612790 7.691119e-02 -0.192907200 8.472501e-01\n115                                             Cerebral nuclei  1.63147852 0.1092807178   2.15117690 3.581969e-02 -0.190005636 8.495780e-01\n116                                     Pallidum, caudal region  1.52344843 0.1325999299   2.64911203 9.728901e-03  1.479175636 1.406851e-01\n117                          Bed nuclei of the stria terminalis  1.52344843 0.1325999299   2.64911203 9.728901e-03  1.479175636 1.406851e-01\n118                     left Bed nuclei of the stria terminalis  1.68710921 0.0963220316   2.97302617 3.857565e-03  1.602933125 1.105179e-01\n119                                left Pallidum, dorsal region  2.05131978 0.0443853252   1.52745621 1.306455e-01  0.322436206 7.474645e-01\n120                                                    Striatum  1.65832480 0.1038003652   2.34767415 2.253352e-02 -0.310959991 7.563029e-01\n121                                     Striatum ventral region  1.55080118 0.1270250345   2.52846381 1.406037e-02 -1.199768683 2.319975e-01\n122                                          Fundus of striatum  1.99949643 0.0490721918   0.55096679 5.828584e-01  0.373314141 7.092874e-01\n123                                     left Fundus of striatum  2.13321845 0.0359793153   1.15964099 2.487870e-01 -0.013727666 9.890601e-01\n124                                           Nucleus accumbens  1.46933696 0.1472129605   1.51453261 1.344342e-01 -2.151443289 3.275990e-02\n125                                      left Nucleus accumbens  0.80172583 0.4259718411   0.23941133 8.114777e-01 -2.607528113 9.864867e-03\n126                                     right Nucleus accumbens  2.11162508 0.0386463816   2.68124671 8.910977e-03 -1.451190941 1.483108e-01\n127                                          Olfactory tubercle  1.05764308 0.2950764059   3.27352263 1.743996e-03  1.065170532 2.883791e-01\n128                                     left Olfactory tubercle  0.55563682 0.5810390276   2.99167672 4.145212e-03  0.704118992 4.825402e-01\n129                                    right Olfactory tubercle  1.26718298 0.2097004328   2.69885471 8.490021e-03  1.077402071 2.826126e-01\n130                                      Striatum dorsal region  1.59621441 0.1167905721   2.09635199 4.046242e-02 -0.519293268 6.043303e-01\n131                                                Caudoputamen  1.59621441 0.1167905721   2.09635199 4.046242e-02 -0.519293268 6.043303e-01\n132                                          right Caudoputamen  1.21826159 0.2288407050   2.17067033 3.405644e-02  0.012502435 9.900413e-01\n133                              Striatum-like amygdalar nuclei  1.83237598 0.0721813549   4.28880051 5.820549e-05  5.115183773 8.024375e-07\n134                                    Medial amygdalar nucleus  1.83237598 0.0721813549   4.28880051 5.820549e-05  5.115183773 8.024375e-07\n135                               left Medial amygdalar nucleus  1.64945465 0.1048898696   3.50273504 8.469651e-04  6.015841462 1.079239e-08\n136                              right Medial amygdalar nucleus  1.55465346 0.1253935108   3.84953158 2.542587e-04  3.322121641 1.074963e-03\n137                              right Superior olivary complex  0.05531238 0.9560068645  -0.15430880 8.776056e-01  1.989820764 4.787216e-02\n138                                                Hypothalamus  1.41875906 0.1613389327   2.02426328 4.674921e-02  0.848691833 3.971582e-01\n139                                          Hypothalamus-other  1.35709639 0.1800725820   2.09667655 3.966855e-02  0.920693158 3.584295e-01\n140                                    right Hypothalamus-other  1.37219933 0.1752438842   2.29589779 2.462681e-02  0.952024045 3.423234e-01\n141                                     Medial preoptic nucleus  2.63724048 0.0100175054   3.74786577 2.876162e-04  0.838867361 4.024806e-01\n142                                left Medial preoptic nucleus  2.05964928 0.0423845059   3.20386415 1.736165e-03  0.548685232 5.837896e-01\n143                               right Medial preoptic nucleus  2.80561609 0.0062241280   3.42554771 8.510278e-04  1.047550133 2.960226e-01\n144                                                Lobules IV-V  0.96970507 0.3360978611   1.38811583 1.692986e-01  2.212732445 2.811182e-02\n145                                           left Lobules IV-V  1.01220793 0.3155242173   2.15336754 3.458291e-02  2.198941501 2.909634e-02\n146                                                fiber tracts  2.15047724 0.0365750013   1.32313533 1.912498e-01  1.608474260 1.100012e-01\n147                                              cranial nerves  2.14848441 0.0355713497   1.05415482 2.950912e-01  2.514324494 1.273459e-02\n148                                             olfactory nerve  1.59140739 0.1168527206   1.20300427 2.329001e-01  3.026495691 2.822097e-03\n149                         anterior commissure, olfactory limb  2.31059820 0.0243423691   1.92746897 5.782111e-02  1.732266470 8.486384e-02\n150                    left anterior commissure, olfactory limb  2.31949161 0.0236326136   1.81372831 7.355098e-02  1.643635625 1.018539e-01\n151                   right anterior commissure, olfactory limb  2.06602098 0.0432829833   1.83782066 7.027689e-02  1.621930698 1.065218e-01\n152                            lateral olfactory tract, general  0.56045801 0.5769417902   0.37603345 7.077661e-01  3.282104518 1.209066e-03\n153                       left lateral olfactory tract, general  0.31841799 0.7511740960   0.47515613 6.359173e-01  2.949569318 3.558513e-03\n154                      right lateral olfactory tract, general  0.75367218 0.4534626718   0.26243379 7.935520e-01  3.393751832 8.243206e-04\n155                                           left facial nerve  0.07178923 0.9429219907   0.08996805 9.284511e-01  2.601573574 9.921604e-03\n156                                                 optic nerve  2.31938092 0.0235569405   2.20511529 3.028513e-02  2.171375255 3.108564e-02\n157                                                 optic tract  2.31938092 0.0235569405   2.20511529 3.028513e-02  2.171375255 3.108564e-02\n158                                            left optic tract  2.43354698 0.0176991213   2.35823892 2.073433e-02  1.939141665 5.388782e-02\n159                                           right optic tract  1.79912286 0.0764397294   1.67208756 9.811087e-02  1.982864258 4.872228e-02\n160                              medial forebrain bundle system  1.54047553 0.1295956371   2.00176755 4.983811e-02  0.820057396 4.134250e-01\n161                          anterior commissure, temporal limb  2.47073378 0.0157901158   0.29082517 7.718083e-01 -0.340182774 7.340588e-01\n162                     left anterior commissure, temporal limb  2.98714302 0.0037180475  -0.03100751 9.753200e-01 -0.635956949 5.254840e-01\n163                                               fornix system  1.27686371 0.2074412777   2.02445229 4.742052e-02  1.008159964 3.149437e-01\n164                                               right fimbria  1.13470644 0.2615516035   2.50333186 1.488497e-02  1.567066898 1.189804e-01\n165                                       left stria terminalis  1.17632620 0.2447710643   0.89269542 3.754781e-01  2.195529588 2.953636e-02\n166                                             cingulum bundle  0.93420436 0.3535511579   1.99197736 4.957479e-02  1.197684218 2.324357e-01\n167                                       right cingulum bundle  0.82700372 0.4110737821   2.12828761 3.607782e-02  1.555308756 1.214081e-01\n168                                        hypothalamus related  2.10524018 0.0389756255   1.87502412 6.416111e-02 -1.005769668 3.157168e-01\n169                                         epithalamus related  1.67851331 0.0977889412   2.28814008 2.452487e-02 -0.947293349 3.446032e-01\n170                                        habenular commissure -0.48041233 0.6330947642   0.10169676 9.193621e-01 -3.155430400 1.958117e-03\n171                                   left habenular commissure  0.36925185 0.7131234661   0.78096036 4.370375e-01 -3.899862835 1.310805e-04\n172                                  right habenular commissure -0.76285581 0.4493484280  -0.22863173 8.200222e-01 -2.102189266 3.742223e-02\n173                                            stria medullaris  1.77097150 0.0822404061   2.11433457 3.840288e-02 -1.146700471 2.531297e-01\n174                                       left stria medullaris  2.02359840 0.0479164213   2.17057963 3.361202e-02 -1.332094318 1.845876e-01\n175                                          mammillary related  2.42372706 0.0174874713  -0.75508893 4.517404e-01 -0.442895689 6.582867e-01\n176                                        mammilothalmic tract  2.42372706 0.0174874713  -0.75508893 4.517404e-01 -0.442895689 6.582867e-01\n177                                  right mammilothalmic tract  2.29224766 0.0241278951  -1.04255527 2.990973e-01  0.280110962 7.796605e-01\n178                          right inferior cerebellar peduncle  1.83356276 0.0713658947   0.21350182 8.314767e-01  2.228914994 2.694144e-02\n179                            right middle cerebellar peduncle -0.49499567 0.6222409196  -2.04248048 4.424289e-02  0.637186174 5.247251e-01\n180                           left superior cerebelar peduncles  2.10006568 0.0383980504   1.60144508 1.117059e-01 -0.612786189 5.406625e-01\n181                           trunk of lobules 1-3 white matter  0.35793049 0.7216886548  -0.06437228 9.488548e-01  3.165628427 1.809947e-03\n182                                anterior lobule white matter  1.39921167 0.1654625266  -0.24697556 8.053778e-01  2.586161014 1.036662e-02\n183                           left anterior lobule white matter  1.03922671 0.3023656928   0.65229291 5.159265e-01  2.808271803 5.462854e-03\n184                                  simple lobule white matter  0.78669952 0.4337591405   0.01417322 9.887179e-01  1.977775850 4.923888e-02\n185                            right simple lobule white matter  0.75701768 0.4515018762   0.09982344 9.206974e-01  3.154142792 1.846984e-03\n186                                   right crus 1 white matter  0.29266705 0.7704954829   0.44254224 6.589346e-01  2.619793847 9.426042e-03\n187                                      left paramedian lobule  0.49851249 0.6192860354  -0.88560124 3.774679e-01 -2.103030884 3.662099e-02\n188                                  paraflocculus white matter  1.13142227 0.2627311766   0.68463742 4.959424e-01  2.043332403 4.250790e-02\n189                            right paraflocculus white matter  1.16949793 0.2472015028   0.83686215 4.056647e-01  2.025063171 4.437365e-02\n190                             lateral forebrain bundle system  2.10483227 0.0406985077   1.89863183 6.303237e-02  1.178137677 2.408808e-01\n191                                   corticospinal tract-other  1.81266141 0.0743942481   0.64199871 5.226134e-01  2.273358956 2.405407e-02\n192                             right corticospinal tract-other  1.68248134 0.0970751182   0.65057059 5.170479e-01  2.430010308 1.596292e-02\n193                                       right corpus callosum  1.75795077 0.0844213461   2.07291454 4.219665e-02  1.203112858 2.306058e-01\n194                                           subependymal zone  1.48031436 0.1424758663   1.02295713 3.084638e-01  2.351625594 1.959579e-02\n195                                      left subependymal zone  1.02151053 0.3099360387   0.91384858 3.627250e-01  2.279145619 2.364119e-02\n196                                     right subependymal zone  1.65320683 0.1017859992   0.98361302 3.272390e-01  2.088557892 3.792105e-02\n\n\nThis table is neither visually appealing nor particularly parseable given the many many rows. We could reduce the number of rows by being stricter with our p value thresholds, and we could prune the anatomical tree to only look at some aspects. And lastly we can make the table prettier. We’ll do a bit of all of that, using the gt and gtExtras packages (see here for a nice intro).\nFirst, let’s create our table, this time from the symmetric version of the atlas. Filter it to keep just the leaves - i.e. the bottom of our anatomical hierarchy.\n\n#t_formatter &lt;- \n#  formatter(\"span\", \n#            style = x ~ style(\n#              font.weight = \"bold\", \n#              color = ifelse(x &gt; 0, \"pink\", ifelse(x &lt; 0, \"blue\", \"black\"))))\n\nresultsTable &lt;- ToDataFrameTree(hvolsSym, \"name\", \n                \"statistic_7\", \"p.value_7\",\n                \"statistic_21\", \"p.value_21\",\n                \"statistic_65\", \"p.value_65\",\n                filterFun = isLeaf) %&gt;%\n  # keep any structure where the p value at any of the three ages is &lt; 0.05\n  filter(p.value_7 &lt; 0.05 | p.value_21 &lt; 0.05 | p.value_65 &lt; 0.05) \n\nNext we round the t statistics since we don’t need so many significant digits. We also create a new trends column for plotting a trend-line (a bit superfluous, but hey). Lastly, a column to indicate where in the tree that node comes from.\n\nresultsTable &lt;- resultsTable %&gt;%\n  rowwise() %&gt;%\n  mutate(p7 = round(statistic_7, 2),\n         p21 = round(statistic_21, 2), \n         p65 = round(statistic_65, 2),\n         trend = list(c_across(p7:p65)),\n         hierarchy = ifelse(any(FindNode(hvolsSym, name)$path == \"Cortical plate\"), \n                            FindNode(hvolsSym, name)$path[6], \n                            FindNode(hvolsSym, name)$path[3])) %&gt;%\n  select(hierarchy, name, p7, p21, p65, trend) \n\nFinally we can turn it into a table, adding colours to the p values and a sparkline.\n\nresultsTable %&gt;%\n  gt(groupname_col = 'hierarchy') %&gt;%\n  #cols_label(.list = desired_colnames) %&gt;% \n  #spanners_and_header() %&gt;%\n  gt_color_rows(p7:p65, palette = colorRampPalette(c(\"blue\", \"white\", \"red\"))(255), domain=c(-7,7)) %&gt;%\n  gt_plt_sparkline(trend) %&gt;%\n  tab_spanner(label=md(\"**Age (t-statistic)**\"), columns=p7:p65) %&gt;%\n  tab_style(cell_text(weight = \"bold\"), cells_column_labels()) %&gt;%\n  tab_style(cell_text(indent = pct(3)), cells_body()) %&gt;%\n  tab_style(cell_text(weight = \"bold\", style = \"italic\"), \n            cells_row_groups()) %&gt;%\n  tab_header(\"Sex effects across age\",\n             subtitle = \"Computed using estimated marginal means from a third order spline\")\n\n\n\n\n\n  \n    \n      Sex effects across age\n    \n    \n      Computed using estimated marginal means from a third order spline\n    \n    \n      name\n      \n        Age (t-statistic)\n      \n      trend\n    \n    \n      p7\n      p21\n      p65\n    \n  \n  \n    \n      Cerebrum\n    \n    Claustrum-other\n0.66\n-0.78\n2.06\n          2.1\n    Intermediate nucleus of the endopiriform claustrum\n2.35\n1.77\n0.41\n          0.4\n    Bed nuclei of the stria terminalis\n1.52\n2.65\n1.48\n          1.5\n    Fundus of striatum\n2.00\n0.55\n0.37\n          0.4\n    Nucleus accumbens\n1.47\n1.51\n-2.15\n          -2.1\n    Olfactory tubercle\n1.06\n3.27\n1.07\n          1.1\n    Caudoputamen\n1.60\n2.10\n-0.52\n          -0.5\n    Medial amygdalar nucleus\n1.83\n4.29\n5.12\n          5.1\n    \n      Olfactory areas\n    \n    Taenia tecta, dorsal part\n0.06\n0.14\n-3.73\n          -3.73\n    Piriform-amygdalar area\n0.47\n0.88\n2.82\n          2.8\n    Main olfactory bulb, glomerular layer\n0.75\n0.85\n4.00\n          4.0\n    Main olfactory bulb, outer plexiform layer\n0.27\n1.01\n3.36\n          3.4\n    Main olfactory bulb, mitral layer\n0.87\n0.90\n3.84\n          3.8\n    Main olfactory bulb, inner plexiform layer\n0.89\n1.06\n3.94\n          3.9\n    Main olfactory bulb, granule layer\n1.76\n2.31\n2.14\n          2.1\n    Accessory olfactory bulb, glomerular layer\n0.66\n1.24\n3.14\n          3.1\n    Accessory olfactory bulb, granular layer\n0.44\n0.48\n2.28\n          2.28\n    \n      Hippocampal formation\n    \n    Ventral intermediate entorhinal cortex\n0.14\n1.12\n2.58\n          2.6\n    Field CA1, pyramidal layer\n1.04\n-0.01\n2.08\n          2.1\n    Dentate gyrus, molecular layer\n1.69\n2.03\n0.57\n          0.6\n    GrDG\n1.85\n2.42\n1.00\n          1.0\n    PoDG\n1.73\n2.45\n0.57\n          0.6\n    \n      Isocortex\n    \n    Cingulate cortex: area 24a\n1.95\n3.23\n0.50\n          0.5\n    Cingulate cortex: area 24a'\n3.62\n4.08\n-0.48\n          -0.5\n    Cingulate cortex: area 24b\n2.53\n3.15\n-0.52\n          -0.5\n    Cingulate cortex: area 29a\n0.61\n2.04\n-0.18\n          -0.2\n    Cingulate cortex: area 29c\n2.60\n3.00\n0.01\n          0.0\n    Insular region: not subdivided\n-0.19\n-0.39\n-2.39\n          -2.39\n    Primary motor cortex\n2.10\n2.19\n-0.59\n          -0.6\n    Secondary motor area\n2.10\n1.83\n0.38\n          0.4\n    Orbital area, lateral part\n0.83\n2.11\n-0.65\n          -0.6\n    Orbital area, ventrolateral part\n1.22\n2.41\n-0.13\n          -0.1\n    Parietal cortex: posterior area: rostral part\n2.00\n0.22\n-0.69\n          -0.69\n    Secondary visual cortex: mediomedial area\n2.04\n1.57\n0.31\n          0.3\n    Primary somatosensory area-other\n0.64\n2.12\n-0.56\n          -0.6\n    Primary somatosensory area, upper limb\n1.80\n2.17\n-0.46\n          -0.5\n    Supplemental somatosensory area\n0.27\n0.05\n-2.19\n          -2.19\n    Primary visual area\n0.54\n2.83\n-0.37\n          -0.4\n    Lateral visual area\n1.38\n2.05\n0.59\n          0.6\n    Anterolateral visual area\n1.49\n2.44\n-0.88\n          -0.9\n    Anteromedial visual area\n2.34\n1.65\n-0.23\n          -0.2\n    \n      Brain stem\n    \n    Hypothalamus-other\n1.36\n2.10\n0.92\n          0.9\n    Medial preoptic nucleus\n2.64\n3.75\n0.84\n          0.8\n    \n      Cerebellum\n    \n    Lobules IV-V\n0.97\n1.39\n2.21\n          2.2\n    \n      cranial nerves\n    \n    anterior commissure, olfactory limb\n2.31\n1.93\n1.73\n          1.7\n    lateral olfactory tract, general\n0.56\n0.38\n3.28\n          3.3\n    optic tract\n2.32\n2.21\n2.17\n          2.2\n    \n      medial forebrain bundle system\n    \n    anterior commissure, temporal limb\n2.47\n0.29\n-0.34\n          -0.34\n    cingulum bundle\n0.93\n1.99\n1.20\n          1.2\n    habenular commissure\n-0.48\n0.10\n-3.16\n          -3.16\n    stria medullaris\n1.77\n2.11\n-1.15\n          -1.1\n    mammilothalmic tract\n2.42\n-0.76\n-0.44\n          -0.44\n    \n      cerebellum related fiber tracts\n    \n    trunk of lobules 1-3 white matter\n0.36\n-0.06\n3.17\n          3.17\n    anterior lobule white matter\n1.40\n-0.25\n2.59\n          2.6\n    simple lobule white matter\n0.79\n0.01\n1.98\n          2.0\n    paraflocculus white matter\n1.13\n0.68\n2.04\n          2.0\n    \n      lateral forebrain bundle system\n    \n    corticospinal tract-other\n1.81\n0.64\n2.27\n          2.3\n    \n      lateral ventricle\n    \n    subependymal zone\n1.48\n1.02\n2.35\n          2.4\n  \n  \n  \n\n\n\n\n\n\nModel comparisons\nThe approach so far is to examine sex differences at three somewhat arbitrary ages. Going back to part 1 of this series, we do better (or at least complement this approach) by comparing different models in order to ascertain where sex and age by sex interactions matter. Let’s test that approach out across all brain structures.\nThe first step is to create a function that evaluates an arbitrary brain structure, runs our three statistical models, and computes the log-likelihood test. This function will take a single argument containing the dataframe to process, since when we iterate over our brain structures we first mutate our main dataframe to add the roi variable.\n\nmodelComp &lt;- function(gf){\n  # the default model - spline by age, no sex\n  mSimple &lt;- lmer(roi ~ ns(age, 3) + (1|subject_id), gf, REML = F)\n  # different intercept but same slope by sex\n  mIntercept &lt;- lmer(roi ~ sex + ns(age, 3) + (1|subject_id), gf, REML=F)\n  # different intercept and different slope by sex\n  mInteraction &lt;- lmer(roi ~ sex * ns(age, 3) + (1|subject_id), gf, REML=F)\n  anova(mSimple, mIntercept, mInteraction) %&gt;%\n    # make output easier to parse\n    tidy() %&gt;%\n    # keep just the most interesting variables\n    select(term, AIC, BIC, logLik, p.value) %&gt;%\n    # and make it wider for easier looping\n    pivot_wider(names_from = term, \n                values_from = c(AIC, BIC, logLik, p.value)) %&gt;%\n    # get rid of the one value that will always be NA\n    select(-p.value_mSimple)\n}\n\nLet’s test that function out on a single brain structure to make sure it works and makes sense.\n\nmodelComp(gf %&gt;% mutate(roi = FindNode(hvols, \"Medial amygdalar nucleus\")$volumes))\n\n# A tibble: 1 × 11\n  AIC_mSimple AIC_mIntercept AIC_mInteraction BIC_mSimple BIC_mIntercept BIC_mInteraction logLik_mSimple logLik_mIntercept logLik_mInteraction p.value_mIntercept p.value_mInteraction\n        &lt;dbl&gt;          &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;          &lt;dbl&gt;            &lt;dbl&gt;          &lt;dbl&gt;             &lt;dbl&gt;               &lt;dbl&gt;              &lt;dbl&gt;                &lt;dbl&gt;\n1       -690.          -702.            -718.       -670.          -678.            -684.           351.              358.                369.           0.000265            0.0000525\n\n\nNow we are ready to iterate over our hierarchical tree\n\nTraverse(hvols) %&gt;% # start by traversing our hierarchy\n  # run our modelComp function for every structure\n  map_dfr(~ modelComp(gf %&gt;% mutate(roi = .x$volumes))) %&gt;%\n  # and put it back into the tree\n  do.call(hvols$Set, .)\n\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\nboundary (singular) fit: see help('isSingular')\n\n\nThis again gives us lots of those singular fit warnings, and again for the sake of this exercise we ignore them (we will come back to them in a future installment of this series). Let’s take a look by putting the results onto the brain.\n\n# create a copy of the tree (since it modifies in place)\nhvolsSym &lt;- Clone(hvols)\n# prune off ROIs whose names start with left or right\nPrune(hvolsSym, function(x) !str_starts(x$name, \"right\") & !str_starts(x$name, \"left\"))\n\n[1] 308\n\nsliceSeries(nrow=6, ncol=1, begin=65, end=210) %&gt;%\n  anatomy(mritemplate, low=700, high=1400) %&gt;%\n  sliceSeries() %&gt;% anatomy() %&gt;%\n  overlay(hanatToVolume(hvolsSym, mrilabels, \"statistic_21\"), low=2, high=6, symmetric = T) %&gt;%\n  addtitle(\"P21\") %&gt;%\n  sliceSeries() %&gt;% anatomy() %&gt;%\n  overlay(hanatToVolume(hvolsSym, mrilabels, \"statistic_65\"), low=2, high=6, symmetric = T) %&gt;%\n  addtitle(\"P65\") %&gt;%\n  legend(\"t-statistics\") %&gt;%\n  sliceSeries() %&gt;% anatomy() %&gt;%\n  overlay(-log10(hanatToVolume(hvolsSym, mrilabels, \"p.value_mIntercept\"))*as.integer(mrilabels&gt;0), low=1.3, high=6, symmetric = F) %&gt;%\n  addtitle(\"Intercept\") %&gt;%\n  sliceSeries() %&gt;% anatomy() %&gt;%\n  overlay(-log10(hanatToVolume(hvolsSym, mrilabels, \"p.value_mInteraction\"))*as.integer(mrilabels&gt;0), low=1.3, high=6, symmetric = F) %&gt;%\n  addtitle(\"Interaction\") %&gt;%  \n  legend(\"log10 p value\") %&gt;%\n  draw()\n\n\n\n\nOne small trick to note in that bit of code:\nThis line, -log10(hanatToVolume(hvolsSym, mrilabels, \"p.value_mIntercept\"))*as.integer(mrilabels&gt;0), looks a bit ungainly. What it does is to take the “p.value_mIntercept” column from our tree and turn it into a volume. Then, because p values are awkward to display, it computes the negative log10, so that 0.1 turns into 1, 0.01 turns into 2, etc. For visualization that looks a bit weird, since background voxels have a value of zero, and hence we add in *as.integer(mrilabels&gt;0), which zeros the background out again again after the log10 computation.\n\n\nMultiple comparisons\nThis brings us to the final bit of part 2 of this series: dealing with multiple comparisons. Since we are dealing with so many brain structures we have to adjust our p values to account for all these comparisons. We will do this via the false discovery rate-,The%20FDR%20is%20the%20rate%20that%20features%20called%20significant%20are,of%20these%20are%20truly%20null.). But there are three issues somewhat unique to working hierarchical anatomical trees to keep in mind:\n\nThe denominator matters: you thus have to make decisions about how to prune or otherwise adjust your anatomy tree before you adjust for multiple comparisons. For example, you might only care about bilateral structures and not look at unilateral (i.e. left and right) separately. In that case prune first, then apply FDR. Similarly, you might not care about the hierarchy and want to just examine the leaves. So extract them and then apply FDR.\nIf you are going to examine the full hierarchy you create some obvious dependence, since bottom level structures directly add up to top level structures (i.e. left hippocampus + right hippocampus = bilarateral hippocampus). This challenges the degree of dependence that the classical FDR method, by Benjamini and Hochberg, allows. There is an alternative, derived by Benjamini and Yekutieli, which is valid under arbitrary dependence assumption, but is also much more conservative (i.e. less likely to consider a particular test significant).\nThe last issue revolves around whether to pool your tests. For example, above we computed two log-likelihood tests when comparing our models. Do we want to adjust them separately or do we want to concatenate the p values and adjust them jointly?\n\nThe key message behind these points is that the choice of how to prune the tree and which FDR adjustment to employ has to be made before stats are computed and results examined. Which sucks, but thems the breaks.\nLet’s implement them. First, let’s go for the symmetric tree and keeping the whole hierarchy, but not worrying too much about dependence and sticking with Benjamini and Hochberg:\n\npvalsIn &lt;- hvolsSym$Get(\"p.value_mIntercept\")\nqvalsIn &lt;- p.adjust(pvalsIn, method = \"BH\")\nhvolsSym$Set(q.value_mIntercept = qvalsIn)\n\nAnd if we wanted just the leaves:\n\npvalsIn &lt;- hvolsSym$Get(\"p.value_mIntercept\", filterFun = isLeaf)\nqvalsIn &lt;- p.adjust(pvalsIn, method = \"BH\")\nhvolsSym$Set(q.value_mIntercept2 = qvalsIn, filterFun = isLeaf)\n\nLet’s see if it makes a difference:\n\nMeA &lt;- FindNode(hvolsSym, \"Medial amygdalar nucleus\")\nMeA$q.value_mIntercept\n\n[1] 0.03732804\n\nMeA$q.value_mIntercept2\n\n[1] 0.04818229\n\n\nIt does, slightly.\nAnd to finish, let’s stick with the first test (whole tree) and make a table of what survives a 10% FDR. First we also compute the different slope model q values\n\n# onelinear for computing FDR\nhvolsSym$Set(q.value_mInteraction = \n               p.adjust(hvolsSym$Get(\"p.value_mInteraction\"), \"BH\"))\n\nqTable &lt;- ToDataFrameTree(hvolsSym, \"name\", \n                \"statistic_7\", \n                \"statistic_21\",\n                \"statistic_65\",\n                \"q.value_mIntercept\",\n                \"q.value_mInteraction\") %&gt;%\n  # keep any structure where the p value at any of the three ages is &lt; 0.05\n  filter(q.value_mIntercept &lt; 0.1 | q.value_mInteraction &lt; 0.1)  %&gt;%\n  rowwise() %&gt;%\n  mutate(p7 = round(statistic_7, 2),\n         p21 = round(statistic_21, 2), \n         p65 = round(statistic_65, 2),\n         qIntercept = format.pval(q.value_mIntercept, digits=1),\n         qInteract = format.pval(q.value_mInteraction, digits=1)) %&gt;%\n  select(name, p7, p21, p65, qIntercept, qInteract) \n\nqTable %&gt;%\n  gt() %&gt;%\n  gt_color_rows(p7:p65, palette = colorRampPalette(c(\"blue\", \"white\", \"red\"))(255), domain=c(-7,7)) %&gt;%\n  tab_spanner(label=md(\"**Age (t-statistic)**\"), columns=p7:p65) %&gt;%\n  tab_style(cell_text(weight = \"bold\"), cells_column_labels()) %&gt;%\n  tab_header(\"Sex effects across age\",\n             subtitle = \"Computed using estimated marginal means from a third order spline\")\n\n\n\n\n\n  \n    \n      Sex effects across age\n    \n    \n      Computed using estimated marginal means from a third order spline\n    \n    \n      name\n      \n        Age (t-statistic)\n      \n      qIntercept\n      qInteract\n    \n    \n      p7\n      p21\n      p65\n    \n  \n  \n    Anterior cingulate area, ventral part\n2.81\n4.02\n0.29\n0.09\n0.6\n    Cingulate cortex: area 24a'\n3.62\n4.08\n-0.48\n0.09\n0.2\n    Striatum-like amygdalar nuclei\n1.83\n4.29\n5.12\n0.04\n0.007\n    Medial amygdalar nucleus\n1.83\n4.29\n5.12\n0.04\n0.007\n    Medial preoptic nucleus\n2.64\n3.75\n0.84\n0.06\n0.8\n  \n  \n  \n\n\n\n\nAnd there it is. That’s enough for part 2 - part 3 will get into general additive models so that we can be smarter than keeping third order splines throughout."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome",
    "section": "",
    "text": "Welcome to this blog, which is mostly motivated by the poor state of documentation around various mouse brain imaging analysis tools, in particular the pydpiper pipelines and RMINC. So, rather than create a proper documentation website, here I will collect notes on different analyses and make them accessible for anyone else who might benefit. And who knows, the posts will likely expand to random stats topics and digressions in neuroscience."
  },
  {
    "objectID": "posts/welcome/index.html#how-to-contribute",
    "href": "posts/welcome/index.html#how-to-contribute",
    "title": "Welcome",
    "section": "How to contribute",
    "text": "How to contribute\nContributions are very much welcome! Next time you start a new analysis for which you take notes for yourself anyway, why not turn them into a blog post? The best way is to clone the repository for this blog (it’s in the quarto blog format), create a new post, and then make a pull request via github, and then I’ll add it to the blog. The repo for this repository is here."
  },
  {
    "objectID": "posts/sct-power-basic/index.html",
    "href": "posts/sct-power-basic/index.html",
    "title": "SCT power analyses",
    "section": "",
    "text": "This posts originates from a power analysis needed for a grant application. But it brings with it some potentially interesting methods for conducting power analyses in general alongside some discussion of power in non-orthogonal designs."
  },
  {
    "objectID": "posts/sct-power-basic/index.html#background",
    "href": "posts/sct-power-basic/index.html#background",
    "title": "SCT power analyses",
    "section": "Background",
    "text": "Background\nThe power analyses here concern the Sex Chromosome Trisomy (SCT) mouse model, which separates gonadal from chromosomal sex and varies sex chromosome dosage. To do that, the testes forming Sry gene is deleted from the Y chromosome and reinserted onto an autosome, thus allowing one to have XX mice with testes or XY mice with ovaries. In addition, a supernumerary sex chromosome is added, giving one XXY and XYY mice in addition to the XY and XX animals. In the end, there are thus 8 genotypes in the SCT model, as summarized in the table below:\n\n\n\nShorthand\nGonads\nX dose\nY dose\n\n\n\n\nXYM\nTestes\n1\n1\n\n\nXYF\nOvaries\n1\n1\n\n\nXXM\nTestes\n2\n0\n\n\nXXF\nOvaries\n2\n0\n\n\nXXYM\nTestes\n2\n1\n\n\nXXYF\nOvaries\n2\n1\n\n\nXYYM\nTestes\n1\n2\n\n\nXYYF\nOvaries\n1\n2\n\n\n\nThere are multiple ways to model this dataset, including testing for effects of 8 genotypes, the effect of aneuploidies, etc. But currently our thinking is that we can model the data as the effect of gonads, X chromosome dose, and Y chromosome dose."
  },
  {
    "objectID": "posts/sct-power-basic/index.html#setting-up-the-simulations",
    "href": "posts/sct-power-basic/index.html#setting-up-the-simulations",
    "title": "SCT power analyses",
    "section": "Setting up the simulations",
    "text": "Setting up the simulations\nLet’s set up a function that can simulate this data. First, load some libraries\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(broom)\nlibrary(splines)\n\n\nFor the sake of this post we’ll keep it simple, and not look for any interactions, and assume that the effects (at least as simulated) are uncorrelated. We’ll also look at what some large effect size (5 sd) simulations would look like to give us a sense of the data.\n\n\nShow the code\ngenerateSCTData &lt;- function(npergroup=10, \n                            gonadeffectmu=0,\n                            gonadeffectsd=0,\n                            xeffectmu=0,\n                            xeffectsd=0,\n                            yeffectmu=0,\n                            yeffectsd=0,\n                            epsilon=1) {\n  \n  # generate data from the normal distribution separately for each genotype. Here we just use\n  # epsilon for randomly distributed noise\n  groups &lt;- rbind(data.frame(group=\"XYM\", gonad=1,X=1,Y=1, volume=rnorm(npergroup, 0, epsilon)),\n                  data.frame(group=\"XYF\", gonad=0,X=1,Y=1, volume=rnorm(npergroup, 0, epsilon)),\n                  data.frame(group=\"XXM\", gonad=1,X=2,Y=0, volume=rnorm(npergroup, 0, epsilon)),\n                  data.frame(group=\"XXF\", gonad=0,X=2,Y=0, volume=rnorm(npergroup, 0, epsilon)),\n                  data.frame(group=\"XXYM\",gonad=1,X=2,Y=1, volume=rnorm(npergroup, 0, epsilon)),\n                  data.frame(group=\"XXYF\",gonad=0,X=2,Y=1, volume=rnorm(npergroup, 0, epsilon)),\n                  data.frame(group=\"XYYM\",gonad=1,X=1,Y=2, volume=rnorm(npergroup, 0, epsilon)),\n                  data.frame(group=\"XYYF\",gonad=0,X=1,Y=2, volume=rnorm(npergroup, 0, epsilon))) \n  \n  # and now we add the effects, again normally distributed (only matters if the sd terms are non-zero)\n  groups$volume &lt;- groups$volume + \n    rnorm(nrow(groups), gonadeffectmu * groups$gonad, gonadeffectsd) + \n    rnorm(nrow(groups), xeffectmu * groups$X, xeffectsd) + \n    rnorm(nrow(groups), yeffectmu * groups$Y, yeffectsd)\n    \n  # and return the dataset\n  return(groups %&gt;% mutate(\n    gonadeffectmu=gonadeffectmu,\n    xeffectmu=xeffectmu,\n    yeffectmu=yeffectmu\n  ))\n  \n} \n\n# now generate three datasets with large effects\nSCTg &lt;- generateSCTData(gonadeffectmu = 5) %&gt;% mutate(sim=\"Beta gonads = 5\")\nSCTx &lt;- generateSCTData(xeffectmu = 5) %&gt;% mutate(sim=\"Beta X = 5\")\nSCTy &lt;- generateSCTData(yeffectmu = 5) %&gt;% mutate(sim=\"Beta Y = 5\")\n\nrbind(SCTg, SCTx, SCTy) %&gt;% \n  ggplot() + \n  aes(x=group, y=volume) + \n  geom_boxplot() +\n  facet_grid(.~sim) + \n  theme_bw() +\n  theme(axis.text.x = element_text(angle = 45, hjust=1)) \n\n\n\n\n\nThis makes a few points that come out of the model. Gonads are fully balanced, but chromosome dosage is not. There are two possible levels of X (1 and 2), and three of Y (0, 1, and 2). And there is some correlation between them\n\n\nShow the code\ngenerateSCTData(npergroup = 1) %&gt;%\n  ggplot() + \n  aes(x=X, y=Y) + \n  geom_tile() + \n  xlab(\"X dose\") + \n  ylab(\"Y dose\") +\n  scale_x_continuous(breaks = c(1,2)) + \n  theme_minimal()\n\n\n\n\n\nThe design is not fully orthogonal - you cannot have an X dose of 1 and Y dose of 0, or and X dose of 2, and Y of 2."
  },
  {
    "objectID": "posts/sct-power-basic/index.html#sct-power",
    "href": "posts/sct-power-basic/index.html#sct-power",
    "title": "SCT power analyses",
    "section": "SCT power",
    "text": "SCT power\nWhat does the SCT model’s non-orthogonal design do to our power? Let’s see - we’ll run a set of simulations. It’ll be relatively straightforward:\n\nfor 500 simulations\n\nfor effect sizes ranging from 0 to 1.5 with steps of 0.1\n\nsimulate an SCT dataset of 10 subjects per genotype with one of the three terms (genotype, X dose, Y dose) varying by the effect size\nmodel it with y ~ gonads + Xdose + Ydose\nassess the number of the simulations where p &lt; 0.05\n\n\n\n\n\nShow the code\ngenerateSCTSimSeries &lt;- function(nsims=500,\n                                 npergroup=10,\n                                 gonadeffectmu=0,\n                                 xeffectmu=0,\n                                 yeffectmu=0,\n                                 epsilon=1){\n  # make sure that effects are all equal\n  if (length(gonadeffectmu) != length(xeffectmu) | \n      length(gonadeffectmu) != length(yeffectmu)) {\n    stop(\"Effects must be the same length\")\n  }\n  \n  neffects &lt;- length(gonadeffectmu)\n  \n  # and now we run the simulations\n  return(pmap(list(npergroup=rep(npergroup, neffects*nsims), \n                       gonadeffectmu=rep(gonadeffectmu, nsims), \n                       xeffectmu=rep(xeffectmu, nsims), \n                       yeffectmu=rep(yeffectmu, nsims),\n                       epsilon=rep(epsilon, neffects*nsims)),\n                  generateSCTData))\n\n}\n\nmodelSCTSimSeries &lt;- function(df) {\n  #df &lt;- df %&gt;% mutate(X = X-1)\n  tidy(lm(volume ~ gonad + X + Y, df)) %&gt;% mutate(gonadeffectmu=df$gonadeffectmu[1],\n                                                  xeffectmu=df$xeffectmu[1],\n                                                  yeffectmu=df$yeffectmu[1]) %&gt;%\n    pivot_wider(names_from = term, values_from = estimate:p.value)\n}\n\nmakePowerSeries &lt;- function() {\n  effectseries &lt;- seq(0, 1.5, 0.1)\n  neffects &lt;- length(effectseries)\n  npergroup=10\n  nsims=500\n  \n  Gseries &lt;- generateSCTSimSeries(nsims=nsims, npergroup = npergroup,\n                                     xeffect=rep(0, neffects), \n                                     yeffectmu = rep(0, neffects), \n                                     gonadeffectmu = effectseries) %&gt;%\n    map_dfr(modelSCTSimSeries) %&gt;% mutate(delta=gonadeffectmu, p=p.value_gonad)\n  Xseries &lt;- generateSCTSimSeries(nsims=nsims, npergroup = npergroup,\n                                     gonadeffect=rep(0, neffects), \n                                     yeffectmu = rep(0, neffects), \n                                     xeffectmu = effectseries) %&gt;%\n    map_dfr(modelSCTSimSeries) %&gt;% mutate(delta=xeffectmu, p=p.value_X)\n  Yseries &lt;- generateSCTSimSeries(nsims=nsims, npergroup = npergroup,\n                                     xeffect=rep(0, neffects), \n                                     gonadeffectmu = rep(0, neffects), \n                                     yeffectmu = effectseries) %&gt;%\n    map_dfr(modelSCTSimSeries) %&gt;% mutate(delta=yeffectmu, p=p.value_Y)\n  \n  allseries &lt;- rbind(Gseries, Xseries, Yseries)\n  return(allseries)\n}\n\nfullseries &lt;- makePowerSeries()\n\n\nLet’s see what this looks like:\n\n\nShow the code\nfullseries %&gt;% \n  group_by(yeffectmu, xeffectmu, gonadeffectmu) %&gt;% \n  summarise(power=mean(p&lt;0.05)) %&gt;% \n  pivot_longer(yeffectmu:gonadeffectmu) %&gt;% \n  ggplot() + \n  aes(x=value, y=power, colour=name) + \n  geom_point() + \n  geom_smooth(se=F, method=\"lm\", formula=y~ns(x,7)) + \n  xlab(bquote(delta ~ (effect ~ size))) + \n  scale_x_continuous(limits=c(0.05, 1.5)) + \n  scale_color_brewer(\"Model term\", labels=c(\"Gonad\", \"X dose\", \"Y dose\"), palette = \"Set1\") + \n  geom_hline(yintercept = 0.8) + \n  scale_y_continuous(breaks = seq(0,1,0.2)) + \n  theme_minimal()\n\n\n\n\n\nHere power - the proportion of simulations where p was &lt; 0.05 - is on the y axis, and the simulated effect size on the x axis. So, for example, to get a power of 0.08 you’d need to an effect size of about 0.6 for gonads and Y dose and 0.9 for X dose."
  },
  {
    "objectID": "posts/sct-power-basic/index.html#why-is-x-dose-less-powered-than-y-or-gonads",
    "href": "posts/sct-power-basic/index.html#why-is-x-dose-less-powered-than-y-or-gonads",
    "title": "SCT power analyses",
    "section": "Why is X dose less powered than Y or gonads?",
    "text": "Why is X dose less powered than Y or gonads?\nWhat’s up with the previous results? Why is X dose at a lower power than Y or gonads?\nLet’s start with gonads and test whether our simulations make sense. We simulated 10 mice per group, so given that exactly half the mice will be of each gonad type we can assess whether we’d get the same answer with a parametric power test:\n\n\nShow the code\npower.t.test(n=40, power=0.8)\n\n\n\n     Two-sample t test power calculation \n\n              n = 40\n          delta = 0.634299\n             sd = 1\n      sig.level = 0.05\n          power = 0.8\n    alternative = two.sided\n\nNOTE: n is number in *each* group\n\n\nAnd indeed, the answer is the same - at 40 mice per group and a power of 0.8 you’d recapture an effect size of 0.63.\nBut you also have 40 mice with one X chromosome and 40 mice with 2 X chromosomes, yet the power is lower than expected. The answer lies in the fact that the two are correlated:\n\n\nShow the code\ngenerateSCTData(npergroup = 1) %&gt;% select(gonad, X, Y) %&gt;% cor\n\n\n      gonad          X          Y\ngonad     1  0.0000000  0.0000000\nX         0  1.0000000 -0.7071068\nY         0 -0.7071068  1.0000000\n\n\nNow go and have a read of this paper from 1991. Estimated errors in linear models are both dependent on the covariance between terms as well as the range of possible values. So X and Y doses are correlated, but Y dose has a greater range, hence the greater power for Y dose than X dose in the SCT model."
  },
  {
    "objectID": "posts/sct-power-basic/index.html#the-dangers-of-model-misspecification",
    "href": "posts/sct-power-basic/index.html#the-dangers-of-model-misspecification",
    "title": "SCT power analyses",
    "section": "The dangers of model misspecification",
    "text": "The dangers of model misspecification\nSo if there is a problem with colinearity why don’t we run a separate model with just or X or Y dose? Let’s try that for a single simulation of an effect size of 2 for X\n\n\nShow the code\nset.seed(42)\nXsim &lt;- generateSCTData(xeffectmu = 2)\n\n\nAnd let’s look at the output of our linear model including all terms:\n\n\nShow the code\nsummary(lm(volume ~ gonad + X + Y, Xsim))\n\n\n\nCall:\nlm(formula = volume ~ gonad + X + Y, data = Xsim)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.71496 -0.56202  0.06254  0.65473  2.37194 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.01185    0.71272  -0.017   0.9868    \ngonad        0.40373    0.23757   1.699   0.0933 .  \nX            1.80717    0.33598   5.379 7.99e-07 ***\nY            0.11938    0.23757   0.503   0.6168    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.062 on 76 degrees of freedom\nMultiple R-squared:  0.4136,    Adjusted R-squared:  0.3905 \nF-statistic: 17.87 on 3 and 76 DF,  p-value: 7.13e-09\n\n\nLooks reasonably good in terms of both effect size and significance for both X and Y. But now let’s just model X.\n\n\nShow the code\nsummary(lm(volume ~ X, Xsim))\n\n\n\nCall:\nlm(formula = volume ~ X, data = Xsim)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.8571 -0.6050  0.1795  0.6668  2.1104 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   0.4885     0.3784   1.291    0.201    \nX             1.6878     0.2393   7.053 6.25e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.07 on 78 degrees of freedom\nMultiple R-squared:  0.3894,    Adjusted R-squared:  0.3816 \nF-statistic: 49.74 on 1 and 78 DF,  p-value: 6.247e-10\n\n\nThe estimate is a bit lower, but still not too far off. But let’s model Y for data where only a change in X was simulated:\n\n\nShow the code\nsummary(lm(volume ~ Y, Xsim))\n\n\n\nCall:\nlm(formula = volume ~ Y, data = Xsim)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.6766 -0.8249  0.2119  0.9249  2.5556 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   3.8044     0.2419   15.73  &lt; 2e-16 ***\nY            -0.7842     0.1975   -3.97 0.000159 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.249 on 78 degrees of freedom\nMultiple R-squared:  0.1681,    Adjusted R-squared:  0.1575 \nF-statistic: 15.76 on 1 and 78 DF,  p-value: 0.0001585\n\n\nA woefully incorrect estimate. In the presence of colinearity you need to covary for the other parameters to not get caught in a badly misspecified model."
  },
  {
    "objectID": "posts/developmental-data/index.html",
    "href": "posts/developmental-data/index.html",
    "title": "Developmental analyses, part 1",
    "section": "",
    "text": "Longitudinal data provides its own set of modelling challenges. These primarily concern how to model time, especially if there is a curvilinear relationship between time and variable(s) of interest. A related issue is making statistical models not only fit the data well but also produce interpretable output that helps address questions of changes in baseline alongside changes in trajectories.\nThis will be a series of posts, exploring:\n\nPlotting of longitudinal data\nFitting straight lines and interpreting slopes and intercepts\nFitting curves via splines\nComparisons between different fitted models for ease of interpretation\nSegmented models\nGeneral additive models\nRandom intercepts and random slopes\nBayesian linear models\nRMINC and data.tree methods to explore all these across the brain\n\nFor this first post we’ll look at points 1-4 with small bits of RMINC and data.tree creeping in.\nTo explore these questions we will use data being collected by Tiffany Chien, where she is looking at the effect of maternal auto-antibodies on brain development in mice. Each mouse was imaged at eight different timepoints, following a pattern set here and first developed here. We begin by loading the data as provided by Tiffany:\n\nlibrary(data.tree)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.2     ✔ purrr   1.0.1\n✔ tibble  3.2.1     ✔ dplyr   1.1.2\n✔ tidyr   1.3.0     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 0.5.2\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nload(\"brain_analysis_data_2023nov2.RData\")\n\nThis contains 5 items - the anatomy and labels volumes, the dataframe describing each scan (gf), a matrix of structure volumes (structvols), and the label definitions (hdefs).\nWe can then add the volumes to the hierarchical anatomy, since anatomical hierarchies are awesome.\n\nlibrary(RMINC)\n# the suppress warnings bit deals with a comparison in the data.tree\n# library that throws far too many warnings.\nhvols &lt;- suppressWarnings(addVolumesToHierarchy(hdefs, structvols))\n\nLet’s start with overall brain volumes\n\ngf$brainVols &lt;- hvols$volumes\n\nAnd plot them, initially by sex, since we have some decently strong expectations of the development of sex differences in the brain.\n\nlibrary(tidyverse)\nlibrary(ggplot2)\n\n# set some defaults for ggplots for the rest of the document\ntheme_set(theme_minimal())\nscale_colour_brewer_d &lt;- function(...) {\n  scale_colour_brewer(palette = \"Set1\", ...)\n}\n\noptions(ggplot2.discrete.colour=scale_colour_brewer_d)\n\nggplot(gf) + \n  aes(x=age, y=brainVols, colour=Sex) + \n  geom_point() + \n  geom_smooth() + \n  ylab(bquote(Volume ~ (mm^3))) + \n  ggtitle(\"Brain volume\")\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nThis is a fairly standard ggplot plot. geom_smooth does a lot of the heavy lifting here. By default it uses a local estimator (loess) to fit the curve; these are great for visualization but not so useful for analyses. It also shows a clear overall pattern of rapid growth in brain volume until around day 20, followed by slower growth.\nBrain volume does not appear particularly different by sex, which is what we have seen before. Since we are looking at sex let’s pick a classically dimorphic brain structure\n\nggplot(gf %&gt;% \n         mutate(MeA = FindNode(hvols, \"Medial amygdalar nucleus\")$volumes)) + \n  aes(x=age, y=MeA, colour=Sex) + \n  geom_point() + \n  geom_smooth() + \n  ylab(bquote(Volume ~ (mm^3))) + \n  ggtitle(\"Medial Amygdala\")\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nOK, we have sensible patterns, showing larger volumes of the medial amygdala in males, seemingly emerging over the first few days of life. Let’s improve the plot a little bit to let us see what happens to individual mice. First, let’s plot each mouse entirely separately.\n\nggplot(gf %&gt;% \n         mutate(MeA = FindNode(hvols, \"Medial amygdalar nucleus\")$volumes)) + \n  aes(x=age, y=MeA, colour=Sex) + \n  geom_point() + \n  geom_line() + \n  ylab(bquote(Volume ~ (mm^3))) + \n  ggtitle(\"Medial Amygdala\") + \n  facet_wrap(~subject_id)\n\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n\n\n\n\n\nNote that I’ve replaced the fitting (geom_smooth) with a simpler line (geom_line). A few features immediately stand out from this plot: quite a few mice only have a few data points, which is primarily due to data collection being ongoing, and there are too many mice for this plot to be terribly useful. Let’s instead plot separate lines on the same plot as before:\n\nggplot(gf %&gt;% \n         mutate(MeA = FindNode(hvols, \"Medial amygdalar nucleus\")$volumes)) + \n  aes(x=age, y=MeA, colour=Sex) + \n  geom_point() + \n  geom_smooth() + \n  geom_line(aes(group=subject_id), alpha=0.2) + \n  ylab(bquote(Volume ~ (mm^3))) + \n  ggtitle(\"Medial Amygdala\")\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\nNot always clear how useful such a plot is, but it sure is pretty. Note that the geom_line bit needed to have the group specified in order for ggplot to know which points to join up with lines.\nOn to statistics. For the sake of argument let’s go with the simplest model of volume against age by sex:\n\nsuppressMessages(library(lmerTest))\n# create a new variable for the medial amygdala for easier access\ngf &lt;- gf %&gt;% \n  mutate(MeA = FindNode(hvols, \"Medial amygdalar nucleus\")$volumes)\n\n# run the linear mixed effects model.\nsummary(lmer(MeA ~ age * Sex + (1|subject_id), gf))\n\nboundary (singular) fit: see help('isSingular')\n\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: MeA ~ age * Sex + (1 | subject_id)\n   Data: gf\n\nREML criterion at convergence: -362.9\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.6383 -0.7678  0.0283  0.7920  3.6123 \n\nRandom effects:\n Groups     Name        Variance Std.Dev.\n subject_id (Intercept) 0.000000 0.0000  \n Residual               0.009781 0.0989  \nNumber of obs: 224, groups:  subject_id, 37\n\nFixed effects:\n             Estimate Std. Error        df t value Pr(&gt;|t|)    \n(Intercept) 5.125e-01  1.425e-02 2.200e+02  35.967   &lt;2e-16 ***\nage         7.674e-03  4.859e-04 2.200e+02  15.794   &lt;2e-16 ***\nSexM        5.855e-03  1.942e-02 2.200e+02   0.302   0.7633    \nage:SexM    1.717e-03  6.762e-04 2.200e+02   2.539   0.0118 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n         (Intr) age    SexM  \nage      -0.739              \nSexM     -0.734  0.542       \nage:SexM  0.531 -0.719 -0.731\noptimizer (nloptwrap) convergence code: 0 (OK)\nboundary (singular) fit: see help('isSingular')\n\n\nHere we use a linear mixed effects model. These models are the bread and butter of longitudinal analyses, as they allow you to account for the dependence created by having multiple datapoints from the same subject. There are multiple ways to specify these models, with the main decisions revolving around what fixed effects and what random effects to use. Fixed effects are what you would use in any old linear model; here we specify an age by sex interaction. Random effects, the bits inside the parentheses, determine how to treat the individual mice in this dataset. Here we use the simplest formula, (1 | id), which allows every mouse to have a separate intercept but not a separate slope. I.e. at baseline mouse 1 can have a larger or smaller volume than mouse 2, but from then on the effect of age will be the same for all mice. We could allow for separate slopes too, a topic which we will explore in a future post.\nWe also get warnings about singular fits - these are due to no variance in the random intercept (i.e. the separate intercept per subject) being identified. This can be indicative of a real problem and the need to change the model formula, but in simple cases like this can be ignored for now.\nOnto the results. Our model shows an effect of age and an age by sex interaction, but no effect of sex. Why is that? Two reasons:\n\nWe are fitting a straight line, where there clearly is a curve in the data\nWe are testing the effect of sex at age=0, which doesn’t make sense.\n\nLet’s look at them in turn. Plotting as a straight line:\n\nggplot(gf) +\n  aes(x=age, y=MeA, colour=Sex) + \n  geom_point() + \n  geom_smooth(method=\"lm\", formula=y~x) + \n  ylab(bquote(Volume ~ (mm^3))) + \n  ggtitle(\"Medial Amygdala\")\n\n\n\n\nFirst, it’s evident that the model does not fit all that well, which is to be expected since we saw earlier that a straight line is not the right way to model age. Second, we can see the interaction - the lines are not parallel. Third, at age=0 the lines overlap.\nTackling the third point first, in a linear model with an interaction, each term of an interaction is interpreted at the zero point of the other term. Going back to the linear model output from above, it’s telling us that age=0 the females (the reference level of sex) have a volume of 5.125e-01 (the intercept), and males a volume of 5.125e-01 + 5.855e-03. If we change where the intercept falls we change these values. To whit, let’s test at an age of 65:\n\nsummary(lmer(MeA ~ age * Sex + (1|subject_id), gf %&gt;% mutate(age = age-65)))\n\nboundary (singular) fit: see help('isSingular')\n\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: MeA ~ age * Sex + (1 | subject_id)\n   Data: gf %&gt;% mutate(age = age - 65)\n\nREML criterion at convergence: -362.9\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.6383 -0.7678  0.0283  0.7920  3.6123 \n\nRandom effects:\n Groups     Name        Variance Std.Dev.\n subject_id (Intercept) 0.000000 0.0000  \n Residual               0.009781 0.0989  \nNumber of obs: 224, groups:  subject_id, 37\n\nFixed effects:\n             Estimate Std. Error        df t value Pr(&gt;|t|)    \n(Intercept) 1.011e+00  2.315e-02 2.200e+02  43.693  &lt; 2e-16 ***\nage         7.674e-03  4.859e-04 2.200e+02  15.794  &lt; 2e-16 ***\nSexM        1.175e-01  3.256e-02 2.200e+02   3.607 0.000383 ***\nage:SexM    1.717e-03  6.762e-04 2.200e+02   2.539 0.011796 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n         (Intr) age    SexM  \nage       0.910              \nSexM     -0.711 -0.647       \nage:SexM -0.654 -0.719  0.914\noptimizer (nloptwrap) convergence code: 0 (OK)\nboundary (singular) fit: see help('isSingular')\n\n\nI changed age by subtracting 65 from it, so now the intercept (age=0) is really age=65. Now the SexM term has become quite significant; look back at the plot above and see how the two lines diverge significantly at that age. At age 65 the females have a volume 1.01, and males 1.01 + 0.11.\n\nFitting curves in linear models\nNow back to the fact that the data should not be fit with a straight line since there is a clearly detectable curve in the relation between volume and age. Let’s use a third order spline:\n\nlibrary(splines)\nggplot(gf) +\n  aes(x=age, y=MeA, colour=Sex) + \n  geom_point() + \n  geom_smooth(method=\"lm\", formula=y~ns(x,3) ) + \n  ylab(bquote(Volume ~ (mm^3))) + \n  ggtitle(\"Medial Amygdala\")\n\n\n\n\nHere I changed the bit inside geom_smooth. First, using the method=\"lm\" syntax I told it to use a linear model rather than a local estimator, and then I gave it the formula. The ns(age, 3) syntax tells it to use a natural spline with 3 degrees of freedom.\nThat fits pretty well. Let’s look at the model outputs\n\nsummary(lmer(MeA ~ ns(age,3) * Sex + (1|subject_id), gf))\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: MeA ~ ns(age, 3) * Sex + (1 | subject_id)\n   Data: gf\n\nREML criterion at convergence: -684.5\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.4337 -0.5530  0.1326  0.5837  4.8808 \n\nRandom effects:\n Groups     Name        Variance Std.Dev.\n subject_id (Intercept) 0.000588 0.02425 \n Residual               0.001906 0.04366 \nNumber of obs: 224, groups:  subject_id, 37\n\nFixed effects:\n                  Estimate Std. Error        df t value Pr(&gt;|t|)    \n(Intercept)      4.357e-01  1.200e-02 1.420e+02  36.326  &lt; 2e-16 ***\nns(age, 3)1      4.611e-01  2.098e-02 1.873e+02  21.977  &lt; 2e-16 ***\nns(age, 3)2      6.464e-01  2.463e-02 1.898e+02  26.238  &lt; 2e-16 ***\nns(age, 3)3      3.878e-01  1.304e-02 1.856e+02  29.730  &lt; 2e-16 ***\nSexM             3.758e-03  1.596e-02 1.356e+02   0.235 0.814249    \nns(age, 3)1:SexM 5.144e-02  2.931e-02 1.895e+02   1.755 0.080902 .  \nns(age, 3)2:SexM 1.110e-01  3.287e-02 1.893e+02   3.378 0.000888 ***\nns(age, 3)3:SexM 7.340e-02  1.833e-02 1.860e+02   4.005 8.94e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) ns(,3)1 ns(,3)2 ns(,3)3 SexM   n(,3)1: n(,3)2:\nns(age, 3)1 -0.002                                               \nns(age, 3)2 -0.782 -0.029                                        \nns(age, 3)3 -0.193  0.167   0.314                                \nSexM        -0.751  0.002   0.587   0.145                        \nns(g,3)1:SM  0.002 -0.716   0.021  -0.120  -0.002                \nns(g,3)2:SM  0.586  0.022  -0.749  -0.235  -0.766 -0.030         \nns(g,3)3:SM  0.137 -0.119  -0.223  -0.712  -0.178  0.151   0.311 \n\n\nNow we have a much harder to interpret set of age terms (and their interactions). Each of the ns(age, 3)1 or ns(age, 3)2 or ns(age, 3)3 tells us about the parameters of the different spline terms. While these can obviously be used to reconstruct the fit, in practice they are essentially uninterpretable for figuring out where and how the age trajectories deviate by sex.\nBut looking at just the sex terms, it’s again insignificant at age=0. Let’s see at age 65.\n\nsummary(lmer(MeA ~ ns(age,3) * Sex + (1|subject_id), gf %&gt;% mutate(age=age-65)))\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: MeA ~ ns(age, 3) * Sex + (1 | subject_id)\n   Data: gf %&gt;% mutate(age = age - 65)\n\nREML criterion at convergence: -684.5\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.4337 -0.5530  0.1326  0.5837  4.8808 \n\nRandom effects:\n Groups     Name        Variance Std.Dev.\n subject_id (Intercept) 0.000588 0.02425 \n Residual               0.001906 0.04366 \nNumber of obs: 224, groups:  subject_id, 37\n\nFixed effects:\n                  Estimate Std. Error        df t value Pr(&gt;|t|)    \n(Intercept)      4.357e-01  1.200e-02 1.420e+02  36.326  &lt; 2e-16 ***\nns(age, 3)1      4.611e-01  2.098e-02 1.873e+02  21.977  &lt; 2e-16 ***\nns(age, 3)2      6.464e-01  2.463e-02 1.898e+02  26.238  &lt; 2e-16 ***\nns(age, 3)3      3.878e-01  1.304e-02 1.856e+02  29.730  &lt; 2e-16 ***\nSexM             3.758e-03  1.596e-02 1.356e+02   0.235 0.814249    \nns(age, 3)1:SexM 5.144e-02  2.931e-02 1.895e+02   1.755 0.080902 .  \nns(age, 3)2:SexM 1.110e-01  3.287e-02 1.893e+02   3.378 0.000888 ***\nns(age, 3)3:SexM 7.340e-02  1.833e-02 1.860e+02   4.005 8.94e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) ns(,3)1 ns(,3)2 ns(,3)3 SexM   n(,3)1: n(,3)2:\nns(age, 3)1 -0.002                                               \nns(age, 3)2 -0.782 -0.029                                        \nns(age, 3)3 -0.193  0.167   0.314                                \nSexM        -0.751  0.002   0.587   0.145                        \nns(g,3)1:SM  0.002 -0.716   0.021  -0.120  -0.002                \nns(g,3)2:SM  0.586  0.022  -0.749  -0.235  -0.766 -0.030         \nns(g,3)3:SM  0.137 -0.119  -0.223  -0.712  -0.178  0.151   0.311 \n\n\nThe model terms haven’t changed. So with splines we’ve lost the ability to interpret our data quite the way we want by moving the intercept; other spline parameterizations than natural splines can do better, and polynomials can do it very well, but ultimately we want a more general solution. The emmeans package to the rescue for estimated marginal means.\n\nlibrary(emmeans)\nl &lt;- lmer(MeA ~ ns(age,3) * Sex + (1|subject_id), gf)\ne &lt;- emmeans(l, ~ Sex | age, at = list(age=c(7, 21, 65)))\n\nFirst, we fitted a linear mixed effects model as before, and then we’ve computed the marginal means using the emmeans function from the package of the same name. The first argument is the model, then it’s the formula; here we tell it that we want to evaluate Sex across age. Next we tell the emmeans function to evaluate its output at 3 different ages - 7, 21, and 65. We can look at the output:\n\ne\n\nage =  7:\n Sex emmean      SE    df lower.CL upper.CL\n F    0.525 0.00863  56.6    0.508    0.543\n M    0.547 0.00807  56.0    0.531    0.563\n\nage = 21:\n Sex emmean      SE    df lower.CL upper.CL\n F    0.766 0.00908  65.2    0.748    0.784\n M    0.820 0.00866  71.0    0.802    0.837\n\nage = 65:\n Sex emmean      SE    df lower.CL upper.CL\n F    0.911 0.01320 172.9    0.885    0.937\n M    1.006 0.01310 184.7    0.980    1.032\n\nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\n\nThis is already quite useful, as we can get the estimated means at those three ages for each sex, alongside their 95% confidence intervals. But we can go further and compute the differences at those ages explicitly:\n\npairs(e)\n\nage =  7:\n contrast estimate     SE    df t.ratio p.value\n F - M     -0.0216 0.0118  56.4  -1.832  0.0722\n\nage = 21:\n contrast estimate     SE    df t.ratio p.value\n F - M     -0.0538 0.0125  67.9  -4.289  0.0001\n\nage = 65:\n contrast estimate     SE    df t.ratio p.value\n F - M     -0.0951 0.0186 178.8  -5.115  &lt;.0001\n\nDegrees-of-freedom method: kenward-roger \n\n\nWe can tell from this output that sex differences are borderline at age 7, and become quite strikingly significant later. Note that the contrast is the reverse of what we would expect from our linear model; we can reverse that in turn:\n\npairs(e, reverse = T)\n\nage =  7:\n contrast estimate     SE    df t.ratio p.value\n M - F      0.0216 0.0118  56.4   1.832  0.0722\n\nage = 21:\n contrast estimate     SE    df t.ratio p.value\n M - F      0.0538 0.0125  67.9   4.289  0.0001\n\nage = 65:\n contrast estimate     SE    df t.ratio p.value\n M - F      0.0951 0.0186 178.8   5.115  &lt;.0001\n\nDegrees-of-freedom method: kenward-roger \n\n\nAs a way of comparison, let’s get back to overall brain volume, which at least visually appeared to not differ much by sex:\n\nl &lt;- lmer(brainVols ~ ns(age,3) * Sex + (1|subject_id), gf)\n(e &lt;- emmeans(l, ~ Sex | age, at = list(age=c(7, 21, 65))))\n\nage =  7:\n Sex emmean   SE    df lower.CL upper.CL\n F      236 2.65  46.4      231      242\n M      242 2.48  47.1      237      247\n\nage = 21:\n Sex emmean   SE    df lower.CL upper.CL\n F      380 2.75  51.4      374      385\n M      385 2.59  55.0      380      390\n\nage = 65:\n Sex emmean   SE    df lower.CL upper.CL\n F      428 3.58 122.2      421      435\n M      431 3.51 138.1      424      438\n\nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\npairs(e, reverse = T)\n\nage =  7:\n contrast estimate   SE    df t.ratio p.value\n M - F        5.64 3.63  46.7   1.554  0.1269\n\nage = 21:\n contrast estimate   SE    df t.ratio p.value\n M - F        5.53 3.78  53.1   1.462  0.1495\n\nage = 65:\n contrast estimate   SE    df t.ratio p.value\n M - F        2.92 5.01 129.8   0.583  0.5609\n\nDegrees-of-freedom method: kenward-roger \n\n\nAnd indeed the sex difference in brain volume is relatively uninteresting at those three ages.\nTwo more digressions with emmeans. First is computing effect sizes, measured as Cohen’s d:\n\nl &lt;- lmer(MeA ~ ns(age,3) * Sex + (1|subject_id), gf)\ne &lt;- emmeans(l, ~ Sex | age, at = list(age=c(7, 21, 65)))\neff_size(e, sigma=sigma(l), edf=30)\n\nage =  7:\n contrast effect.size    SE    df lower.CL upper.CL\n F - M         -0.496 0.278  56.0    -1.05   0.0612\n\nage = 21:\n contrast effect.size    SE    df lower.CL upper.CL\n F - M         -1.233 0.329  65.2    -1.89  -0.5766\n\nage = 65:\n contrast effect.size    SE    df lower.CL upper.CL\n F - M         -2.179 0.510 172.9    -3.19  -1.1712\n\nsigma used for effect sizes: 0.04366 \nDegrees-of-freedom method: inherited from kenward-roger when re-gridding \nConfidence level used: 0.95 \n\n\nA few things to note:\n\nThe effect size function needs the model, the sigma from the linear mixed effects model, and the degrees of freedom of sigma, edf. This latter edf is very hard to define, which comes back to acknowledging that the confidence intervals around these effect sizes are going to be somewhat ill defined. Still useful, but keep that in mind.\nThe direction of the effect sizes has reversed again, and there appears to be no reverse=TRUE equivalent to what can be had in pairs.\n\nOne more digression on emmeans. Since the effects are conditional on the model, that means we can evaluate them at any age, not just those where we had scans. This in turn can be useful for visualizing the temporal evolution of your contrast differences. To wit:\n\nlibrary(broom)\ne &lt;- emmeans(l, ~ Sex | age, at = list(age=seq(3, 65, by=5)))\nef &lt;- eff_size(e, sigma=sigma(l), edf=30)\ntidy(ef, conf.int = T) %&gt;% \n  ggplot() + \n  aes(x=age, y=estimate*-1, ymin=conf.low*-1, ymax=conf.high*-1) + \n  geom_ribbon(alpha=0.3) + \n  geom_line() + \n  geom_hline(yintercept = 0, linetype=2) + \n  ylab(\"Effect size (male - female)\") + \n  ggtitle(\"Medial Amygdala\", subtitle = \"Effect size of sex difference\")\n\n\n\n\nThis shows the effect sizes of sex in the medial amygdala steadily increasing with age. (And note the multiplication by -1 to get the direction to be what we expected. Also note that we are using the tidy function from the broom package to get clean output from emmeans).\n\n\nUsing model comparisons\nThe downside of the emmeans approach is that one has to, in effect, test multiple different ages, which only makes sense when there are precise hypotheses. An alternate approach is to do a set of model comparisons to get at what we would normally think of as main effects. I.e. how much better does the model fit when we include sex? And do we need an interaction? Let’s test that:\n\nsimpleAgeModel &lt;- lmer(MeA ~ ns(age, 3) + (1|subject_id), gf, REML = F)\nAgeAndSexModel &lt;- lmer(MeA ~ ns(age, 3) + Sex + (1|subject_id), gf, REML = F)\nAgeAndSexInteractionModel  &lt;- lmer(MeA ~ ns(age, 3) * Sex + (1|subject_id), gf, REML = F)\n\nanova(simpleAgeModel, AgeAndSexModel, AgeAndSexInteractionModel)\n\nData: gf\nModels:\nsimpleAgeModel: MeA ~ ns(age, 3) + (1 | subject_id)\nAgeAndSexModel: MeA ~ ns(age, 3) + Sex + (1 | subject_id)\nAgeAndSexInteractionModel: MeA ~ ns(age, 3) * Sex + (1 | subject_id)\n                          npar     AIC     BIC logLik deviance  Chisq Df\nsimpleAgeModel               6 -690.20 -669.73 351.10  -702.20          \nAgeAndSexModel               7 -701.50 -677.62 357.75  -715.50 13.305  1\nAgeAndSexInteractionModel   10 -717.96 -683.84 368.98  -737.96 22.453  3\n                          Pr(&gt;Chisq)    \nsimpleAgeModel                          \nAgeAndSexModel             0.0002647 ***\nAgeAndSexInteractionModel  5.251e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nHere we set up three different statistical models. The first, simpleAgeModel, has the third order spline for age but no mention of sex. This effectively becomes our null hypothesis - of course the brain will change with development, but it will not do so in any sex specific way. The second model, AgeAndSexModel, includes an additive effect for sex; this would allow for a separate offset by sex, but would keep the slopes between the medial amygdala and age the same for both sexes. The last model AgeAndSexInteractionModel, then also allows the age-relation to vary by sex. Once we’ve computed these three models we run a log-likelihood test between them using the anova function, which produces a chi-squared statistic and its associated p-value.\n(Note that we fit all the models with REML=FALSE. This tells lmer to use maximum likelihood, rather than restricted maximum likelihoods as by default. This switch to maximum likelihood estimation is required for the log-likelihood test to be valid when fixed effects are changing between models)\nThe results show, in looking at the p values, that the AgeAndSex model is better than the simple age model, and that the one with interactions is the best one of all. So for the medial amygdala sex matters and how it matters changes with age.\nLet’s retest for overall brain volume where again we should not expect much change:\n\nsimpleAgeModel &lt;- lmer(brainVols ~ ns(age, 3) + (1|subject_id), gf, REML = F)\nAgeAndSexModel &lt;- lmer(brainVols ~ ns(age, 3) + Sex + (1|subject_id), gf, REML = F)\nAgeAndSexInteractionModel  &lt;- lmer(brainVols ~ ns(age, 3) * Sex + (1|subject_id), gf, REML = F)\n\nanova(simpleAgeModel, AgeAndSexModel, AgeAndSexInteractionModel)\n\nData: gf\nModels:\nsimpleAgeModel: brainVols ~ ns(age, 3) + (1 | subject_id)\nAgeAndSexModel: brainVols ~ ns(age, 3) + Sex + (1 | subject_id)\nAgeAndSexInteractionModel: brainVols ~ ns(age, 3) * Sex + (1 | subject_id)\n                          npar    AIC    BIC  logLik deviance  Chisq Df\nsimpleAgeModel               6 1753.1 1773.6 -870.57   1741.1          \nAgeAndSexModel               7 1752.6 1776.5 -869.29   1738.6 2.5620  1\nAgeAndSexInteractionModel   10 1758.2 1792.3 -869.08   1738.2 0.4193  3\n                          Pr(&gt;Chisq)\nsimpleAgeModel                      \nAgeAndSexModel                0.1095\nAgeAndSexInteractionModel     0.9362\n\n\nThis once again says that sex does not play much of a role in shaping the overall size of the brain in mice.\nThat’s enough for now. Computing all these things across brain structures to follow, alongside a discussion of general additive models and segmented models and how to deal with 3 way interactions, and finally some Bayesian fun likely at the end."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "digressions on (mouse) brain imaging",
    "section": "",
    "text": "Creating a pydpiper init model\n\n\n\n\n\n\npydpiper\n\n\n\nSteps for creating an init model from scratch\n\n\n\n\n\nApr 3, 2024\n\n\nJason Lerch\n\n\n\n\n\n\n\n\n\n\n\n\nAtlas colours as plot legends\n\n\n\n\n\n\nR\n\n\nlongitudinal\n\n\nRMINC\n\n\nMRIcrotome\n\n\n\nUsing colours from the atlas can make an effective way to label multiple bits on a plot\n\n\n\n\n\nDec 10, 2023\n\n\nJason Lerch\n\n\n\n\n\n\n\n\n\n\n\n\nDevelopmental analyses, part 2\n\n\n\n\n\n\nR\n\n\nlongitudinal\n\n\nRMINC\n\n\nMRIcrotome\n\n\n\nHow to deal with longitudinal brain development data, this time focusing on working across all ROIs in the brain\n\n\n\n\n\nDec 1, 2023\n\n\nJason Lerch\n\n\n\n\n\n\n\n\n\n\n\n\nDevelopmental analyses, part 1\n\n\n\n\n\n\nR\n\n\nlongitudinal\n\n\n\nHow to deal with longitudinal brain development data\n\n\n\n\n\nNov 26, 2023\n\n\nJason Lerch\n\n\n\n\n\n\n\n\n\n\n\n\nCopying important pydpiper outputs\n\n\n\n\n\n\npydpiper\n\n\n\nSome rsync commands to only copy important bits from a pydpiper pipeline\n\n\n\n\n\nOct 19, 2023\n\n\nJason Lerch\n\n\n\n\n\n\n\n\n\n\n\n\nBetter MRIcrotome brain outlines\n\n\n\n\n\n\nR\n\n\nMRIcrotome\n\n\nRMINC\n\n\n\nHow to make better brain outlines for MRIcrotome\n\n\n\n\n\nSep 16, 2023\n\n\nJason Lerch\n\n\n\n\n\n\n\n\n\n\n\n\nSCT power analyses\n\n\n\n\n\n\nR\n\n\n\nUnderstanding power for the SCT mouse model with some digressions into power in non-orthogonal designs\n\n\n\n\n\nSep 6, 2023\n\n\nJason Lerch and Kamila Szulc-Lerch\n\n\n\n\n\n\n\n\n\n\n\n\nAnnotated MBM command\n\n\n\n\n\n\npydpiper\n\n\n\nAn annotated version of a simple MBM.py command to give a sense of all those pesky options\n\n\n\n\n\nSep 2, 2023\n\n\nJason Lerch\n\n\n\n\n\n\n\n\n\n\n\n\nMINC tools on BMRC cluster\n\n\n\n\n\n\nOxford\n\n\n\nHow to use the MINC tools, including RMINC in RStudio, on Oxford’s BMRC cluster\n\n\n\n\n\nAug 29, 2023\n\n\nJason Lerch\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nAug 29, 2023\n\n\nJason Lerch\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I figured I wrote enough notes for myself or for one specific purpose, mostly on the analysis of mouse brain imaging data, that I might as well put in a bit more effort and make the accessible. Contributions are very much welcome."
  },
  {
    "objectID": "posts/unbalanced-FCG/index.html",
    "href": "posts/unbalanced-FCG/index.html",
    "title": "Unbalanced Four Core Genotype Analyses",
    "section": "",
    "text": "This came out of a discussion related to a rat model designed to explore the same question at the Four Core Genotype mouse model: what happens if you don’t have all four arms? Are you hopelessly confounded? The short answer is no under some assumptions. We’ll explore that with some simple simulations.\nTo start with we’ll create a function to simulate the four core genotype model and then drop one of the arms.\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(broom)\n\n\n\n\nShow the code\ngenerateFCGData &lt;- function(\n    XXM = 0,\n    XXF = 0,\n    XYM = 0,\n    XYF = 0,\n    std = 1,\n    ngroup=10) {\n  rbind(\n    data.frame(group=\"XXM\", gonad=\"T\", chromosomes=\"XX\", \n               volume = rnorm(ngroup, XXM, sd=std)),\n    data.frame(group=\"XXF\", gonad=\"O\", chromosomes=\"XX\", \n               volume = rnorm(ngroup, XXF, sd=std)),\n    data.frame(group=\"XYM\", gonad=\"T\", chromosomes=\"XY\", \n               volume = rnorm(ngroup, XYM, sd=std)),\n    data.frame(group=\"XYF\", gonad=\"O\", chromosomes=\"XY\", \n               volume = rnorm(ngroup, XYF, sd=std))\n  )\n}\n\n\nLet’s assume that having male gonads increases the output variable by 2 standard deviations. That would look as follows:\n\n\nShow the code\nddd &lt;- generateFCGData(XYM=2, XXM=2, ngroup = 500)\n  \nggplot(ddd) + \n  aes(x=group, y=volume, fill=chromosomes) + \n  geom_boxplot() + \n  facet_wrap(~gonad, scales=\"free_x\") +\n  scale_fill_brewer(palette = \"Set1\") + \n  theme_classic()\n\n\n\n\n\n\n\n\n\nLet’s run the stats three ways, first separately fitting gonads and chromosomes and then using an additive model incorporating both chromosomes and gonads:\n\n\nShow the code\nsummary( ( lfg &lt;- lm(volume ~ gonad, ddd)))\n\n\n\nCall:\nlm(formula = volume ~ gonad, data = ddd)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.7454 -0.6958 -0.0124  0.6561  3.9788 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 0.007366   0.031183   0.236    0.813    \ngonadT      1.975542   0.044100  44.797   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9861 on 1998 degrees of freedom\nMultiple R-squared:  0.5011,    Adjusted R-squared:  0.5008 \nF-statistic:  2007 on 1 and 1998 DF,  p-value: &lt; 2.2e-16\n\n\nShow the code\nsummary( ( lfc &lt;- lm(volume ~ chromosomes, ddd)))\n\n\n\nCall:\nlm(formula = volume ~ chromosomes, data = ddd)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4.2282 -1.0332  0.0045  1.0425  4.9794 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    1.00793    0.04415   22.83   &lt;2e-16 ***\nchromosomesXY -0.02559    0.06243   -0.41    0.682    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.396 on 1998 degrees of freedom\nMultiple R-squared:  8.408e-05, Adjusted R-squared:  -0.0004164 \nF-statistic: 0.168 on 1 and 1998 DF,  p-value: 0.6819\n\n\nShow the code\nsummary( ( lfgc &lt;- lm(volume ~ gonad + chromosomes, ddd)))\n\n\n\nCall:\nlm(formula = volume ~ gonad + chromosomes, data = ddd)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.7326 -0.6905 -0.0081  0.6563  3.9916 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    0.02016    0.03820   0.528    0.598    \ngonadT         1.97554    0.04411  44.790   &lt;2e-16 ***\nchromosomesXY -0.02559    0.04411  -0.580    0.562    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9863 on 1997 degrees of freedom\nMultiple R-squared:  0.5012,    Adjusted R-squared:  0.5007 \nF-statistic:  1003 on 2 and 1997 DF,  p-value: &lt; 2.2e-16\n\n\nThe output here is correct - no matter how analyzed, the statistics tell us that having testes increases the output by 2 (everything is in units of standard deviation here), and there is no effect of chromosomes.\nLet’s now drop one of the arms, and assume that rather than having all four groups we do not have the XY female group. The exact same data would look like this:\n\n\nShow the code\nddd &lt;- ddd %&gt;% filter(group!=\"XYF\")\nggplot(ddd) + \n  aes(x=group, y=volume, fill=chromosomes) + \n  geom_boxplot() + \n  facet_wrap(~gonad, scales=\"free_x\") +\n  scale_fill_brewer(palette = \"Set1\") + \n  theme_classic()\n\n\n\n\n\n\n\n\n\nAnd we run the same statistics:\n\n\nShow the code\nsummary( ( lrg &lt;- lm(volume ~ gonad, ddd)))\n\n\n\nCall:\nlm(formula = volume ~ gonad, data = ddd)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.7454 -0.6740 -0.0181  0.6457  3.9788 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.001365   0.044138  -0.031    0.975    \ngonadT       1.984273   0.054058  36.706   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.987 on 1498 degrees of freedom\nMultiple R-squared:  0.4735,    Adjusted R-squared:  0.4732 \nF-statistic:  1347 on 1 and 1498 DF,  p-value: &lt; 2.2e-16\n\n\nShow the code\nsummary( ( lrc &lt;- lm(volume ~ chromosomes, ddd)))\n\n\n\nCall:\nlm(formula = volume ~ chromosomes, data = ddd)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4.2282 -0.9186  0.0336  0.8992  4.0131 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    1.00793    0.04066   24.79   &lt;2e-16 ***\nchromosomesXY  0.94065    0.07043   13.36   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.286 on 1498 degrees of freedom\nMultiple R-squared:  0.1064,    Adjusted R-squared:  0.1058 \nF-statistic: 178.4 on 1 and 1498 DF,  p-value: &lt; 2.2e-16\n\n\nShow the code\nsummary( ( lrgc &lt;- lm(volume ~ gonad + chromosomes, ddd)))\n\n\n\nCall:\nlm(formula = volume ~ gonad + chromosomes, data = ddd)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.7111 -0.6767 -0.0226  0.6470  4.0131 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   -0.001365   0.044135  -0.031    0.975    \ngonadT         2.018595   0.062416  32.341   &lt;2e-16 ***\nchromosomesXY -0.068643   0.062416  -1.100    0.272    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9869 on 1497 degrees of freedom\nMultiple R-squared:  0.474, Adjusted R-squared:  0.4733 \nF-statistic: 674.4 on 2 and 1497 DF,  p-value: &lt; 2.2e-16\n\n\nLosing one arm of the study means that the design is now unbalanced. Looking at the three different stats models shows that modelling only gonads gives the correct answer of a 2 SD increase, but modelling only chromosomes gives an incorrect answer of an increase of 1SD when having XY chromosomes. What saves us is covarying - modelling gonads + chromosomes again returns the correct answer, since the model simultaneously estimates the effects of gonads and chromosomes while controlling for the other.\nLet’s show that graphically:\n\n\nShow the code\nallStats &lt;- rbind(\n  tidy(lfg, conf.int = T) %&gt;% mutate(model = \"FCG: G\"),\n  tidy(lfc, conf.int = T) %&gt;% mutate(model = \"FCG: C\"),\n  tidy(lfgc, conf.int = T) %&gt;% mutate(model = \"FCG: G + C\"),\n  tidy(lrg, conf.int = T) %&gt;% mutate(model = \"uFCG: G\"),\n  tidy(lrc, conf.int = T) %&gt;% mutate(model = \"uFCG: C\"),\n  tidy(lrgc, conf.int = T) %&gt;% mutate(model = \"uFCG: G + C\")\n) %&gt;% filter(term != \"(Intercept)\")\n\ncols &lt;- RColorBrewer::brewer.pal(2, \"Set2\")\n\n\nWarning in RColorBrewer::brewer.pal(2, \"Set2\"): minimal value for n is 3, returning requested palette with 3 different levels\n\n\nShow the code\nallStats %&gt;% \n  ggplot() + \n  aes(x=term, y=estimate, colour=term) + \n  geom_point() + \n  geom_errorbar(aes(ymin=conf.low, ymax=conf.high)) + \n  facet_wrap(.~model, scale=\"free_x\", nrow=1) + \n  theme_classic() + \n  theme(axis.text.x = element_text(angle=45, hjust=1)) + \n  scale_color_manual(values = cols[1:2]) + \n  geom_hline(yintercept = 2, color=cols[2]) +\n  geom_hline(yintercept = 0, color=cols[1]) +\n  labs(title=\"Model effects\", caption=\"FCG = balanced four core genotypes; uFCG = unbalanced four core genotypes (no XYF); C = chromosomes; G = gonads\") \n\n\n\n\n\n\n\n\n\nNow, can’t we just do a simple t-test comparing two groups with the desired contrasts which avoids the issue of more complex modelling? Yes, that works:\n\n\nShow the code\nsummary(lm(volume ~ group, data = ddd %&gt;% filter(group %in% c(\"XXF\", \"XXM\"))))\n\n\n\nCall:\nlm(formula = volume ~ group, data = ddd %&gt;% filter(group %in% \n    c(\"XXF\", \"XXM\")))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.2189 -0.6489 -0.0309  0.6375  3.2199 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.001365   0.044331  -0.031    0.975    \ngroupXXM     2.018595   0.062694  32.198   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9913 on 998 degrees of freedom\nMultiple R-squared:  0.5095,    Adjusted R-squared:  0.509 \nF-statistic:  1037 on 1 and 998 DF,  p-value: &lt; 2.2e-16\n\n\nBut do we pay a price in statistical power? Let’s compare the simple two group comparison to the linear model with all three groups (in the unbalanced FCG case) estimating both a gonad and a chromosome effect.\n\n\nShow the code\nsimNtimes &lt;- function(nsims=100, effectSize=2, ngroup=20) {\n  bFCG &lt;- map(1:nsims, ~ generateFCGData(XYM=effectSize, \n                                         XXM=effectSize, \n                                         ngroup=ngroup))\n  uFCG &lt;- map(bFCG, ~ .x %&gt;% filter(group!=\"XYF\"))\n  tgroup &lt;- map(bFCG, ~ .x %&gt;% filter(group %in% c(\"XXF\", \"XXM\")))\n  \n  lbFCG &lt;- map(bFCG, ~ lm(volume ~ gonad + chromosomes, data=.x))\n  luFCG &lt;- map(uFCG, ~ lm(volume ~ gonad + chromosomes, data=.x))\n  ltgroup &lt;- map(tgroup, ~ lm(volume ~ group, data=.x))\n  \n  tlbFCG &lt;- map(lbFCG, tidy)\n  tluFCG &lt;- map(luFCG, tidy)\n  tltgroup &lt;- map(ltgroup, tidy)\n  \n  data.frame(\n    bFCG = map_dbl(tlbFCG, ~.x %&gt;% filter(term == \"gonadT\") %&gt;% pull(p.value)),\n    uFCG = map_dbl(tluFCG, ~.x %&gt;% filter(term == \"gonadT\") %&gt;% pull(p.value)),\n    twogroup = map_dbl(tltgroup, ~.x %&gt;% filter(term == \"groupXXM\") %&gt;% pull(p.value))\n  )\n  \n}\n\nallSims &lt;- map(seq(0, 2, by=0.1), ~ simNtimes(nsims=200, effectSize=.x, ngroup = 10) %&gt;% mutate(d=.x))\npowerDF &lt;- map_dfr(allSims, ~ .x) %&gt;% group_by(d) %&gt;% summarise_at(vars(bFCG:twogroup), function(x) mean(x&lt;0.05))\n\npowerDF %&gt;% \n  pivot_longer(bFCG:twogroup, values_to = \"power\") %&gt;% \n  ggplot() + aes(x=d, y=power, colour=name) + \n  geom_smooth(method=\"gam\", formula=y~s(x, k=8), se=F) + \n  scale_color_brewer(\"Model\", palette = \"Dark2\", \n                     label=c(\"balanced FCG\", \n                             \"unbalanced FCG\", \n                             \"two group comparison\")) + \n  theme_classic() + \n  xlab(\"Simulated effect size\") + \n  labs(title=\"Power of gonad effect\", caption =\"Assuming n=10 per group\")\n\n\n\n\n\n\n\n\n\nNot really - this shows the power we lose when moving from a balanced FCG dataset to the unbalanced one missing one group. But the power is the same between the two ways of modelling the unbalanced dataset, indicating that in the case of the unbalanced design (i.e. only having three rather than all four groups of the FCG model) the gonad and chromosome terms of the statistical model essentially reduce down to a two-group comparison.\nLet’s expand this to the FCG-like rat model (male arm only for now). There are four genotypes:\n\n\n\nGenotype\nGonads\nSex Chromosomes\nSry\n\n\n\n\nXX\nOvaries\nXX\nNone\n\n\nXX-Sry\nTestes\nXX\nTransgene\n\n\nXY\nTestes\nXY\nWT\n\n\nXY-Sry\nTestes\nXY\nWT + Transgene\n\n\n\nOnce again we need a function to simulate from this dataset\n\n\nShow the code\ngenerateFCGRatData &lt;- function(\n    XX = 0,\n    XXSry = 0,\n    XY = 0,\n    XYSry = 0,\n    std = 1,\n    ngroup=10) {\n  rbind(\n    data.frame(group=\"XX\", gonad=\"O\", chromosomes=\"XX\", sry=0,\n               volume = rnorm(ngroup, XX, sd=std)),\n    data.frame(group=\"XXSry\", gonad=\"T\", chromosomes=\"XX\", sry=1,\n               volume = rnorm(ngroup, XXSry, sd=std)),\n    data.frame(group=\"XY\", gonad=\"T\", chromosomes=\"XY\", sry=1,\n               volume = rnorm(ngroup, XY, sd=std)),\n    data.frame(group=\"XYSry\", gonad=\"T\", chromosomes=\"XY\", sry=2,\n               volume = rnorm(ngroup, XYSry, sd=std))\n  )\n}\n\n\nLet’s see what a few different scenarios look like:\n\n\nShow the code\ngonads &lt;- generateFCGRatData(XX=0, XXSry=2, XY=2, XYSry=2, ngroup = 500) %&gt;%\n  mutate(contrast = \"Gonad\")\nchrom &lt;- generateFCGRatData(XX=0, XXSry=0, XY=2, XYSry=2, ngroup = 500) %&gt;%\n  mutate(contrast = \"Chromosomes\")\nsry &lt;- generateFCGRatData(XX=0, XXSry=2, XY=2, XYSry=4, ngroup = 500) %&gt;%\n  mutate(contrast = \"Sry\")\n  \nrbind(gonads, chrom, sry) %&gt;%\nggplot() + \n  aes(x=group, y=volume, fill=chromosomes) + \n  geom_boxplot() + \n  facet_wrap(~gonad, scales=\"free_x\") +\n  scale_fill_brewer(palette = \"Set1\") + \n  facet_grid(contrast ~ .) + \n  theme_classic()\n\n\n\n\n\n\n\n\n\nCan we appropriately detect the right effects in those models, focusing first on analyzing gonads and chromosomes?\n\n\nShow the code\nsummary(lm(volume ~ gonad + chromosomes, data=gonads))\n\n\n\nCall:\nlm(formula = volume ~ gonad + chromosomes, data = gonads)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.8756 -0.6872  0.0102  0.7343  3.1346 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   -0.08300    0.04609  -1.801   0.0719 .  \ngonadT         2.01885    0.06518  30.973   &lt;2e-16 ***\nchromosomesXY  0.02316    0.05645   0.410   0.6816    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.031 on 1997 degrees of freedom\nMultiple R-squared:  0.4225,    Adjusted R-squared:  0.422 \nF-statistic: 730.6 on 2 and 1997 DF,  p-value: &lt; 2.2e-16\n\n\nShow the code\nsummary(lm(volume ~ gonad + chromosomes, data=chrom))\n\n\n\nCall:\nlm(formula = volume ~ gonad + chromosomes, data = chrom)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.4137 -0.6712  0.0006  0.6486  3.3420 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    0.01415    0.04415   0.321    0.749    \ngonadT        -0.02937    0.06244  -0.470    0.638    \nchromosomesXY  1.99849    0.05407  36.958   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9873 on 1997 degrees of freedom\nMultiple R-squared:  0.5027,    Adjusted R-squared:  0.5023 \nF-statistic:  1010 on 2 and 1997 DF,  p-value: &lt; 2.2e-16\n\n\nYes. What about treating sry as an ordered factor (i.e. assuming that a dose of 2 is more than a dose of 1, but not assuming that it is purely linear).\n\n\nShow the code\nsummary(lm(volume ~ sry + chromosomes, data=gonads %&gt;% mutate(sry=as.ordered(sry))))\n\n\n\nCall:\nlm(formula = volume ~ sry + chromosomes, data = gonads %&gt;% mutate(sry = as.ordered(sry)))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.8941 -0.6866  0.0108  0.7368  3.1346 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    1.27522    0.04065  31.367   &lt;2e-16 ***\nsry.L          1.45367    0.06519  22.298   &lt;2e-16 ***\nsry.Q         -0.80910    0.03764 -21.496   &lt;2e-16 ***\nchromosomesXY  0.00468    0.06519   0.072    0.943    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.031 on 1996 degrees of freedom\nMultiple R-squared:  0.4226,    Adjusted R-squared:  0.4218 \nF-statistic:   487 on 3 and 1996 DF,  p-value: &lt; 2.2e-16\n\n\nShow the code\nsummary(lm(volume ~ sry + chromosomes, data=chrom %&gt;% mutate(sry=as.ordered(sry))))\n\n\n\nCall:\nlm(formula = volume ~ sry + chromosomes, data = chrom %&gt;% mutate(sry = as.ordered(sry)))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.4013 -0.6672 -0.0009  0.6498  3.3296 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   -0.013689   0.038946  -0.351    0.725    \nsry.L         -0.038291   0.062453  -0.613    0.540    \nsry.Q          0.001874   0.036057   0.052    0.959    \nchromosomesXY  2.010883   0.062453  32.198   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9875 on 1996 degrees of freedom\nMultiple R-squared:  0.5028,    Adjusted R-squared:  0.502 \nF-statistic: 672.8 on 3 and 1996 DF,  p-value: &lt; 2.2e-16\n\n\nShow the code\nsummary(lm(volume ~ sry + chromosomes, data=sry %&gt;% mutate(sry=as.ordered(sry))))\n\n\n\nCall:\nlm(formula = volume ~ sry + chromosomes, data = sry %&gt;% mutate(sry = as.ordered(sry)))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.1755 -0.6923 -0.0411  0.6464  3.1876 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    2.05109    0.03977  51.569   &lt;2e-16 ***\nsry.L          2.94565    0.06378  46.185   &lt;2e-16 ***\nsry.Q         -0.01815    0.03682  -0.493    0.622    \nchromosomesXY -0.03225    0.06378  -0.506    0.613    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.008 on 1996 degrees of freedom\nMultiple R-squared:  0.6779,    Adjusted R-squared:  0.6774 \nF-statistic:  1400 on 3 and 1996 DF,  p-value: &lt; 2.2e-16\n\n\nStill works but is a bit more unstable. Some interpretation aids to these models - when treating sry as an ordered factor, there are two possible trends - a linear trends, indicating that with every increase in sry there is an increase in the outcome, and a quadratic trend, indicating that going from 1 to 2 is not the same as going from 0 to 1. So in our third model where we artificially simulated an increase with every dose of sry there is a linear increase (sry.L), but no quadratic increase (sry.Q is non-significant). But in the gonad model there is both a linear and a quadratic effect, since having 2 sry copies (WT + transgene) has the same effect as having one sry copy.\nWhat about power? First just looking at the gonads + chromosomes model:\n\n\nShow the code\nsimRatNtimes &lt;- function(nsims=100, effectSize=2, ngroup=20) {\n  ratG &lt;- map(1:nsims, ~ generateFCGRatData(XX=0,\n                                            XXSry=effectSize,\n                                            XY=effectSize,\n                                            XYSry=effectSize,\n                                            ngroup=ngroup))\n  ratC &lt;- map(1:nsims, ~ generateFCGRatData(XX=0,\n                                            XXSry=0,\n                                            XY=effectSize,\n                                            XYSry=effectSize,\n                                            ngroup=ngroup))\n  \n  lratG &lt;- map(ratG, ~ lm(volume ~ gonad + chromosomes, data=.x))\n  lratC &lt;- map(ratC, ~ lm(volume ~ gonad + chromosomes, data=.x))\n  \n  tlratG &lt;- map(lratG, tidy)\n  tlratC &lt;- map(lratC, tidy)\n  \n  data.frame(\n    gonads = map_dbl(tlratG, ~.x %&gt;% filter(term == \"gonadT\") %&gt;% pull(p.value)),\n    chromosomes = map_dbl(tlratC, ~.x %&gt;% filter(term == \"chromosomesXY\") %&gt;% pull(p.value))\n  )\n  \n}\n\nallRatSims &lt;- map(seq(0, 2, by=0.1), ~ simRatNtimes(nsims=200, effectSize=.x, ngroup = 10) %&gt;% mutate(d=.x))\npowerDF &lt;- map_dfr(allRatSims, ~ .x) %&gt;% group_by(d) %&gt;% summarise_at(vars(gonads:chromosomes), function(x) mean(x&lt;0.05))\n\npowerDF %&gt;% \n  pivot_longer(gonads:chromosomes, values_to = \"power\") %&gt;% \n  ggplot() + aes(x=d, y=power, colour=name) + \n  geom_smooth(method=\"gam\", formula=y~s(x, k=8), se=F) + \n  scale_color_brewer(\"Model\", palette = \"Dark2\") + \n  theme_classic() + \n  xlab(\"Simulated effect size\") + \n  labs(title=\"Power of FCG-like rat study\", \n       subtitle=\"Modelling gonads + chromosomes\",\n       caption =\"Assuming n=10 per group\")\n\n\n\n\n\n\n\n\n\nGiven the unbalanced design for gonads there is some power differential, in that it is easier to detect a chromosome effect than a gonad effect.\nAnd if we model sry as an ordered factor?\n\n\nShow the code\nsimRatNtimesOF &lt;- function(nsims=100, effectSize=2, ngroup=20) {\n  ratG &lt;- map(1:nsims, ~ generateFCGRatData(XX=0,\n                                            XXSry=effectSize,\n                                            XY=effectSize,\n                                            XYSry=effectSize,\n                                            ngroup=ngroup) %&gt;%\n    mutate(sry = as.ordered(sry))) \n  ratC &lt;- map(1:nsims, ~ generateFCGRatData(XX=0,\n                                            XXSry=0,\n                                            XY=effectSize,\n                                            XYSry=effectSize,\n                                            ngroup=ngroup) %&gt;%\n    mutate(sry = as.ordered(sry))) \n  ratS &lt;- map(1:nsims, ~ generateFCGRatData(XX=0,\n                                            XXSry=effectSize,\n                                            XY=effectSize,\n                                            XYSry=effectSize*2,\n                                            ngroup=ngroup) %&gt;%\n    mutate(sry = as.ordered(sry))) \n  \n  lratG &lt;- map(ratG, ~ lm(volume ~ sry + chromosomes, data=.x))\n  lratC &lt;- map(ratC, ~ lm(volume ~ sry + chromosomes, data=.x))\n  lratS &lt;- map(ratS, ~ lm(volume ~ sry + chromosomes, data=.x))\n  \n  tlratG &lt;- map(lratG, tidy)\n  tlratC &lt;- map(lratC, tidy)\n  tlratS &lt;- map(lratS, tidy)\n  \n  data.frame(\n    gonads = map_dbl(tlratG, ~.x %&gt;% filter(term == \"sry.L\") %&gt;% pull(p.value)),\n    chromosomes = map_dbl(tlratC, ~.x %&gt;% filter(term == \"chromosomesXY\") %&gt;% pull(p.value)),\n    sryL = map_dbl(tlratS, ~.x %&gt;% filter(term == \"sry.L\") %&gt;% pull(p.value)),\n    sryQ = map_dbl(tlratS, ~.x %&gt;% filter(term == \"sry.Q\") %&gt;% pull(p.value))\n  )\n  \n}\n\nallRatSims &lt;- map(seq(0, 2, by=0.1), ~ simRatNtimesOF(nsims=200, effectSize=.x, ngroup = 10) %&gt;% mutate(d=.x))\npowerDF &lt;- map_dfr(allRatSims, ~ .x) %&gt;% group_by(d) %&gt;% summarise_at(vars(gonads:sryQ), function(x) mean(x&lt;0.05))\n\npowerDF %&gt;% \n  pivot_longer(gonads:sryQ, values_to = \"power\") %&gt;% \n  ggplot() + aes(x=d, y=power, colour=name) + \n  geom_smooth(method=\"gam\", formula=y~s(x, k=8), se=F) + \n  scale_color_brewer(\"Model\", palette = \"Dark2\") + \n  theme_classic() + \n  xlab(\"Simulated effect size\") + \n  labs(title=\"Power of FCG-like rat study\", \n       subtitle=\"Modelling sry + chromosomes\",\n       caption =\"Assuming n=10 per group\")\n\n\n\n\n\n\n\n\n\nHere the gonads model looks at the linear part of the sry term when there is a change in the presence of sry but no dosage effect. sryL looks at the linear term when there is a dosage effect, which is now the most powered term (since there are three possible steps), and sryQ looks at the quadratic effect when there is a simulated dosage effect which is rightly 0."
  },
  {
    "objectID": "posts/unbalanced-FCG/index.knit.html",
    "href": "posts/unbalanced-FCG/index.knit.html",
    "title": "Unbalanced Four Core Genotype Analyses",
    "section": "",
    "text": "This came out of a discussion related to a rat model designed to explore the same question at the Four Core Genotype mouse model: what happens if you don’t have all four arms? Are you hopelessly confounded? The short answer is no under some assumptions. We’ll explore that with some simple simulations.\nTo start with we’ll create a function to simulate the four core genotype model and then drop one of the arms.\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(broom)\n\n\n\n\nShow the code\ngenerateFCGData &lt;- function(\n    XXM = 0,\n    XXF = 0,\n    XYM = 0,\n    XYF = 0,\n    std = 1,\n    ngroup=10) {\n  rbind(\n    data.frame(group=\"XXM\", gonad=\"T\", chromosomes=\"XX\", \n               volume = rnorm(ngroup, XXM, sd=std)),\n    data.frame(group=\"XXF\", gonad=\"O\", chromosomes=\"XX\", \n               volume = rnorm(ngroup, XXF, sd=std)),\n    data.frame(group=\"XYM\", gonad=\"T\", chromosomes=\"XY\", \n               volume = rnorm(ngroup, XYM, sd=std)),\n    data.frame(group=\"XYF\", gonad=\"O\", chromosomes=\"XY\", \n               volume = rnorm(ngroup, XYF, sd=std))\n  )\n}\n\n\nLet’s assume that having male gonads increases the output variable by 2 standard deviations. That would look as follows:\n\n\nShow the code\nddd &lt;- generateFCGData(XYM=2, XXM=2, ngroup = 500)\n  \nggplot(ddd) + \n  aes(x=group, y=volume, fill=chromosomes) + \n  geom_boxplot() + \n  facet_wrap(~gonad, scales=\"free_x\") +\n  scale_fill_brewer(palette = \"Set1\") + \n  theme_classic()\n\n\n\n\n\n\n\n\n\nLet’s run the stats three ways, first separately fitting gonads and chromosomes and then using an additive model incorporating both chromosomes and gonads:\n\n\nShow the code\nsummary( ( lfg &lt;- lm(volume ~ gonad, ddd)))\n\n\n\nCall:\nlm(formula = volume ~ gonad, data = ddd)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.7156 -0.6636 -0.0165  0.6493  4.7112 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 0.009019   0.031619   0.285    0.775    \ngonadT      2.005040   0.044716  44.839   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9999 on 1998 degrees of freedom\nMultiple R-squared:  0.5016,    Adjusted R-squared:  0.5013 \nF-statistic:  2011 on 1 and 1998 DF,  p-value: &lt; 2.2e-16\n\n\nShow the code\nsummary( ( lfc &lt;- lm(volume ~ chromosomes, ddd)))\n\n\n\nCall:\nlm(formula = volume ~ chromosomes, data = ddd)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4.1828 -1.0775 -0.0058  1.0610  3.7782 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   1.009075   0.044786  22.531   &lt;2e-16 ***\nchromosomesXY 0.004928   0.063337   0.078    0.938    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.416 on 1998 degrees of freedom\nMultiple R-squared:  3.03e-06,  Adjusted R-squared:  -0.0004975 \nF-statistic: 0.006054 on 1 and 1998 DF,  p-value: 0.938\n\n\nShow the code\nsummary( ( lfgc &lt;- lm(volume ~ gonad + chromosomes, ddd)))\n\n\n\nCall:\nlm(formula = volume ~ gonad + chromosomes, data = ddd)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.7131 -0.6636 -0.0182  0.6503  4.7088 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   0.006555   0.038735   0.169    0.866    \ngonadT        2.005040   0.044727  44.828   &lt;2e-16 ***\nchromosomesXY 0.004928   0.044727   0.110    0.912    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1 on 1997 degrees of freedom\nMultiple R-squared:  0.5016,    Adjusted R-squared:  0.5011 \nF-statistic:  1005 on 2 and 1997 DF,  p-value: &lt; 2.2e-16\n\n\nThe output here is correct - no matter how analyzed, the statistics tell us that having testes increases the output by 2 (everything is in units of standard deviation here), and there is no effect of chromosomes.\nLet’s now drop one of the arms, and assume that rather than having all four groups we do not have the XY female group. The exact same data would look like this:\n\n\nShow the code\nddd &lt;- ddd %&gt;% filter(group!=\"XYF\")\nggplot(ddd) + \n  aes(x=group, y=volume, fill=chromosomes) + \n  geom_boxplot() + \n  facet_wrap(~gonad, scales=\"free_x\") +\n  scale_fill_brewer(palette = \"Set1\") + \n  theme_classic()\n\n\n\n\n\n\n\n\n\nAnd we run the same statistics:\n\n\nShow the code\nsummary( ( lrg &lt;- lm(volume ~ gonad, ddd)))\n\n\n\nCall:\nlm(formula = volume ~ gonad, data = ddd)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.7156 -0.6517 -0.0149  0.6648  3.1468 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.00683    0.04411  -0.155    0.877    \ngonadT       2.02089    0.05403  37.405   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9864 on 1498 degrees of freedom\nMultiple R-squared:  0.4829,    Adjusted R-squared:  0.4826 \nF-statistic:  1399 on 1 and 1498 DF,  p-value: &lt; 2.2e-16\n\n\nShow the code\nsummary( ( lrc &lt;- lm(volume ~ chromosomes, ddd)))\n\n\n\nCall:\nlm(formula = volume ~ chromosomes, data = ddd)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.7430 -0.9230 -0.0218  0.9341  3.6675 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    1.00908    0.04077   24.75   &lt;2e-16 ***\nchromosomesXY  0.99406    0.07061   14.08   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.289 on 1498 degrees of freedom\nMultiple R-squared:  0.1169,    Adjusted R-squared:  0.1163 \nF-statistic: 198.2 on 1 and 1498 DF,  p-value: &lt; 2.2e-16\n\n\nShow the code\nsummary( ( lrgc &lt;- lm(volume ~ gonad + chromosomes, ddd)))\n\n\n\nCall:\nlm(formula = volume ~ gonad + chromosomes, data = ddd)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.7265 -0.6531 -0.0141  0.6660  3.1468 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   -0.00683    0.04413  -0.155    0.877    \ngonadT         2.03181    0.06240  32.559   &lt;2e-16 ***\nchromosomesXY -0.02184    0.06240  -0.350    0.726    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9867 on 1497 degrees of freedom\nMultiple R-squared:  0.483, Adjusted R-squared:  0.4823 \nF-statistic: 699.2 on 2 and 1497 DF,  p-value: &lt; 2.2e-16\n\n\nLosing one arm of the study means that the design is now unbalanced. Looking at the three different stats models shows that modelling only gonads gives the correct answer of a 2 SD increase, but modelling only chromosomes gives an incorrect answer of an increase of 1SD when having XY chromosomes. What saves us is covarying - modelling gonads + chromosomes again returns the correct answer, since the model simultaneously estimates the effects of gonads and chromosomes while controlling for the other.\nLet’s show that graphically:\n\n\nShow the code\nallStats &lt;- rbind(\n  tidy(lfg, conf.int = T) %&gt;% mutate(model = \"FCG: G\"),\n  tidy(lfc, conf.int = T) %&gt;% mutate(model = \"FCG: C\"),\n  tidy(lfgc, conf.int = T) %&gt;% mutate(model = \"FCG: G + C\"),\n  tidy(lrg, conf.int = T) %&gt;% mutate(model = \"uFCG: G\"),\n  tidy(lrc, conf.int = T) %&gt;% mutate(model = \"uFCG: C\"),\n  tidy(lrgc, conf.int = T) %&gt;% mutate(model = \"uFCG: G + C\")\n) %&gt;% filter(term != \"(Intercept)\")\n\ncols &lt;- RColorBrewer::brewer.pal(2, \"Set2\")\n\n\nWarning in RColorBrewer::brewer.pal(2, \"Set2\"): minimal value for n is 3, returning requested palette with 3 different levels\n\n\nShow the code\nallStats %&gt;% \n  ggplot() + \n  aes(x=term, y=estimate, colour=term) + \n  geom_point() + \n  geom_errorbar(aes(ymin=conf.low, ymax=conf.high)) + \n  facet_wrap(.~model, scale=\"free_x\", nrow=1) + \n  theme_classic() + \n  theme(axis.text.x = element_text(angle=45, hjust=1)) + \n  scale_color_manual(values = cols[1:2]) + \n  geom_hline(yintercept = 2, color=cols[2]) +\n  geom_hline(yintercept = 0, color=cols[1]) +\n  labs(title=\"Model effects\", caption=\"FCG = balanced four core genotypes; uFCG = unbalanced four core genotypes (no XYF); C = chromosomes; G = gonads\") \n\n\n\n\n\n\n\n\n\nNow, can’t we just do a simple t-test comparing two groups with the desired contrasts which avoids the issue of more complex modelling? Yes, that works:\n\n\nShow the code\nsummary(lm(volume ~ group, data = ddd %&gt;% filter(group %in% c(\"XXF\", \"XXM\"))))\n\n\n\nCall:\nlm(formula = volume ~ group, data = ddd %&gt;% filter(group %in% \n    c(\"XXF\", \"XXM\")))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.7265 -0.6673 -0.0127  0.6692  3.1468 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -0.00683    0.04414  -0.155    0.877    \ngroupXXM     2.03181    0.06242  32.551   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9869 on 998 degrees of freedom\nMultiple R-squared:  0.515, Adjusted R-squared:  0.5145 \nF-statistic:  1060 on 1 and 998 DF,  p-value: &lt; 2.2e-16\n\n\nBut do we pay a price in statistical power? Let’s compare the simple two group comparison to the linear model with all three groups (in the unbalanced FCG case) estimating both a gonad and a chromosome effect.\n\n\nShow the code\nsimNtimes &lt;- function(nsims=100, effectSize=2, ngroup=20) {\n  bFCG &lt;- map(1:nsims, ~ generateFCGData(XYM=effectSize, \n                                         XXM=effectSize, \n                                         ngroup=ngroup))\n  uFCG &lt;- map(bFCG, ~ .x %&gt;% filter(group!=\"XYF\"))\n  tgroup &lt;- map(bFCG, ~ .x %&gt;% filter(group %in% c(\"XXF\", \"XXM\")))\n  \n  lbFCG &lt;- map(bFCG, ~ lm(volume ~ gonad + chromosomes, data=.x))\n  luFCG &lt;- map(uFCG, ~ lm(volume ~ gonad + chromosomes, data=.x))\n  ltgroup &lt;- map(tgroup, ~ lm(volume ~ group, data=.x))\n  \n  tlbFCG &lt;- map(lbFCG, tidy)\n  tluFCG &lt;- map(luFCG, tidy)\n  tltgroup &lt;- map(ltgroup, tidy)\n  \n  data.frame(\n    bFCG = map_dbl(tlbFCG, ~.x %&gt;% filter(term == \"gonadT\") %&gt;% pull(p.value)),\n    uFCG = map_dbl(tluFCG, ~.x %&gt;% filter(term == \"gonadT\") %&gt;% pull(p.value)),\n    twogroup = map_dbl(tltgroup, ~.x %&gt;% filter(term == \"groupXXM\") %&gt;% pull(p.value))\n  )\n  \n}\n\nallSims &lt;- map(seq(0, 2, by=0.1), ~ simNtimes(nsims=200, effectSize=.x, ngroup = 10) %&gt;% mutate(d=.x))\npowerDF &lt;- map_dfr(allSims, ~ .x) %&gt;% group_by(d) %&gt;% summarise_at(vars(bFCG:twogroup), function(x) mean(x&lt;0.05))\n\npowerDF %&gt;% \n  pivot_longer(bFCG:twogroup, values_to = \"power\") %&gt;% \n  ggplot() + aes(x=d, y=power, colour=name) + \n  geom_smooth(method=\"gam\", formula=y~s(x, k=8), se=F) + \n  scale_color_brewer(\"Model\", palette = \"Dark2\", \n                     label=c(\"balanced FCG\", \n                             \"unbalanced FCG\", \n                             \"two group comparison\")) + \n  theme_classic() + \n  xlab(\"Simulated effect size\") + \n  labs(title=\"Power of gonad effect\", caption =\"Assuming n=10 per group\")\n\n\n\n\n\n\n\n\n\nNot really - this shows the power we lose when moving from a balanced FCG dataset to the unbalanced one missing one group. But the power is the same between the two ways of modelling the unbalanced dataset, indicating that in the case of the unbalanced design (i.e. only having three rather than all four groups of the FCG model) the gonad and chromosome terms of the statistical model essentially reduce down to a two-group comparison.\nLet’s expand this to the FCG-like rat model (male arm only for now). There are four genotypes:\n\n\n\nGenotype\nGonads\nSex Chromosomes\nSry\n\n\n\n\nXX\nOvaries\nXX\nNone\n\n\nXX-Sry\nTestes\nXX\nTransgene\n\n\nXY\nTestes\nXY\nWT\n\n\nXY-Sry\nTestes\nXY\nWT + Transgene\n\n\n\nOnce again we need a function to simulate from this dataset\n\n\nShow the code\ngenerateFCGRatData &lt;- function(\n    XX = 0,\n    XXSry = 0,\n    XY = 0,\n    XYSry = 0,\n    std = 1,\n    ngroup=10) {\n  rbind(\n    data.frame(group=\"XX\", gonad=\"O\", chromosomes=\"XX\", sry=0,\n               volume = rnorm(ngroup, XX, sd=std)),\n    data.frame(group=\"XXSry\", gonad=\"T\", chromosomes=\"XX\", sry=1,\n               volume = rnorm(ngroup, XXSry, sd=std)),\n    data.frame(group=\"XY\", gonad=\"T\", chromosomes=\"XY\", sry=1,\n               volume = rnorm(ngroup, XY, sd=std)),\n    data.frame(group=\"XYSry\", gonad=\"T\", chromosomes=\"XY\", sry=2,\n               volume = rnorm(ngroup, XYSry, sd=std))\n  )\n}\n\n\nLet’s see what a few different scenarios look like:\n\n\nShow the code\ngonads &lt;- generateFCGRatData(XX=0, XXSry=2, XY=2, XYSry=2, ngroup = 500) %&gt;%\n  mutate(contrast = \"Gonad\")\nchrom &lt;- generateFCGRatData(XX=0, XXSry=0, XY=2, XYSry=2, ngroup = 500) %&gt;%\n  mutate(contrast = \"Chromosomes\")\nsry &lt;- generateFCGRatData(XX=0, XXSry=2, XY=2, XYSry=4, ngroup = 500) %&gt;%\n  mutate(contrast = \"Sry\")\n  \nrbind(gonads, chrom, sry) %&gt;%\nggplot() + \n  aes(x=group, y=volume, fill=chromosomes) + \n  geom_boxplot() + \n  facet_wrap(~gonad, scales=\"free_x\") +\n  scale_fill_brewer(palette = \"Set1\") + \n  facet_grid(contrast ~ .) + \n  theme_classic()\n\n\n\n\n\n\n\n\n\nCan we appropriately detect the right effects in those models, focusing first on analyzing gonads and chromosomes?\n\n\nShow the code\nsummary(lm(volume ~ gonad + chromosomes, data=gonads))\n\n\n\nCall:\nlm(formula = volume ~ gonad + chromosomes, data = gonads)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.7327 -0.7017  0.0092  0.6782  3.4847 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   -0.01110    0.04458  -0.249    0.803    \ngonadT         1.99798    0.06305  31.687   &lt;2e-16 ***\nchromosomesXY  0.03613    0.05461   0.662    0.508    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.997 on 1997 degrees of freedom\nMultiple R-squared:  0.4359,    Adjusted R-squared:  0.4353 \nF-statistic: 771.6 on 2 and 1997 DF,  p-value: &lt; 2.2e-16\n\n\nShow the code\nsummary(lm(volume ~ gonad + chromosomes, data=chrom))\n\n\n\nCall:\nlm(formula = volume ~ gonad + chromosomes, data = chrom)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.2552 -0.6764  0.0075  0.6762  3.9444 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   -0.0002106  0.0452218  -0.005    0.996    \ngonadT         0.0081282  0.0639532   0.127    0.899    \nchromosomesXY  2.0090115  0.0553851  36.273   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.011 on 1997 degrees of freedom\nMultiple R-squared:  0.4981,    Adjusted R-squared:  0.4976 \nF-statistic: 990.8 on 2 and 1997 DF,  p-value: &lt; 2.2e-16\n\n\nYes. What about treating sry as an ordered factor (i.e. assuming that a dose of 2 is more than a dose of 1, but not assuming that it is purely linear).\n\n\nShow the code\nsummary(lm(volume ~ sry + chromosomes, data=gonads %&gt;% mutate(sry=as.ordered(sry))))\n\n\n\nCall:\nlm(formula = volume ~ sry + chromosomes, data = gonads %&gt;% mutate(sry = as.ordered(sry)))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.7327 -0.6991  0.0081  0.6783  3.4847 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)    1.31744    0.03933  33.497   &lt;2e-16 ***\nsry.L          1.40547    0.06307  22.285   &lt;2e-16 ***\nsry.Q         -0.81990    0.03641 -22.517   &lt;2e-16 ***\nchromosomesXY  0.04130    0.06307   0.655    0.513    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9972 on 1996 degrees of freedom\nMultiple R-squared:  0.4359,    Adjusted R-squared:  0.4351 \nF-statistic: 514.1 on 3 and 1996 DF,  p-value: &lt; 2.2e-16\n\n\nShow the code\nsummary(lm(volume ~ sry + chromosomes, data=chrom %&gt;% mutate(sry=as.ordered(sry))))\n\n\n\nCall:\nlm(formula = volume ~ sry + chromosomes, data = chrom %&gt;% mutate(sry = as.ordered(sry)))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.2552 -0.6742  0.0073  0.6762  3.9444 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   -0.004533   0.039890  -0.114    0.910    \nsry.L         -0.014917   0.063966  -0.233    0.816    \nsry.Q         -0.015249   0.036931  -0.413    0.680    \nchromosomesXY  2.023624   0.063966  31.636   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.011 on 1996 degrees of freedom\nMultiple R-squared:  0.4981,    Adjusted R-squared:  0.4974 \nF-statistic: 660.4 on 3 and 1996 DF,  p-value: &lt; 2.2e-16\n\n\nShow the code\nsummary(lm(volume ~ sry + chromosomes, data=sry %&gt;% mutate(sry=as.ordered(sry))))\n\n\n\nCall:\nlm(formula = volume ~ sry + chromosomes, data = sry %&gt;% mutate(sry = as.ordered(sry)))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.5094 -0.6478 -0.0062  0.6706  3.6643 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   1.994594   0.038950  51.209   &lt;2e-16 ***\nsry.L         2.863991   0.062459  45.854   &lt;2e-16 ***\nsry.Q         0.033932   0.036061   0.941    0.347    \nchromosomesXY 0.003616   0.062459   0.058    0.954    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9876 on 1996 degrees of freedom\nMultiple R-squared:  0.6786,    Adjusted R-squared:  0.6781 \nF-statistic:  1405 on 3 and 1996 DF,  p-value: &lt; 2.2e-16\n\n\nStill works but is a bit more unstable. Some interpretation aids to these models - when treating sry as an ordered factor, there are two possible trends - a linear trends, indicating that with every increase in sry there is an increase in the outcome, and a quadratic trend, indicating that going from 1 to 2 is not the same as going from 0 to 1. So in our third model where we artificially simulated an increase with every dose of sry there is a linear increase (sry.L), but no quadratic increase (sry.Q is non-significant). But in the gonad model there is both a linear and a quadratic effect, since having 2 sry copies (WT + transgene) has the same effect as having one sry copy.\nWhat about power? First just looking at the gonads + chromosomes model:\n\n\nShow the code\nsimRatNtimes &lt;- function(nsims=100, effectSize=2, ngroup=20) {\n  ratG &lt;- map(1:nsims, ~ generateFCGRatData(XX=0,\n                                            XXSry=effectSize,\n                                            XY=effectSize,\n                                            XYSry=effectSize,\n                                            ngroup=ngroup))\n  ratC &lt;- map(1:nsims, ~ generateFCGRatData(XX=0,\n                                            XXSry=0,\n                                            XY=effectSize,\n                                            XYSry=effectSize,\n                                            ngroup=ngroup))\n  \n  lratG &lt;- map(ratG, ~ lm(volume ~ gonad + chromosomes, data=.x))\n  lratC &lt;- map(ratC, ~ lm(volume ~ gonad + chromosomes, data=.x))\n  \n  tlratG &lt;- map(lratG, tidy)\n  tlratC &lt;- map(lratC, tidy)\n  \n  data.frame(\n    gonads = map_dbl(tlratG, ~.x %&gt;% filter(term == \"gonadT\") %&gt;% pull(p.value)),\n    chromosomes = map_dbl(tlratC, ~.x %&gt;% filter(term == \"chromosomesXY\") %&gt;% pull(p.value))\n  )\n  \n}\n\nallRatSims &lt;- map(seq(0, 2, by=0.1), ~ simRatNtimes(nsims=200, effectSize=.x, ngroup = 10) %&gt;% mutate(d=.x))\npowerDF &lt;- map_dfr(allRatSims, ~ .x) %&gt;% group_by(d) %&gt;% summarise_at(vars(gonads:chromosomes), function(x) mean(x&lt;0.05))\n\npowerDF %&gt;% \n  pivot_longer(gonads:chromosomes, values_to = \"power\") %&gt;% \n  ggplot() + aes(x=d, y=power, colour=name) + \n  geom_smooth(method=\"gam\", formula=y~s(x, k=8), se=F) + \n  scale_color_brewer(\"Model\", palette = \"Dark2\") + \n  theme_classic() + \n  xlab(\"Simulated effect size\") + \n  labs(title=\"Power of FCG-like rat study\", \n       subtitle=\"Modelling gonads + chromosomes\",\n       caption =\"Assuming n=10 per group\")\n\n\n\n\n\n\n\n\n\nGiven the unbalanced design for gonads there is some power differential, in that it is easier to detect a chromosome effect than a gonad effect.\nAnd if we model sry as an ordered factor?\n\n\nShow the code\nsimRatNtimesOF &lt;- function(nsims=100, effectSize=2, ngroup=20) {\n  ratG &lt;- map(1:nsims, ~ generateFCGRatData(XX=0,\n                                            XXSry=effectSize,\n                                            XY=effectSize,\n                                            XYSry=effectSize,\n                                            ngroup=ngroup) %&gt;%\n    mutate(sry = as.ordered(sry))) \n  ratC &lt;- map(1:nsims, ~ generateFCGRatData(XX=0,\n                                            XXSry=0,\n                                            XY=effectSize,\n                                            XYSry=effectSize,\n                                            ngroup=ngroup) %&gt;%\n    mutate(sry = as.ordered(sry))) \n  ratS &lt;- map(1:nsims, ~ generateFCGRatData(XX=0,\n                                            XXSry=effectSize,\n                                            XY=effectSize,\n                                            XYSry=effectSize*2,\n                                            ngroup=ngroup) %&gt;%\n    mutate(sry = as.ordered(sry))) \n  \n  lratG &lt;- map(ratG, ~ lm(volume ~ sry + chromosomes, data=.x))\n  lratC &lt;- map(ratC, ~ lm(volume ~ sry + chromosomes, data=.x))\n  lratS &lt;- map(ratS, ~ lm(volume ~ sry + chromosomes, data=.x))\n  \n  tlratG &lt;- map(lratG, tidy)\n  tlratC &lt;- map(lratC, tidy)\n  tlratS &lt;- map(lratS, tidy)\n  \n  data.frame(\n    gonads = map_dbl(tlratG, ~.x %&gt;% filter(term == \"sry.L\") %&gt;% pull(p.value)),\n    chromosomes = map_dbl(tlratC, ~.x %&gt;% filter(term == \"chromosomesXY\") %&gt;% pull(p.value)),\n    sryL = map_dbl(tlratS, ~.x %&gt;% filter(term == \"sry.L\") %&gt;% pull(p.value)),\n    sryQ = map_dbl(tlratS, ~.x %&gt;% filter(term == \"sry.Q\") %&gt;% pull(p.value))\n  )\n  \n}\n\nallRatSims &lt;- map(seq(0, 2, by=0.1), ~ simRatNtimesOF(nsims=200, effectSize=.x, ngroup = 10) %&gt;% mutate(d=.x))\npowerDF &lt;- map_dfr(allRatSims, ~ .x) %&gt;% group_by(d) %&gt;% summarise_at(vars(gonads:sryQ), function(x) mean(x&lt;0.05))\n\npowerDF %&gt;% \n  pivot_longer(gonads:sryQ, values_to = \"power\") %&gt;% \n  ggplot() + aes(x=d, y=power, colour=name) + \n  geom_smooth(method=\"gam\", formula=y~s(x, k=8), se=F) + \n  scale_color_brewer(\"Model\", palette = \"Dark2\") + \n  theme_classic() + \n  xlab(\"Simulated effect size\") + \n  labs(title=\"Power of FCG-like rat study\", \n       subtitle=\"Modelling sry + chromosomes\",\n       caption =\"Assuming n=10 per group\")\n\n\n\n\n\n\n\n\n\nHere the gonads model looks at the linear part of the sry term when there is a change in the presence of sry but no dosage effect. sryL looks at the linear term when there is a dosage effect, which is now the most powered term (since there are three possible steps), and sryQ looks at the quadratic effect when there is a simulated dosage effect which is rightly 0."
  },
  {
    "objectID": "posts/index.html",
    "href": "posts/index.html",
    "title": "Dev data part 4",
    "section": "",
    "text": "Load the data from Tiffany’s most recent export.\n\n\nShow the code\nload(\"~/data/tiffany/brain_analysis_data_2025jan02.RData\")\n\n\nLoad various libraries. Note that it requires a dev version of MRIcrotome for some of the images generated below (can be installed from the ggMRIcrotome branch on github).\n\n\nShow the code\nlibrary(tidyverse)\nlibrary(data.tree)\nlibrary(RMINC)\nlibrary(ggplot2)\nlibrary(MRIcrotome)\nlibrary(emmeans)\nlibrary(broom)\nlibrary(mgcv)\n\n\nNext some data munging. Ordered factors are treated differently in GAMs than in standard linear models, so created ordered versions of the important factors.\n\n\nShow the code\ngf &lt;-  gf %&gt;%\n  mutate(oTreatment = as.ordered(Treatment),\n         oSex = as.ordered(Sex),\n         subject_id = as.factor(subject_id))\n\n\nNow onto the linear models. We’ll use two throughout this analysis. First we detect whether genotype influenced the development of any brain structures, using Equation 1\n\\[\n\\text{Volume}_{i,t} = \\beta_0 + \\beta_1 \\cdot \\text{bv}_{i,t} + \\beta_2 \\cdot \\text{Genotype}_i + f_1(\\text{age}_{i,t}) + f_2(\\text{age}_{i,t}, \\text{Genotype}_i) + f_3(\\text{subject}_i) + \\epsilon_{i,t}\n\\tag{1}\\]\nWhere:\n\n\\(\\beta_0\\) is the intercept.\n\\(\\beta_1\\) is the fixed effect coefficient to remove the effect of overall brain volume, assumed constant for both genotypes.\n\\(\\beta_2\\) is the fixed effect term for genotype representing any global offsets present across the developmental period.\n\\(f_1(\\text{age}_{i,t})\\) is a cubic regression spline smooth function, constrained to have a maximum basis dimension of \\(k = 5\\), estimated for the wild-type mice (as they are the reference level factor for genotype)\n\\(f_2(\\text{age}_{i,t}, \\text{Genotype}_i)\\) is a cubic regression spline smooth function, constratined to have a maxium basis dimension of \\(k = 5\\), estimating the difference in slopes between hemizygous mutants and wild-type mice.\n\\(f_3(\\text{subject}_i)\\) represents the random intercept to account for the longitudinal nature of the data.\n\\(\\epsilon_{i,t} \\sim \\mathcal{N}(0,\\sigma^2)\\) residual error at each timepoint.\n\nThis equation is implemented as a general additive model via the mgcv packages in R (Wood 2011). P-values for the smooth term \\(f_2(\\text{age}_{i,t}, \\text{Genotype}_i)\\) are then then computed via summary.gam and corrected for multiple comparisons using the False Discovery Rate (FDR) (Benjamini and Hochberg 1995).\n\n\nShow the code\ndiffGamModel &lt;- function(x) {\n  gf %&gt;%\n    mutate(roi = x$volumes,\n           bv = hvols$volumes) %&gt;%\n    gam(roi ~ bv + \n          oTreatment + \n          s(age, bs=\"cs\", k=5, m=2) + \n          s(age, bs=\"cs\", by=oTreatment, k=5, m=1) + \n          s(subject_id, bs='re'), data=., method=\"REML\")\n}\n\n\nNext, we also use a slightly more relaxed model that estimates separate slopes for MAR ASD and controls to test when and where differences in mean volumes and differences in developmental slopes emerge.\n\\[\n\\text{Volume}_{i,t} = \\beta_0 + \\beta_1 \\cdot \\text{bv}_{i,t} + \\beta_2 \\cdot \\text{Genotype}_i + f_1(\\text{age}_{i,t}, \\text{Genotype}_i) + f_2(\\text{subject}_i) + \\epsilon_{i,t}\n\\tag{2}\\]\nThe key difference between equation Equation 1 and Equation 2 is that, in Equation 1 genotype differences in growth are computed by first fitting a slope to the wild-type mice and then a separate slope estimating how the hemizygous mutants differ from wild-types. This is inherently more conservative than equation Equation 2 which fits the two genotypes independently.\nTo understand the developmental patterns of brain growth we then tested whether genotypes were different in volume and/or in slope at every day of age between P03 and P182 using estimated marginal means (Lenth 2023). Summary results, showing how many brain structures are notionally significant at every day in either slopes or means are shown in figure ?@fig-ageslopesregion.\n\n\nShow the code\nslopeGamModel &lt;- function(x) { \n    gf %&gt;%\n    mutate(roi = x$volumes,\n           bv = hvols$volumes) %&gt;%\n    gam(roi ~ bv + \n          Treatment + \n          s(age, bs=\"cs\", by=Treatment, k=5) + \n          s(subject_id, bs='re'), data=., method=\"REML\")\n  }\n\n\nHaving defined the models, we now fit them for every brain structure in the hierarchy, retaining the p values from the slope and intercept effects terms. (Note that the intercept effects are unlikely to be very interesting since we start so young in these mice).\n\n\nShow the code\nvolList &lt;- Traverse(hvols)\ndiffGamAll &lt;- map(volList, diffGamModel)\n\nsummarydiffGam &lt;- function(x) {\n  data.frame(\n    mainTreatmentT = tidy(x, parametric = T)[3,4][[1]],\n    mainTreatmentP = tidy(x, parametric = T)[3,5][[1]],\n    slopeTreatmentP = tidy(x)[2,5][[1]]\n  )\n}\n\ndiffGamAllSums &lt;- rbind(NA, map_dfr(diffGamAll[2:length(diffGamAll)], summarydiffGam))\n\nhvols$Set(mainTreatmentT = diffGamAllSums$mainTreatmentT)\nhvols$Set(mainTreatmentP = diffGamAllSums$mainTreatmentP)\nhvols$Set(slopeTreatmentP = diffGamAllSums$slopeTreatmentP)\n\nhvolsSym &lt;- Clone(hvols)\nPrune(hvolsSym, function(x) !str_starts(x$name, \"right\") & !str_starts(x$name, \"left\"))\n\n\nThen we create a function to plot effects for any one brain structure, showing both the growth curves as well as differences in means and differences in slopes over time.\n\n\nShow the code\nlibrary(patchwork)\nlibrary(emmeans)\nlibrary(ggrepel)\nlibrary(scales)\nlibrary(ggside)\n\nsigGroups &lt;- function(diffs) {\n    diffs$diffGroup &lt;- \n    c(0, cumsum((diffs[1:nrow(diffs)-1,\"p.value\"] &lt;= 0.05) != (diffs[2:nrow(diffs),\"p.value\"] &lt;= 0.05)))\n  \n  splitdiffs &lt;- split(diffs, diffs$diffGroup)\n  for (i in 1:(length(splitdiffs)-1)) {\n    splitdiffs[[i]] &lt;- rbind(splitdiffs[[i]], \n                                 splitdiffs[[i+1]][1,] %&gt;% \n                                   mutate(psig=splitdiffs[[i]]$psig[1],\n                                          diffGroup=splitdiffs[[i]]$diffGroup[1]))\n  }\n  Reduce(rbind, splitdiffs)\n}\n\nplotROI &lt;- function(roi, title=NULL, themesize=9) {\n  \n  if (is.null(title)) {\n    title=roi\n  }\n  \n  vcolors &lt;- viridis_pal()(3)[1:2]\n  \n  roiNode &lt;- FindNode(hvols, roi)\n  roiGam &lt;- slopeGamModel(roiNode)\n  \n\n  meanDiffs &lt;- emmeans(roiGam, ~ Treatment | age, \n                       at=list(age=seq(3,182))) %&gt;%\n    pairs(rev=T, adjust=\"none\") %&gt;% tidy(conf.int=T)%&gt;%\n    mutate(psig = p.value &lt;= 0.05)\n  \n  meanDiffs &lt;- sigGroups(meanDiffs)\n  \n  slopeDiffs &lt;- emtrends(roiGam, ~ Treatment | age, var=\"age\", \n                         at=list(age=seq(3,182))) %&gt;%\n    pairs(rev=T) %&gt;% tidy(conf.int=T) %&gt;%\n    mutate(psig = p.value &lt;= 0.05)\n  \n  slopeDiffs &lt;- sigGroups(slopeDiffs)\n  \n\n  pdata &lt;- gf %&gt;% \n    mutate(bv = hvols$volumes,\n           roi = roiNode$volumes) %&gt;%\n    filter(!is.na(roi) & !is.na(bv)) %&gt;%\n    mutate(roi = residuals(lm(roi~bv)))#,\n           #age = readr::parse_integer(as.character(group)))\n  \n    groupMeans &lt;- emmeans(gam(roi ~ s(age, bs=\"cs\", k=5, by=Treatment), \n                              data=pdata, method=\"REML\"), \n                          ~ Treatment | age, at=list(age=55)) %&gt;%\n    tidy(conf.int=T)\n    smaller &lt;- groupMeans %&gt;% filter(estimate == min(estimate))\n    larger &lt;- groupMeans %&gt;% filter(estimate == max(estimate))\n   \n  p1 &lt;- ggplot(pdata) + \n    aes(x=age, y=roi, colour=Treatment) + \n    geom_point(alpha=0.2) + \n    geom_smooth(method=\"gam\", formula=y~s(x, bs=\"cs\", k=5)) + \n    geom_label(data=smaller, vjust=1.3,\n               aes(x=55, y=conf.low, label=as.character(Treatment))) + \n    geom_label(data=larger, vjust=-0.3,\n               aes(x=55, y=conf.high, label=as.character(Treatment))) +\n    geom_xsidetile(data=subset(slopeDiffs, p.value&lt;=0.05), \n                   aes(y=ifelse(p.value&lt;0.05, \"slope *\", NA), colour=NA),\n                   fill=muted(\"orange\")) +\n    geom_xsidetile(data=subset(meanDiffs, p.value&lt;=0.05), \n                   aes(y=ifelse(p.value&lt;0.05, \"means *\", NA), colour=NA),\n                   fill=muted(\"purple\")) +\n    ggside(x.pos = \"bottom\", respect_side_labels = \"none\") + \n    scale_color_manual(values=vcolors,\n                       breaks=levels(gf$Treatment)) + \n    theme_minimal(themesize) + \n    theme(legend.position = c(45, -0.1),\n          axis.title.x = element_blank()) + \n    ylab(expression(atop(\"Residual volume\",(mm^3)))) + \n    ggtitle(title)\n  \n\n  \n  p2 &lt;- ggplot(meanDiffs) +\n    aes(x=age, y=estimate, ymin=conf.low, ymax=conf.high) + \n    geom_line(colour=muted(\"red\")) + \n    #geom_ribbon(alpha=0.2, linewidth=0) + \n    geom_ribbon(data=meanDiffs, aes(group=diffGroup, fill=psig), alpha=0.3) +\n    scale_fill_manual(values=c(\"gray\", muted(\"purple\")), guide=\"none\") + \n    geom_hline(yintercept = 0) + \n    #ylab(bquote(atop(Volume ~ diff), (mm^3))) + \n    ylab(expression(atop(\"Volume diff\",(mm^3)))) + \n    #geom_rug(data=subset(meanDiffs, p.value &lt;= 0.05), sides=\"b\", linewidth=3) + \n    theme_minimal(themesize) \n  \n  \n  p3 &lt;- ggplot(slopeDiffs) +\n    aes(x=age, y=estimate, ymin=conf.low, ymax=conf.high) + \n    geom_line(colour=muted(\"red\")) + \n    #geom_ribbon(alpha=0.2, linewidth=0) + \n    geom_ribbon(data=slopeDiffs, aes(group=diffGroup, fill=psig), alpha=0.3) +\n    scale_fill_manual(values=c(\"gray\", muted(\"orange\")), guide=\"none\") + \n    geom_hline(yintercept = 0) + \n    ylab(expression(atop(\"Slope diff\",(mm^3/day)))) + \n    #geom_rug(data=subset(slopeDiffs, p.value &lt;= 0.05), sides=\"b\", linewidth=3) + \n    #geom_rug(data=subset(meanDiffs, p.value &lt;= 0.05), sides=\"b\") + \n    theme_minimal(themesize) + \n    theme(axis.title.x = element_blank())\n  \n  p1 + p3 + p2 + plot_layout(ncol=1, heights = c(2,1,1))\n}\n\n\nNext, we’ll also load the volumes and define slice series for a number of developmental timepoints. For ease here we’ll just use the developmental atlas rather than the non-linear models that are output from the MAR-ASD pipeline.\n\n\nShow the code\nlibrary(terra)\nlibrary(sf)\nlibrary(smoothr)\nlibrary(glue)\n\ndevTimepoints &lt;- c(3,5,7,10,17,23,29,36,65)\natlasDir &lt;- \"/Users/jason/data/MAGeT_atlases\"\ndevSeries &lt;- list()\nfor (p in devTimepoints) {\n  tp &lt;- sprintf(\"p%02d\", p)\n  devSeries[[tp]] &lt;- list(\n    average = mincArray(mincGetVolume(glue(\"{atlasDir}/{tp}/{tp}_average.mnc\"))),\n    labels = mincArray(mincGetVolume(glue(\"{atlasDir}/{tp}/{tp}_labels.mnc\")))\n  )\n  # build a slice series to go from first location with labels to last\n  lR &lt;- range(which(apply(devSeries[[tp]]$labels&gt;0, 2, any)))\n  devSeries[[tp]][[\"quantiles\"]] &lt;- quantile(devSeries[[tp]][[\"average\"]][devSeries[[tp]][[\"labels\"]]&gt;0.5], c(0.05, 0.95))\n  devSeries[[tp]][[\"labelRange\"]] &lt;- lR\n  devSeries[[tp]][[\"slices\"]] &lt;- c(map(seq(lR[1]+10, lR[2]-10, length.out=10), ~c(round(.x), 2)), list(c(70,1)))\n  devSeries[[tp]][[\"sliceSeries\"]] &lt;- MRIcrotome(\n    devSeries[[tp]][[\"average\"]] * (devSeries[[tp]][[\"labels\"]]&gt;0.5),\n    devSeries[[tp]][[\"labels\"]],\n    hvolsSym,\n    devSeries[[tp]][[\"slices\"]],\n    sliceOffset = 5\n  )\n}\n\n\nTime to begin looking at some results. First, identifying regions where there are differences in slopes. You can mouse over to read the ROI name and corresponding -log10 p-value.\n\n\nShow the code\nlibrary(ggiraph)\nhvolsSym$Set(log10slopeTreatmentP = -log10(hvolsSym$Get(\"slopeTreatmentP\")))\n\ntp &lt;- \"p65\"\n\ntmpdata &lt;- ToDataFrameTable(hvolsSym, \"name\", \"log10slopeTreatmentP\")\ntmpdata &lt;- inner_join(devSeries[[tp]][[\"sliceSeries\"]]$data, tmpdata, by=(c(\"region\" = \"name\")))\n\n\npSlices &lt;- MRIcroscope(devSeries[[tp]][[\"sliceSeries\"]]) %&gt;%\n  add_anatomy() +\n  #add_roi_overlay(data=hvolsSym, log10slopeTreatmentP, symmetric = F) + \n  geom_sf_interactive(data=tmpdata, aes(fill=log10slopeTreatmentP, tooltip=paste0(region, \": \", round(log10slopeTreatmentP, 3)))) + \n  scale_fill_viridis_c(\"log10 p-value\", limits=c(1.3,3), na.value=\"transparent\") + \n  #scale_fill_posneg(\"log10 p-value\", low=1.3, high=3) + \n  theme_void(9) + \n  theme(legend.position = \"bottom\") + \n  guides(fill = guide_colourbar(title.position=\"top\", title.hjust = 0.5)) \n\n\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n\n\nShow the code\ngirafe(ggobj = pSlices)\n\n\n\n\n\n\nLet’s plot some of the key ROIs.\n\n\nShow the code\nplotROI(\"Primary motor cortex\")\n\n\nWarning: A numeric `legend.position` argument in `theme()` was deprecated in ggplot2\n3.5.0.\nℹ Please use the `legend.position.inside` argument of `theme()` instead.\n\n\n\n\n\n\n\n\n\nShow the code\nplotROI(\"Crus 1\")\n\n\n\n\n\n\n\n\n\nShow the code\nplotROI(\"corpus callosum\")\n\n\n\n\n\n\n\n\n\nNow let’s look across time at when there are peaks of mean and slope differences across development.\n\n\nShow the code\nslopeGamAll &lt;- map(volList, slopeGamModel)\n\n\nWarning in newton(lsp = lsp, X = G$X, y = G$y, Eb = G$Eb, UrS = G$UrS, L =\nG$L, : Fitting terminated with step failure - check results carefully\n\n\nShow the code\nmeanDiffsGam &lt;- function(x) {\n  emmeans(x, ~ Treatment | age, at=list(age=seq(3,182))) %&gt;%\n    pairs(rev=T, adjust=\"none\") %&gt;% tidy(conf.int=T)\n}\nslopeDiffsGam &lt;- function(x) {\n  emtrends(x, ~ Treatment | age, var=\"age\", at=list(age=seq(3,182))) %&gt;%\n    pairs(rev=T) %&gt;% tidy(conf.int=T)\n}\n\nwidenDiffGam &lt;- function(x) {\n  x %&gt;% \n    select(age, estimate, statistic, p.value) %&gt;%\n    pivot_wider(names_from = age, values_from = -age)\n}\n\nmeanDiffsAll &lt;- map(slopeGamAll, meanDiffsGam)\nslopeDiffsAll &lt;- map(slopeGamAll, slopeDiffsGam)\nmeanDiffsAllWide &lt;- map_dfr(meanDiffsAll, widenDiffGam)\nslopeDiffsAllWide &lt;- map_dfr(slopeDiffsAll, widenDiffGam)\n\n\n\n\nShow the code\nslopeDiffsPacrossAge &lt;- slopeDiffsAllWide %&gt;% summarize(across(starts_with(\"p.value\"), ~ mean(.x &lt;= 0.05))) %&gt;% pivot_longer(everything(), names_to = c(\".value\", \"name\"), names_pattern = \"(.+)_(.+)\") %&gt;% mutate(name=as.numeric(name)) \n\ntmpcols &lt;- scales::brewer_pal(palette=\"Set1\")(3)\n\n(pSlopeMeans &lt;- meanDiffsAllWide %&gt;% summarize(across(starts_with(\"p.value\"), ~ mean(.x &lt;= 0.05))) %&gt;% pivot_longer(everything(), names_to = c(\".value\", \"name\"), names_pattern = \"(.+)_(.+)\") %&gt;% mutate(name=as.numeric(name)) %&gt;%\n  mutate(slopes = slopeDiffsPacrossAge$p.value, means=p.value) %&gt;%\n  select(name, slopes, means) %&gt;%\n  pivot_longer(cols=-name, names_to = \"statistic\") %&gt;%\n  ggplot() + \n  aes(x=name, y=value, colour=statistic) + \n  geom_line() + \n  geom_hline(yintercept=0.05) + \n  geom_ribbon(aes(ymin=0.034, ymax=0.066, xmin=-Inf, xmax=Inf), linewidth=0, alpha=0.2) + \n  #scale_x_continuous(limits=c(5,65)) + \n  ylab(\"proportion p&lt;0.05\") + \n  xlab(\"age\") + \n    scale_colour_manual(values=tmpcols[1:2], guide=\"none\") + \n  theme_minimal(9) + \n  annotate(\"text\", x=65, y=0.12, colour=tmpcols[1], label=\"means\") + \n  annotate(\"text\", x=80, y=0.08, colour=tmpcols[2], label=\"slopes\") + \n    ggtitle(\"a) slopes and means over development\"))\n\n\n\n\n\n\n\n\n\nAnd finally we put those back onto the brain. First for the means\n\n\nShow the code\nlibrary(gridExtra)\n\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\n\nShow the code\nlibrary(cowplot)\n\n\n\nAttaching package: 'cowplot'\n\n\nThe following object is masked from 'package:patchwork':\n\n    align_plots\n\n\nShow the code\nwidths &lt;- map_dbl(devSeries, ~ncol(.x$sliceSeries$anatomy))\n\npList &lt;- list()\naList &lt;- list()\nfor (p in devTimepoints[2:9]) {\n  tp &lt;- sprintf(\"p%02d\", p)\n  hvols$Set(tp = meanDiffsAllWide[,glue(\"statistic_{p}\")][[1]])\n  hvolsSym &lt;- Clone(hvols)\n  Prune(hvolsSym, function(x) !str_starts(x$name, \"right\") & !str_starts(x$name, \"left\"))\n  pList[[tp]] &lt;- MRIcroscope(devSeries[[tp]][[\"sliceSeries\"]]) %&gt;%\n    add_anatomy(low = devSeries[[tp]][[\"quantiles\"]][1],\n                high = devSeries[[tp]][[\"quantiles\"]][2]) %&gt;%\n    add_roi_overlay(data=hvolsSym, tp) + \n    scale_fill_posneg(\"t-statistic\", low=2, high=5) + \n    annotate(\"text\", x=widths[tp]/2, y=-5, label=tp) + \n    theme(legend.position = \"none\", axis.title = element_blank())\n} \n\n\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\n\n\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\n\n\nShow the code\n# redo one plot with a legend added back in\ntmpp &lt;- pList[[2]] + theme(legend.position = \"right\")\npLegend &lt;- cowplot::get_plot_component(tmpp, \"guide-box\", return_all=TRUE)\n\ngrid.arrange(grobs=c(pList, list(pLegend[[1]])) ,widths = c(widths[2:9], widths[9]), \n             heights = 707, respect=T, nrow=1, ncol=9)\n\n\n\n\n\n\n\n\n\nAnd then for the slopes\n\n\nShow the code\nwidths &lt;- map_dbl(devSeries, ~ncol(.x$sliceSeries$anatomy))\n\npList &lt;- list()\naList &lt;- list()\nfor (p in devTimepoints[2:9]) {\n  tp &lt;- sprintf(\"p%02d\", p)\n  hvols$Set(tp = slopeDiffsAllWide[,glue(\"statistic_{p}\")][[1]])\n  hvolsSym &lt;- Clone(hvols)\n  Prune(hvolsSym, function(x) !str_starts(x$name, \"right\") & !str_starts(x$name, \"left\"))\n  pList[[tp]] &lt;- MRIcroscope(devSeries[[tp]][[\"sliceSeries\"]]) %&gt;%\n    add_anatomy(low = devSeries[[tp]][[\"quantiles\"]][1],\n                high = devSeries[[tp]][[\"quantiles\"]][2]) %&gt;%\n    add_roi_overlay(data=hvolsSym, tp) + \n    scale_fill_posneg(\"t-statistic\", low=2, high=5) + \n    annotate(\"text\", x=widths[tp]/2, y=-5, label=tp) + \n    theme(legend.position = \"none\", axis.title = element_blank())\n} \n\n\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\nCoordinate system already present. Adding new coordinate system, which will\nreplace the existing one.\nScale for fill is already present.\nAdding another scale for fill, which will replace the existing scale.\n\n\nShow the code\n# redo one plot with a legend added back in\ntmpp &lt;- pList[[2]] + theme(legend.position = \"right\")\npLegend &lt;- cowplot::get_plot_component(tmpp, \"guide-box\", return_all=TRUE)\n\ngrid.arrange(grobs=c(pList, list(pLegend[[1]])) ,widths = c(widths[2:9], widths[9]), \n             heights = 707, respect=T, nrow=1, ncol=9)\n\n\n\n\n\n\n\n\n\n\n\n\n\nReferences\n\nBenjamini, Yoav, and Yosef Hochberg. 1995. “Controlling the False Discovery Rate: A Practical and Powerful Approach to Multiple Testing.” Journal of the Royal Statistical Society. Series B (Methodological) 57 (1): 289–300. https://www.jstor.org/stable/2346101.\n\n\nLenth, Russell V. 2023. Emmeans: Estimated Marginal Means, Aka Least-Squares Means. Manual. https://CRAN.R-project.org/package=emmeans.\n\n\nWood, S. N. 2011. “Fast Stable Restricted Maximum Likelihood and Marginal Likelihood Estimation of Semiparametric Generalized Linear Models.” Journal of the Royal Statistical Society (B) 73 (1): 3–36."
  }
]